// Generated by Construct 2, the HTML5 game and app creator :: http://www.scirra.com
var cr = {};
cr.plugins_ = {};
cr.behaviors = {};
if (typeof Object.getPrototypeOf !== "function")
{
	if (typeof "test".__proto__ === "object")
	{
		Object.getPrototypeOf = function(object) {
			return object.__proto__;
		};
	}
	else
	{
		Object.getPrototypeOf = function(object) {
			return object.constructor.prototype;
		};
	}
}
(function(){
	cr.logexport = function (msg)
	{
		if (window.console && window.console.log)
			window.console.log(msg);
	};
	cr.seal = function(x)
	{
		return x;
	};
	cr.freeze = function(x)
	{
		return x;
	};
	cr.is_undefined = function (x)
	{
		return typeof x === "undefined";
	};
	cr.is_number = function (x)
	{
		return typeof x === "number";
	};
	cr.is_string = function (x)
	{
		return typeof x === "string";
	};
	cr.isPOT = function (x)
	{
		return x > 0 && ((x - 1) & x) === 0;
	};
	cr.nextHighestPowerOfTwo = function(x) {
		--x;
		for (var i = 1; i < 32; i <<= 1) {
			x = x | x >> i;
		}
		return x + 1;
	}
	cr.abs = function (x)
	{
		return (x < 0 ? -x : x);
	};
	cr.max = function (a, b)
	{
		return (a > b ? a : b);
	};
	cr.min = function (a, b)
	{
		return (a < b ? a : b);
	};
	cr.PI = Math.PI;
	cr.round = function (x)
	{
		return (x + 0.5) | 0;
	};
	cr.floor = function (x)
	{
		if (x >= 0)
			return x | 0;
		else
			return (x | 0) - 1;		// correctly round down when negative
	};
	cr.ceil = function (x)
	{
		var f = x | 0;
		return (f === x ? f : f + 1);
	};
	function Vector2(x, y)
	{
		this.x = x;
		this.y = y;
		cr.seal(this);
	};
	Vector2.prototype.offset = function (px, py)
	{
		this.x += px;
		this.y += py;
		return this;
	};
	Vector2.prototype.mul = function (px, py)
	{
		this.x *= px;
		this.y *= py;
		return this;
	};
	cr.vector2 = Vector2;
	cr.segments_intersect = function(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y)
	{
		var max_ax, min_ax, max_ay, min_ay, max_bx, min_bx, max_by, min_by;
		if (a1x < a2x)
		{
			min_ax = a1x;
			max_ax = a2x;
		}
		else
		{
			min_ax = a2x;
			max_ax = a1x;
		}
		if (b1x < b2x)
		{
			min_bx = b1x;
			max_bx = b2x;
		}
		else
		{
			min_bx = b2x;
			max_bx = b1x;
		}
		if (max_ax < min_bx || min_ax > max_bx)
			return false;
		if (a1y < a2y)
		{
			min_ay = a1y;
			max_ay = a2y;
		}
		else
		{
			min_ay = a2y;
			max_ay = a1y;
		}
		if (b1y < b2y)
		{
			min_by = b1y;
			max_by = b2y;
		}
		else
		{
			min_by = b2y;
			max_by = b1y;
		}
		if (max_ay < min_by || min_ay > max_by)
			return false;
		var dpx = b1x - a1x + b2x - a2x;
		var dpy = b1y - a1y + b2y - a2y;
		var qax = a2x - a1x;
		var qay = a2y - a1y;
		var qbx = b2x - b1x;
		var qby = b2y - b1y;
		var d = cr.abs(qay * qbx - qby * qax);
		var la = qbx * dpy - qby * dpx;
		if (cr.abs(la) > d)
			return false;
		var lb = qax * dpy - qay * dpx;
		return cr.abs(lb) <= d;
	};
	function Rect(left, top, right, bottom)
	{
		this.set(left, top, right, bottom);
		cr.seal(this);
	};
	Rect.prototype.set = function (left, top, right, bottom)
	{
		this.left = left;
		this.top = top;
		this.right = right;
		this.bottom = bottom;
	};
	Rect.prototype.copy = function (r)
	{
		this.left = r.left;
		this.top = r.top;
		this.right = r.right;
		this.bottom = r.bottom;
	};
	Rect.prototype.width = function ()
	{
		return this.right - this.left;
	};
	Rect.prototype.height = function ()
	{
		return this.bottom - this.top;
	};
	Rect.prototype.offset = function (px, py)
	{
		this.left += px;
		this.top += py;
		this.right += px;
		this.bottom += py;
		return this;
	};
	Rect.prototype.normalize = function ()
	{
		var temp = 0;
		if (this.left > this.right)
		{
			temp = this.left;
			this.left = this.right;
			this.right = temp;
		}
		if (this.top > this.bottom)
		{
			temp = this.top;
			this.top = this.bottom;
			this.bottom = temp;
		}
	};
	Rect.prototype.intersects_rect = function (rc)
	{
		return !(rc.right < this.left || rc.bottom < this.top || rc.left > this.right || rc.top > this.bottom);
	};
	Rect.prototype.intersects_rect_off = function (rc, ox, oy)
	{
		return !(rc.right + ox < this.left || rc.bottom + oy < this.top || rc.left + ox > this.right || rc.top + oy > this.bottom);
	};
	Rect.prototype.contains_pt = function (x, y)
	{
		return (x >= this.left && x <= this.right) && (y >= this.top && y <= this.bottom);
	};
	Rect.prototype.equals = function (r)
	{
		return this.left === r.left && this.top === r.top && this.right === r.right && this.bottom === r.bottom;
	};
	cr.rect = Rect;
	function Quad()
	{
		this.tlx = 0;
		this.tly = 0;
		this.trx = 0;
		this.try_ = 0;	// is a keyword otherwise!
		this.brx = 0;
		this.bry = 0;
		this.blx = 0;
		this.bly = 0;
		cr.seal(this);
	};
	Quad.prototype.set_from_rect = function (rc)
	{
		this.tlx = rc.left;
		this.tly = rc.top;
		this.trx = rc.right;
		this.try_ = rc.top;
		this.brx = rc.right;
		this.bry = rc.bottom;
		this.blx = rc.left;
		this.bly = rc.bottom;
	};
	Quad.prototype.set_from_rotated_rect = function (rc, a)
	{
		if (a === 0)
		{
			this.set_from_rect(rc);
		}
		else
		{
			var sin_a = Math.sin(a);
			var cos_a = Math.cos(a);
			var left_sin_a = rc.left * sin_a;
			var top_sin_a = rc.top * sin_a;
			var right_sin_a = rc.right * sin_a;
			var bottom_sin_a = rc.bottom * sin_a;
			var left_cos_a = rc.left * cos_a;
			var top_cos_a = rc.top * cos_a;
			var right_cos_a = rc.right * cos_a;
			var bottom_cos_a = rc.bottom * cos_a;
			this.tlx = left_cos_a - top_sin_a;
			this.tly = top_cos_a + left_sin_a;
			this.trx = right_cos_a - top_sin_a;
			this.try_ = top_cos_a + right_sin_a;
			this.brx = right_cos_a - bottom_sin_a;
			this.bry = bottom_cos_a + right_sin_a;
			this.blx = left_cos_a - bottom_sin_a;
			this.bly = bottom_cos_a + left_sin_a;
		}
	};
	Quad.prototype.offset = function (px, py)
	{
		this.tlx += px;
		this.tly += py;
		this.trx += px;
		this.try_ += py;
		this.brx += px;
		this.bry += py;
		this.blx += px;
		this.bly += py;
		return this;
	};
	var minresult = 0;
	var maxresult = 0;
	function minmax4(a, b, c, d)
	{
		if (a < b)
		{
			if (c < d)
			{
				if (a < c)
					minresult = a;
				else
					minresult = c;
				if (b > d)
					maxresult = b;
				else
					maxresult = d;
			}
			else
			{
				if (a < d)
					minresult = a;
				else
					minresult = d;
				if (b > c)
					maxresult = b;
				else
					maxresult = c;
			}
		}
		else
		{
			if (c < d)
			{
				if (b < c)
					minresult = b;
				else
					minresult = c;
				if (a > d)
					maxresult = a;
				else
					maxresult = d;
			}
			else
			{
				if (b < d)
					minresult = b;
				else
					minresult = d;
				if (a > c)
					maxresult = a;
				else
					maxresult = c;
			}
		}
	};
	Quad.prototype.bounding_box = function (rc)
	{
		minmax4(this.tlx, this.trx, this.brx, this.blx);
		rc.left = minresult;
		rc.right = maxresult;
		minmax4(this.tly, this.try_, this.bry, this.bly);
		rc.top = minresult;
		rc.bottom = maxresult;
	};
	Quad.prototype.contains_pt = function (x, y)
	{
		var v0x = this.trx - this.tlx;
		var v0y = this.try_ - this.tly;
		var v1x = this.brx - this.tlx;
		var v1y = this.bry - this.tly;
		var v2x = x - this.tlx;
		var v2y = y - this.tly;
		var dot00 = v0x * v0x + v0y * v0y
		var dot01 = v0x * v1x + v0y * v1y
		var dot02 = v0x * v2x + v0y * v2y
		var dot11 = v1x * v1x + v1y * v1y
		var dot12 = v1x * v2x + v1y * v2y
		var invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);
		var u = (dot11 * dot02 - dot01 * dot12) * invDenom;
		var v = (dot00 * dot12 - dot01 * dot02) * invDenom;
		if ((u >= 0.0) && (v > 0.0) && (u + v < 1))
			return true;
		v0x = this.blx - this.tlx;
		v0y = this.bly - this.tly;
		var dot00 = v0x * v0x + v0y * v0y
		var dot01 = v0x * v1x + v0y * v1y
		var dot02 = v0x * v2x + v0y * v2y
		invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);
		u = (dot11 * dot02 - dot01 * dot12) * invDenom;
		v = (dot00 * dot12 - dot01 * dot02) * invDenom;
		return (u >= 0.0) && (v > 0.0) && (u + v < 1);
	};
	Quad.prototype.at = function (i, xory)
	{
		if (xory)
		{
			switch (i)
			{
				case 0: return this.tlx;
				case 1: return this.trx;
				case 2: return this.brx;
				case 3: return this.blx;
				case 4: return this.tlx;
				default: return this.tlx;
			}
		}
		else
		{
			switch (i)
			{
				case 0: return this.tly;
				case 1: return this.try_;
				case 2: return this.bry;
				case 3: return this.bly;
				case 4: return this.tly;
				default: return this.tly;
			}
		}
	};
	Quad.prototype.midX = function ()
	{
		return (this.tlx + this.trx  + this.brx + this.blx) / 4;
	};
	Quad.prototype.midY = function ()
	{
		return (this.tly + this.try_ + this.bry + this.bly) / 4;
	};
	Quad.prototype.intersects_segment = function (x1, y1, x2, y2)
	{
		if (this.contains_pt(x1, y1) || this.contains_pt(x2, y2))
			return true;
		var a1x, a1y, a2x, a2y;
		var i;
		for (i = 0; i < 4; i++)
		{
			a1x = this.at(i, true);
			a1y = this.at(i, false);
			a2x = this.at(i + 1, true);
			a2y = this.at(i + 1, false);
			if (cr.segments_intersect(x1, y1, x2, y2, a1x, a1y, a2x, a2y))
				return true;
		}
		return false;
	};
	Quad.prototype.intersects_quad = function (rhs)
	{
		var midx = rhs.midX();
		var midy = rhs.midY();
		if (this.contains_pt(midx, midy))
			return true;
		midx = this.midX();
		midy = this.midY();
		if (rhs.contains_pt(midx, midy))
			return true;
		var a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y;
		var i, j;
		for (i = 0; i < 4; i++)
		{
			for (j = 0; j < 4; j++)
			{
				a1x = this.at(i, true);
				a1y = this.at(i, false);
				a2x = this.at(i + 1, true);
				a2y = this.at(i + 1, false);
				b1x = rhs.at(j, true);
				b1y = rhs.at(j, false);
				b2x = rhs.at(j + 1, true);
				b2y = rhs.at(j + 1, false);
				if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
					return true;
			}
		}
		return false;
	};
	cr.quad = Quad;
	cr.RGB = function (red, green, blue)
	{
		return Math.max(Math.min(red, 255), 0)
			 | (Math.max(Math.min(green, 255), 0) << 8)
			 | (Math.max(Math.min(blue, 255), 0) << 16);
	};
	cr.GetRValue = function (rgb)
	{
		return rgb & 0xFF;
	};
	cr.GetGValue = function (rgb)
	{
		return (rgb & 0xFF00) >> 8;
	};
	cr.GetBValue = function (rgb)
	{
		return (rgb & 0xFF0000) >> 16;
	};
	cr.shallowCopy = function (a, b, allowOverwrite)
	{
		var attr;
		for (attr in b)
		{
			if (b.hasOwnProperty(attr))
			{
;
				a[attr] = b[attr];
			}
		}
		return a;
	};
	cr.arrayRemove = function (arr, index)
	{
		var i, len;
		index = cr.floor(index);
		if (index < 0 || index >= arr.length)
			return;							// index out of bounds
		for (i = index, len = arr.length - 1; i < len; i++)
			arr[i] = arr[i + 1];
		arr.length = len;
	};
	cr.shallowAssignArray = function (dest, src)
	{
		dest.length = src.length;
		var i, len;
		for (i = 0, len = src.length; i < len; i++)
			dest[i] = src[i];
	};
	cr.appendArray = function (a, b)
	{
		a.push.apply(a, b);
	};
	cr.fastIndexOf = function (arr, item)
	{
		var i, len;
		for (i = 0, len = arr.length; i < len; ++i)
		{
			if (arr[i] === item)
				return i;
		}
		return -1;
	};
	cr.arrayFindRemove = function (arr, item)
	{
		var index = cr.fastIndexOf(arr, item);
		if (index !== -1)
			cr.arrayRemove(arr, index);
	};
	cr.clamp = function(x, a, b)
	{
		if (x < a)
			return a;
		else if (x > b)
			return b;
		else
			return x;
	};
	cr.to_radians = function(x)
	{
		return x / (180.0 / cr.PI);
	};
	cr.to_degrees = function(x)
	{
		return x * (180.0 / cr.PI);
	};
	cr.clamp_angle_degrees = function (a)
	{
		a %= 360;       // now in (-360, 360) range
		if (a < 0)
			a += 360;   // now in [0, 360) range
		return a;
	};
	cr.clamp_angle = function (a)
	{
		a %= 2 * cr.PI;       // now in (-2pi, 2pi) range
		if (a < 0)
			a += 2 * cr.PI;   // now in [0, 2pi) range
		return a;
	};
	cr.to_clamped_degrees = function (x)
	{
		return cr.clamp_angle_degrees(cr.to_degrees(x));
	};
	cr.to_clamped_radians = function (x)
	{
		return cr.clamp_angle(cr.to_radians(x));
	};
	cr.angleTo = function(x1, y1, x2, y2)
	{
		var dx = x2 - x1;
        var dy = y2 - y1;
		return Math.atan2(dy, dx);
	};
	cr.angleDiff = function (a1, a2)
	{
		if (a1 === a2)
			return 0;
		var s1 = Math.sin(a1);
		var c1 = Math.cos(a1);
		var s2 = Math.sin(a2);
		var c2 = Math.cos(a2);
		var n = s1 * s2 + c1 * c2;
		if (n >= 1)
			return 0;
		if (n <= -1)
			return cr.PI;
		return Math.acos(n);
	};
	cr.angleRotate = function (start, end, step)
	{
		var ss = Math.sin(start);
		var cs = Math.cos(start);
		var se = Math.sin(end);
		var ce = Math.cos(end);
		if (Math.acos(ss * se + cs * ce) > step)
		{
			if (cs * se - ss * ce > 0)
				return cr.clamp_angle(start + step);
			else
				return cr.clamp_angle(start - step);
		}
		else
			return cr.clamp_angle(end);
	};
	cr.angleClockwise = function (a1, a2)
	{
		var s1 = Math.sin(a1);
		var c1 = Math.cos(a1);
		var s2 = Math.sin(a2);
		var c2 = Math.cos(a2);
		return c1 * s2 - s1 * c2 <= 0;
	};
	cr.rotatePtAround = function (px, py, a, ox, oy, getx)
	{
		if (a === 0)
			return getx ? px : py;
		var sin_a = Math.sin(a);
		var cos_a = Math.cos(a);
		px -= ox;
		py -= oy;
		var left_sin_a = px * sin_a;
		var top_sin_a = py * sin_a;
		var left_cos_a = px * cos_a;
		var top_cos_a = py * cos_a;
		px = left_cos_a - top_sin_a;
		py = top_cos_a + left_sin_a;
		px += ox;
		py += oy;
		return getx ? px : py;
	}
	cr.distanceTo = function(x1, y1, x2, y2)
	{
		var dx = x2 - x1;
        var dy = y2 - y1;
		return Math.sqrt(dx*dx + dy*dy);
	};
	cr.xor = function (x, y)
	{
		return !x !== !y;
	};
	cr.lerp = function (a, b, x)
	{
		return a + (b - a) * x;
	};
	cr.unlerp = function (a, b, c)
	{
		if (a === b)
			return 0;		// avoid divide by 0
		return (c - a) / (b - a);
	};
	cr.anglelerp = function (a, b, x)
	{
		var diff = cr.angleDiff(a, b);
		if (cr.angleClockwise(b, a))
		{
			return a + diff * x;
		}
		else
		{
			return a - diff * x;
		}
	};
	cr.qarp = function (a, b, c, x)
	{
		return cr.lerp(cr.lerp(a, b, x), cr.lerp(b, c, x), x);
	};
	cr.cubic = function (a, b, c, d, x)
	{
		return cr.lerp(cr.qarp(a, b, c, x), cr.qarp(b, c, d, x), x);
	};
	cr.cosp = function (a, b, x)
	{
		return (a + b + (a - b) * Math.cos(x * Math.PI)) / 2;
	};
	cr.hasAnyOwnProperty = function (o)
	{
		var p;
		for (p in o)
		{
			if (o.hasOwnProperty(p))
				return true;
		}
		return false;
	};
	cr.wipe = function (obj)
	{
		var p;
		for (p in obj)
		{
			if (obj.hasOwnProperty(p))
				delete obj[p];
		}
	};
	var startup_time = +(new Date());
	cr.performance_now = function()
	{
		if (typeof window["performance"] !== "undefined")
		{
			var winperf = window["performance"];
			if (typeof winperf.now !== "undefined")
				return winperf.now();
			else if (typeof winperf["webkitNow"] !== "undefined")
				return winperf["webkitNow"]();
			else if (typeof winperf["mozNow"] !== "undefined")
				return winperf["mozNow"]();
			else if (typeof winperf["msNow"] !== "undefined")
				return winperf["msNow"]();
		}
		return Date.now() - startup_time;
	};
	var isChrome = false;
	var isSafari = false;
	var isiOS = false;
	var isEjecta = false;
	if (typeof window !== "undefined")		// not c2 editor
	{
		isChrome = /chrome/i.test(navigator.userAgent) || /chromium/i.test(navigator.userAgent);
		isSafari = !isChrome && /safari/i.test(navigator.userAgent);
		isiOS = /(iphone|ipod|ipad)/i.test(navigator.userAgent);
		isEjecta = window["c2ejecta"];
	}
	var supports_set = ((!isSafari && !isEjecta && !isiOS) && (typeof Set !== "undefined" && typeof Set.prototype["forEach"] !== "undefined"));
	function ObjectSet_()
	{
		this.s = null;
		this.items = null;			// lazy allocated (hopefully results in better GC performance)
		this.item_count = 0;
		if (supports_set)
		{
			this.s = new Set();
		}
		this.values_cache = [];
		this.cache_valid = true;
		cr.seal(this);
	};
	ObjectSet_.prototype.contains = function (x)
	{
		if (this.isEmpty())
			return false;
		if (supports_set)
			return this.s["has"](x);
		else
			return (this.items && this.items.hasOwnProperty(x));
	};
	ObjectSet_.prototype.add = function (x)
	{
		if (supports_set)
		{
			if (!this.s["has"](x))
			{
				this.s["add"](x);
				this.cache_valid = false;
			}
		}
		else
		{
			var str = x.toString();
			var items = this.items;
			if (!items)
			{
				this.items = {};
				this.items[str] = x;
				this.item_count = 1;
				this.cache_valid = false;
			}
			else if (!items.hasOwnProperty(str))
			{
				items[str] = x;
				this.item_count++;
				this.cache_valid = false;
			}
		}
	};
	ObjectSet_.prototype.remove = function (x)
	{
		if (this.isEmpty())
			return;
		if (supports_set)
		{
			if (this.s["has"](x))
			{
				this.s["delete"](x);
				this.cache_valid = false;
			}
		}
		else if (this.items)
		{
			var str = x.toString();
			var items = this.items;
			if (items.hasOwnProperty(str))
			{
				delete items[str];
				this.item_count--;
				this.cache_valid = false;
			}
		}
	};
	ObjectSet_.prototype.clear = function (/*wipe_*/)
	{
		if (this.isEmpty())
			return;
		if (supports_set)
		{
			this.s["clear"]();			// best!
		}
		else
		{
				this.items = null;		// creates garbage; will lazy allocate on next add()
			this.item_count = 0;
		}
		this.values_cache.length = 0;
		this.cache_valid = true;
	};
	ObjectSet_.prototype.isEmpty = function ()
	{
		return this.count() === 0;
	};
	ObjectSet_.prototype.count = function ()
	{
		if (supports_set)
			return this.s["size"];
		else
			return this.item_count;
	};
	var current_arr = null;
	var current_index = 0;
	function set_append_to_arr(x)
	{
		current_arr[current_index++] = x;
	};
	ObjectSet_.prototype.update_cache = function ()
	{
		if (this.cache_valid)
			return;
		if (supports_set)
		{
			this.values_cache.length = this.s["size"];
			current_arr = this.values_cache;
			current_index = 0;
			this.s["forEach"](set_append_to_arr);
;
			current_arr = null;
			current_index = 0;
		}
		else
		{
			var values_cache = this.values_cache;
			values_cache.length = this.item_count;
			var p, n = 0, items = this.items;
			if (items)
			{
				for (p in items)
				{
					if (items.hasOwnProperty(p))
						values_cache[n++] = items[p];
				}
			}
;
		}
		this.cache_valid = true;
	};
	ObjectSet_.prototype.valuesRef = function ()
	{
		this.update_cache();
		return this.values_cache;
	};
	cr.ObjectSet = ObjectSet_;
	var tmpSet = new cr.ObjectSet();
	cr.removeArrayDuplicates = function (arr)
	{
		var i, len;
		for (i = 0, len = arr.length; i < len; ++i)
		{
			tmpSet.add(arr[i]);
		}
		cr.shallowAssignArray(arr, tmpSet.valuesRef());
		tmpSet.clear();
	};
	function KahanAdder_()
	{
		this.c = 0;
        this.y = 0;
        this.t = 0;
        this.sum = 0;
		cr.seal(this);
	};
	KahanAdder_.prototype.add = function (v)
	{
		this.y = v - this.c;
	    this.t = this.sum + this.y;
	    this.c = (this.t - this.sum) - this.y;
	    this.sum = this.t;
	};
    KahanAdder_.prototype.reset = function ()
    {
        this.c = 0;
        this.y = 0;
        this.t = 0;
        this.sum = 0;
    };
	cr.KahanAdder = KahanAdder_;
	cr.regexp_escape = function(text)
	{
		return text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
	};
	function CollisionPoly_(pts_array_)
	{
		this.pts_cache = [];
		this.bboxLeft = 0;
		this.bboxTop = 0;
		this.bboxRight = 0;
		this.bboxBottom = 0;
		this.convexpolys = null;		// for physics behavior to cache separated polys
		this.set_pts(pts_array_);
		cr.seal(this);
	};
	CollisionPoly_.prototype.set_pts = function(pts_array_)
	{
		this.pts_array = pts_array_;
		this.pts_count = pts_array_.length / 2;			// x, y, x, y... in array
		this.pts_cache.length = pts_array_.length;
		this.cache_width = -1;
		this.cache_height = -1;
		this.cache_angle = 0;
	};
	CollisionPoly_.prototype.is_empty = function()
	{
		return !this.pts_array.length;
	};
	CollisionPoly_.prototype.update_bbox = function ()
	{
		var myptscache = this.pts_cache;
		var bboxLeft_ = myptscache[0];
		var bboxRight_ = bboxLeft_;
		var bboxTop_ = myptscache[1];
		var bboxBottom_ = bboxTop_;
		var x, y, i = 1, i2, len = this.pts_count;
		for ( ; i < len; ++i)
		{
			i2 = i*2;
			x = myptscache[i2];
			y = myptscache[i2+1];
			if (x < bboxLeft_)
				bboxLeft_ = x;
			if (x > bboxRight_)
				bboxRight_ = x;
			if (y < bboxTop_)
				bboxTop_ = y;
			if (y > bboxBottom_)
				bboxBottom_ = y;
		}
		this.bboxLeft = bboxLeft_;
		this.bboxRight = bboxRight_;
		this.bboxTop = bboxTop_;
		this.bboxBottom = bboxBottom_;
	};
	CollisionPoly_.prototype.set_from_rect = function(rc, offx, offy)
	{
		this.pts_cache.length = 8;
		this.pts_count = 4;
		var myptscache = this.pts_cache;
		myptscache[0] = rc.left - offx;
		myptscache[1] = rc.top - offy;
		myptscache[2] = rc.right - offx;
		myptscache[3] = rc.top - offy;
		myptscache[4] = rc.right - offx;
		myptscache[5] = rc.bottom - offy;
		myptscache[6] = rc.left - offx;
		myptscache[7] = rc.bottom - offy;
		this.cache_width = rc.right - rc.left;
		this.cache_height = rc.bottom - rc.top;
		this.update_bbox();
	};
	CollisionPoly_.prototype.set_from_quad = function(q, offx, offy, w, h)
	{
		this.pts_cache.length = 8;
		this.pts_count = 4;
		var myptscache = this.pts_cache;
		myptscache[0] = q.tlx - offx;
		myptscache[1] = q.tly - offy;
		myptscache[2] = q.trx - offx;
		myptscache[3] = q.try_ - offy;
		myptscache[4] = q.brx - offx;
		myptscache[5] = q.bry - offy;
		myptscache[6] = q.blx - offx;
		myptscache[7] = q.bly - offy;
		this.cache_width = w;
		this.cache_height = h;
		this.update_bbox();
	};
	CollisionPoly_.prototype.set_from_poly = function (r)
	{
		this.pts_count = r.pts_count;
		cr.shallowAssignArray(this.pts_cache, r.pts_cache);
		this.bboxLeft = r.bboxLeft;
		this.bboxTop - r.bboxTop;
		this.bboxRight = r.bboxRight;
		this.bboxBottom = r.bboxBottom;
	};
	CollisionPoly_.prototype.cache_poly = function(w, h, a)
	{
		if (this.cache_width === w && this.cache_height === h && this.cache_angle === a)
			return;		// cache up-to-date
		this.cache_width = w;
		this.cache_height = h;
		this.cache_angle = a;
		var i, i2, i21, len, x, y;
		var sina = 0;
		var cosa = 1;
		var myptsarray = this.pts_array;
		var myptscache = this.pts_cache;
		if (a !== 0)
		{
			sina = Math.sin(a);
			cosa = Math.cos(a);
		}
		for (i = 0, len = this.pts_count; i < len; i++)
		{
			i2 = i*2;
			i21 = i2+1;
			x = myptsarray[i2] * w;
			y = myptsarray[i21] * h;
			myptscache[i2] = (x * cosa) - (y * sina);
			myptscache[i21] = (y * cosa) + (x * sina);
		}
		this.update_bbox();
	};
	CollisionPoly_.prototype.contains_pt = function (a2x, a2y)
	{
		var myptscache = this.pts_cache;
		if (a2x === myptscache[0] && a2y === myptscache[1])
			return true;
		var i, i2, imod, len = this.pts_count;
		var a1x = this.bboxLeft - 110;
		var a1y = this.bboxTop - 101;
		var a3x = this.bboxRight + 131
		var a3y = this.bboxBottom + 120;
		var b1x, b1y, b2x, b2y;
		var count1 = 0, count2 = 0;
		for (i = 0; i < len; i++)
		{
			i2 = i*2;
			imod = ((i+1)%len)*2;
			b1x = myptscache[i2];
			b1y = myptscache[i2+1];
			b2x = myptscache[imod];
			b2y = myptscache[imod+1];
			if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
				count1++;
			if (cr.segments_intersect(a3x, a3y, a2x, a2y, b1x, b1y, b2x, b2y))
				count2++;
		}
		return (count1 % 2 === 1) || (count2 % 2 === 1);
	};
	CollisionPoly_.prototype.intersects_poly = function (rhs, offx, offy)
	{
		var rhspts = rhs.pts_cache;
		var mypts = this.pts_cache;
		if (this.contains_pt(rhspts[0] + offx, rhspts[1] + offy))
			return true;
		if (rhs.contains_pt(mypts[0] - offx, mypts[1] - offy))
			return true;
		var i, i2, imod, leni, j, j2, jmod, lenj;
		var a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y;
		for (i = 0, leni = this.pts_count; i < leni; i++)
		{
			i2 = i*2;
			imod = ((i+1)%leni)*2;
			a1x = mypts[i2];
			a1y = mypts[i2+1];
			a2x = mypts[imod];
			a2y = mypts[imod+1];
			for (j = 0, lenj = rhs.pts_count; j < lenj; j++)
			{
				j2 = j*2;
				jmod = ((j+1)%lenj)*2;
				b1x = rhspts[j2] + offx;
				b1y = rhspts[j2+1] + offy;
				b2x = rhspts[jmod] + offx;
				b2y = rhspts[jmod+1] + offy;
				if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
					return true;
			}
		}
		return false;
	};
	CollisionPoly_.prototype.intersects_segment = function (offx, offy, x1, y1, x2, y2)
	{
		var mypts = this.pts_cache;
		if (this.contains_pt(x1 - offx, y1 - offy))
			return true;
		var i, leni, i2, imod;
		var a1x, a1y, a2x, a2y;
		for (i = 0, leni = this.pts_count; i < leni; i++)
		{
			i2 = i*2;
			imod = ((i+1)%leni)*2;
			a1x = mypts[i2] + offx;
			a1y = mypts[i2+1] + offy;
			a2x = mypts[imod] + offx;
			a2y = mypts[imod+1] + offy;
			if (cr.segments_intersect(x1, y1, x2, y2, a1x, a1y, a2x, a2y))
				return true;
		}
		return false;
	};
	CollisionPoly_.prototype.mirror = function (px)
	{
		var i, leni, i2;
		for (i = 0, leni = this.pts_count; i < leni; ++i)
		{
			i2 = i*2;
			this.pts_cache[i2] = px * 2 - this.pts_cache[i2];
		}
	};
	CollisionPoly_.prototype.flip = function (py)
	{
		var i, leni, i21;
		for (i = 0, leni = this.pts_count; i < leni; ++i)
		{
			i21 = i*2+1;
			this.pts_cache[i21] = py * 2 - this.pts_cache[i21];
		}
	};
	CollisionPoly_.prototype.diag = function ()
	{
		var i, leni, i2, i21, temp;
		for (i = 0, leni = this.pts_count; i < leni; ++i)
		{
			i2 = i*2;
			i21 = i2+1;
			temp = this.pts_cache[i2];
			this.pts_cache[i2] = this.pts_cache[i21];
			this.pts_cache[i21] = temp;
		}
	};
	cr.CollisionPoly = CollisionPoly_;
	function SparseGrid_(cellwidth_, cellheight_)
	{
		this.cellwidth = cellwidth_;
		this.cellheight = cellheight_;
		this.cells = {};
	};
	SparseGrid_.prototype.totalCellCount = 0;
	SparseGrid_.prototype.getCell = function (x_, y_, create_if_missing)
	{
		var ret;
		var col = this.cells[x_];
		if (!col)
		{
			if (create_if_missing)
			{
				ret = allocGridCell(this, x_, y_);
				this.cells[x_] = {};
				this.cells[x_][y_] = ret;
				return ret;
			}
			else
				return null;
		}
		ret = col[y_];
		if (ret)
			return ret;
		else if (create_if_missing)
		{
			ret = allocGridCell(this, x_, y_);
			this.cells[x_][y_] = ret;
			return ret;
		}
		else
			return null;
	};
	SparseGrid_.prototype.XToCell = function (x_)
	{
		return cr.floor(x_ / this.cellwidth);
	};
	SparseGrid_.prototype.YToCell = function (y_)
	{
		return cr.floor(y_ / this.cellheight);
	};
	SparseGrid_.prototype.update = function (inst, oldrange, newrange)
	{
		var x, lenx, y, leny, cell;
		if (oldrange)
		{
			for (x = oldrange.left, lenx = oldrange.right; x <= lenx; ++x)
			{
				for (y = oldrange.top, leny = oldrange.bottom; y <= leny; ++y)
				{
					if (newrange && newrange.contains_pt(x, y))
						continue;	// is still in this cell
					cell = this.getCell(x, y, false);	// don't create if missing
					if (!cell)
						continue;	// cell does not exist yet
					cell.remove(inst);
					if (cell.isEmpty())
					{
						freeGridCell(cell);
						this.cells[x][y] = null;
					}
				}
			}
		}
		if (newrange)
		{
			for (x = newrange.left, lenx = newrange.right; x <= lenx; ++x)
			{
				for (y = newrange.top, leny = newrange.bottom; y <= leny; ++y)
				{
					if (oldrange && oldrange.contains_pt(x, y))
						continue;	// is still in this cell
					this.getCell(x, y, true).insert(inst);
				}
			}
		}
	};
	SparseGrid_.prototype.queryRange = function (rc, result)
	{
		var x, lenx, ystart, y, leny, cell;
		x = this.XToCell(rc.left);
		ystart = this.YToCell(rc.top);
		lenx = this.XToCell(rc.right);
		leny = this.YToCell(rc.bottom);
		for ( ; x <= lenx; ++x)
		{
			for (y = ystart; y <= leny; ++y)
			{
				cell = this.getCell(x, y, false);
				if (!cell)
					continue;
				cell.dump(result);
			}
		}
	};
	cr.SparseGrid = SparseGrid_;
	var gridcellcache = [];
	function allocGridCell(grid_, x_, y_)
	{
		var ret;
		SparseGrid_.prototype.totalCellCount++;
		if (gridcellcache.length)
		{
			ret = gridcellcache.pop();
			ret.grid = grid_;
			ret.x = x_;
			ret.y = y_;
			return ret;
		}
		else
			return new cr.GridCell(grid_, x_, y_);
	};
	function freeGridCell(c)
	{
		SparseGrid_.prototype.totalCellCount--;
		c.objects.clear();
		if (gridcellcache.length < 1000)
			gridcellcache.push(c);
	};
	function GridCell_(grid_, x_, y_)
	{
		this.grid = grid_;
		this.x = x_;
		this.y = y_;
		this.objects = new cr.ObjectSet();
	};
	GridCell_.prototype.isEmpty = function ()
	{
		return this.objects.isEmpty();
	};
	GridCell_.prototype.insert = function (inst)
	{
		this.objects.add(inst);
	};
	GridCell_.prototype.remove = function (inst)
	{
		this.objects.remove(inst);
	};
	GridCell_.prototype.dump = function (result)
	{
		cr.appendArray(result, this.objects.valuesRef());
	};
	cr.GridCell = GridCell_;
	var fxNames = [ "lighter",
					"xor",
					"copy",
					"destination-over",
					"source-in",
					"destination-in",
					"source-out",
					"destination-out",
					"source-atop",
					"destination-atop"];
	cr.effectToCompositeOp = function(effect)
	{
		if (effect <= 0 || effect >= 11)
			return "source-over";
		return fxNames[effect - 1];	// not including "none" so offset by 1
	};
	cr.setGLBlend = function(this_, effect, gl)
	{
		if (!gl)
			return;
		this_.srcBlend = gl.ONE;
		this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
		switch (effect) {
		case 1:		// lighter (additive)
			this_.srcBlend = gl.ONE;
			this_.destBlend = gl.ONE;
			break;
		case 2:		// xor
			break;	// todo
		case 3:		// copy
			this_.srcBlend = gl.ONE;
			this_.destBlend = gl.ZERO;
			break;
		case 4:		// destination-over
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.ONE;
			break;
		case 5:		// source-in
			this_.srcBlend = gl.DST_ALPHA;
			this_.destBlend = gl.ZERO;
			break;
		case 6:		// destination-in
			this_.srcBlend = gl.ZERO;
			this_.destBlend = gl.SRC_ALPHA;
			break;
		case 7:		// source-out
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.ZERO;
			break;
		case 8:		// destination-out
			this_.srcBlend = gl.ZERO;
			this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
			break;
		case 9:		// source-atop
			this_.srcBlend = gl.DST_ALPHA;
			this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
			break;
		case 10:	// destination-atop
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.SRC_ALPHA;
			break;
		}
	};
	cr.round6dp = function (x)
	{
		return Math.round(x * 1000000) / 1000000;
	};
	/*
	var localeCompare_options = {
		"usage": "search",
		"sensitivity": "accent"
	};
	var has_localeCompare = !!"a".localeCompare;
	var localeCompare_works1 = (has_localeCompare && "a".localeCompare("A", undefined, localeCompare_options) === 0);
	var localeCompare_works2 = (has_localeCompare && "a".localeCompare("á", undefined, localeCompare_options) !== 0);
	var supports_localeCompare = (has_localeCompare && localeCompare_works1 && localeCompare_works2);
	*/
	cr.equals_nocase = function (a, b)
	{
		if (typeof a !== "string" || typeof b !== "string")
			return false;
		if (a.length !== b.length)
			return false;
		if (a === b)
			return true;
		/*
		if (supports_localeCompare)
		{
			return (a.localeCompare(b, undefined, localeCompare_options) === 0);
		}
		else
		{
		*/
			return a.toLowerCase() === b.toLowerCase();
	};
	cr.isCanvasInputEvent = function (e)
	{
		var target = e.target;
		if (!target)
			return true;
		if (target === document || target === window)
			return true;
		if (document && document.body && target === document.body)
			return true;
		if (cr.equals_nocase(target.tagName, "canvas"))
			return true;
		return false;
	};
}());
var MatrixArray=typeof Float32Array!=="undefined"?Float32Array:Array,glMatrixArrayType=MatrixArray,vec3={},mat3={},mat4={},quat4={};vec3.create=function(a){var b=new MatrixArray(3);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2]);return b};vec3.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];return b};vec3.add=function(a,b,c){if(!c||a===c)return a[0]+=b[0],a[1]+=b[1],a[2]+=b[2],a;c[0]=a[0]+b[0];c[1]=a[1]+b[1];c[2]=a[2]+b[2];return c};
vec3.subtract=function(a,b,c){if(!c||a===c)return a[0]-=b[0],a[1]-=b[1],a[2]-=b[2],a;c[0]=a[0]-b[0];c[1]=a[1]-b[1];c[2]=a[2]-b[2];return c};vec3.negate=function(a,b){b||(b=a);b[0]=-a[0];b[1]=-a[1];b[2]=-a[2];return b};vec3.scale=function(a,b,c){if(!c||a===c)return a[0]*=b,a[1]*=b,a[2]*=b,a;c[0]=a[0]*b;c[1]=a[1]*b;c[2]=a[2]*b;return c};
vec3.normalize=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=Math.sqrt(c*c+d*d+e*e);if(g){if(g===1)return b[0]=c,b[1]=d,b[2]=e,b}else return b[0]=0,b[1]=0,b[2]=0,b;g=1/g;b[0]=c*g;b[1]=d*g;b[2]=e*g;return b};vec3.cross=function(a,b,c){c||(c=a);var d=a[0],e=a[1],a=a[2],g=b[0],f=b[1],b=b[2];c[0]=e*b-a*f;c[1]=a*g-d*b;c[2]=d*f-e*g;return c};vec3.length=function(a){var b=a[0],c=a[1],a=a[2];return Math.sqrt(b*b+c*c+a*a)};vec3.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]};
vec3.direction=function(a,b,c){c||(c=a);var d=a[0]-b[0],e=a[1]-b[1],a=a[2]-b[2],b=Math.sqrt(d*d+e*e+a*a);if(!b)return c[0]=0,c[1]=0,c[2]=0,c;b=1/b;c[0]=d*b;c[1]=e*b;c[2]=a*b;return c};vec3.lerp=function(a,b,c,d){d||(d=a);d[0]=a[0]+c*(b[0]-a[0]);d[1]=a[1]+c*(b[1]-a[1]);d[2]=a[2]+c*(b[2]-a[2]);return d};vec3.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+"]"};
mat3.create=function(a){var b=new MatrixArray(9);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8]);return b};mat3.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];return b};mat3.identity=function(a){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=1;a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a};
mat3.transpose=function(a,b){if(!b||a===b){var c=a[1],d=a[2],e=a[5];a[1]=a[3];a[2]=a[6];a[3]=c;a[5]=a[7];a[6]=d;a[7]=e;return a}b[0]=a[0];b[1]=a[3];b[2]=a[6];b[3]=a[1];b[4]=a[4];b[5]=a[7];b[6]=a[2];b[7]=a[5];b[8]=a[8];return b};mat3.toMat4=function(a,b){b||(b=mat4.create());b[15]=1;b[14]=0;b[13]=0;b[12]=0;b[11]=0;b[10]=a[8];b[9]=a[7];b[8]=a[6];b[7]=0;b[6]=a[5];b[5]=a[4];b[4]=a[3];b[3]=0;b[2]=a[2];b[1]=a[1];b[0]=a[0];return b};
mat3.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+"]"};mat4.create=function(a){var b=new MatrixArray(16);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8],b[9]=a[9],b[10]=a[10],b[11]=a[11],b[12]=a[12],b[13]=a[13],b[14]=a[14],b[15]=a[15]);return b};
mat4.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=a[12];b[13]=a[13];b[14]=a[14];b[15]=a[15];return b};mat4.identity=function(a){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=0;a[5]=1;a[6]=0;a[7]=0;a[8]=0;a[9]=0;a[10]=1;a[11]=0;a[12]=0;a[13]=0;a[14]=0;a[15]=1;return a};
mat4.transpose=function(a,b){if(!b||a===b){var c=a[1],d=a[2],e=a[3],g=a[6],f=a[7],h=a[11];a[1]=a[4];a[2]=a[8];a[3]=a[12];a[4]=c;a[6]=a[9];a[7]=a[13];a[8]=d;a[9]=g;a[11]=a[14];a[12]=e;a[13]=f;a[14]=h;return a}b[0]=a[0];b[1]=a[4];b[2]=a[8];b[3]=a[12];b[4]=a[1];b[5]=a[5];b[6]=a[9];b[7]=a[13];b[8]=a[2];b[9]=a[6];b[10]=a[10];b[11]=a[14];b[12]=a[3];b[13]=a[7];b[14]=a[11];b[15]=a[15];return b};
mat4.determinant=function(a){var b=a[0],c=a[1],d=a[2],e=a[3],g=a[4],f=a[5],h=a[6],i=a[7],j=a[8],k=a[9],l=a[10],n=a[11],o=a[12],m=a[13],p=a[14],a=a[15];return o*k*h*e-j*m*h*e-o*f*l*e+g*m*l*e+j*f*p*e-g*k*p*e-o*k*d*i+j*m*d*i+o*c*l*i-b*m*l*i-j*c*p*i+b*k*p*i+o*f*d*n-g*m*d*n-o*c*h*n+b*m*h*n+g*c*p*n-b*f*p*n-j*f*d*a+g*k*d*a+j*c*h*a-b*k*h*a-g*c*l*a+b*f*l*a};
mat4.inverse=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=a[3],f=a[4],h=a[5],i=a[6],j=a[7],k=a[8],l=a[9],n=a[10],o=a[11],m=a[12],p=a[13],r=a[14],s=a[15],A=c*h-d*f,B=c*i-e*f,t=c*j-g*f,u=d*i-e*h,v=d*j-g*h,w=e*j-g*i,x=k*p-l*m,y=k*r-n*m,z=k*s-o*m,C=l*r-n*p,D=l*s-o*p,E=n*s-o*r,q=1/(A*E-B*D+t*C+u*z-v*y+w*x);b[0]=(h*E-i*D+j*C)*q;b[1]=(-d*E+e*D-g*C)*q;b[2]=(p*w-r*v+s*u)*q;b[3]=(-l*w+n*v-o*u)*q;b[4]=(-f*E+i*z-j*y)*q;b[5]=(c*E-e*z+g*y)*q;b[6]=(-m*w+r*t-s*B)*q;b[7]=(k*w-n*t+o*B)*q;b[8]=(f*D-h*z+j*x)*q;
b[9]=(-c*D+d*z-g*x)*q;b[10]=(m*v-p*t+s*A)*q;b[11]=(-k*v+l*t-o*A)*q;b[12]=(-f*C+h*y-i*x)*q;b[13]=(c*C-d*y+e*x)*q;b[14]=(-m*u+p*B-r*A)*q;b[15]=(k*u-l*B+n*A)*q;return b};mat4.toRotationMat=function(a,b){b||(b=mat4.create());b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=0;b[13]=0;b[14]=0;b[15]=1;return b};
mat4.toMat3=function(a,b){b||(b=mat3.create());b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[4];b[4]=a[5];b[5]=a[6];b[6]=a[8];b[7]=a[9];b[8]=a[10];return b};mat4.toInverseMat3=function(a,b){var c=a[0],d=a[1],e=a[2],g=a[4],f=a[5],h=a[6],i=a[8],j=a[9],k=a[10],l=k*f-h*j,n=-k*g+h*i,o=j*g-f*i,m=c*l+d*n+e*o;if(!m)return null;m=1/m;b||(b=mat3.create());b[0]=l*m;b[1]=(-k*d+e*j)*m;b[2]=(h*d-e*f)*m;b[3]=n*m;b[4]=(k*c-e*i)*m;b[5]=(-h*c+e*g)*m;b[6]=o*m;b[7]=(-j*c+d*i)*m;b[8]=(f*c-d*g)*m;return b};
mat4.multiply=function(a,b,c){c||(c=a);var d=a[0],e=a[1],g=a[2],f=a[3],h=a[4],i=a[5],j=a[6],k=a[7],l=a[8],n=a[9],o=a[10],m=a[11],p=a[12],r=a[13],s=a[14],a=a[15],A=b[0],B=b[1],t=b[2],u=b[3],v=b[4],w=b[5],x=b[6],y=b[7],z=b[8],C=b[9],D=b[10],E=b[11],q=b[12],F=b[13],G=b[14],b=b[15];c[0]=A*d+B*h+t*l+u*p;c[1]=A*e+B*i+t*n+u*r;c[2]=A*g+B*j+t*o+u*s;c[3]=A*f+B*k+t*m+u*a;c[4]=v*d+w*h+x*l+y*p;c[5]=v*e+w*i+x*n+y*r;c[6]=v*g+w*j+x*o+y*s;c[7]=v*f+w*k+x*m+y*a;c[8]=z*d+C*h+D*l+E*p;c[9]=z*e+C*i+D*n+E*r;c[10]=z*g+C*
j+D*o+E*s;c[11]=z*f+C*k+D*m+E*a;c[12]=q*d+F*h+G*l+b*p;c[13]=q*e+F*i+G*n+b*r;c[14]=q*g+F*j+G*o+b*s;c[15]=q*f+F*k+G*m+b*a;return c};mat4.multiplyVec3=function(a,b,c){c||(c=b);var d=b[0],e=b[1],b=b[2];c[0]=a[0]*d+a[4]*e+a[8]*b+a[12];c[1]=a[1]*d+a[5]*e+a[9]*b+a[13];c[2]=a[2]*d+a[6]*e+a[10]*b+a[14];return c};
mat4.multiplyVec4=function(a,b,c){c||(c=b);var d=b[0],e=b[1],g=b[2],b=b[3];c[0]=a[0]*d+a[4]*e+a[8]*g+a[12]*b;c[1]=a[1]*d+a[5]*e+a[9]*g+a[13]*b;c[2]=a[2]*d+a[6]*e+a[10]*g+a[14]*b;c[3]=a[3]*d+a[7]*e+a[11]*g+a[15]*b;return c};
mat4.translate=function(a,b,c){var d=b[0],e=b[1],b=b[2],g,f,h,i,j,k,l,n,o,m,p,r;if(!c||a===c)return a[12]=a[0]*d+a[4]*e+a[8]*b+a[12],a[13]=a[1]*d+a[5]*e+a[9]*b+a[13],a[14]=a[2]*d+a[6]*e+a[10]*b+a[14],a[15]=a[3]*d+a[7]*e+a[11]*b+a[15],a;g=a[0];f=a[1];h=a[2];i=a[3];j=a[4];k=a[5];l=a[6];n=a[7];o=a[8];m=a[9];p=a[10];r=a[11];c[0]=g;c[1]=f;c[2]=h;c[3]=i;c[4]=j;c[5]=k;c[6]=l;c[7]=n;c[8]=o;c[9]=m;c[10]=p;c[11]=r;c[12]=g*d+j*e+o*b+a[12];c[13]=f*d+k*e+m*b+a[13];c[14]=h*d+l*e+p*b+a[14];c[15]=i*d+n*e+r*b+a[15];
return c};mat4.scale=function(a,b,c){var d=b[0],e=b[1],b=b[2];if(!c||a===c)return a[0]*=d,a[1]*=d,a[2]*=d,a[3]*=d,a[4]*=e,a[5]*=e,a[6]*=e,a[7]*=e,a[8]*=b,a[9]*=b,a[10]*=b,a[11]*=b,a;c[0]=a[0]*d;c[1]=a[1]*d;c[2]=a[2]*d;c[3]=a[3]*d;c[4]=a[4]*e;c[5]=a[5]*e;c[6]=a[6]*e;c[7]=a[7]*e;c[8]=a[8]*b;c[9]=a[9]*b;c[10]=a[10]*b;c[11]=a[11]*b;c[12]=a[12];c[13]=a[13];c[14]=a[14];c[15]=a[15];return c};
mat4.rotate=function(a,b,c,d){var e=c[0],g=c[1],c=c[2],f=Math.sqrt(e*e+g*g+c*c),h,i,j,k,l,n,o,m,p,r,s,A,B,t,u,v,w,x,y,z;if(!f)return null;f!==1&&(f=1/f,e*=f,g*=f,c*=f);h=Math.sin(b);i=Math.cos(b);j=1-i;b=a[0];f=a[1];k=a[2];l=a[3];n=a[4];o=a[5];m=a[6];p=a[7];r=a[8];s=a[9];A=a[10];B=a[11];t=e*e*j+i;u=g*e*j+c*h;v=c*e*j-g*h;w=e*g*j-c*h;x=g*g*j+i;y=c*g*j+e*h;z=e*c*j+g*h;e=g*c*j-e*h;g=c*c*j+i;d?a!==d&&(d[12]=a[12],d[13]=a[13],d[14]=a[14],d[15]=a[15]):d=a;d[0]=b*t+n*u+r*v;d[1]=f*t+o*u+s*v;d[2]=k*t+m*u+A*
v;d[3]=l*t+p*u+B*v;d[4]=b*w+n*x+r*y;d[5]=f*w+o*x+s*y;d[6]=k*w+m*x+A*y;d[7]=l*w+p*x+B*y;d[8]=b*z+n*e+r*g;d[9]=f*z+o*e+s*g;d[10]=k*z+m*e+A*g;d[11]=l*z+p*e+B*g;return d};mat4.rotateX=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[4],g=a[5],f=a[6],h=a[7],i=a[8],j=a[9],k=a[10],l=a[11];c?a!==c&&(c[0]=a[0],c[1]=a[1],c[2]=a[2],c[3]=a[3],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[4]=e*b+i*d;c[5]=g*b+j*d;c[6]=f*b+k*d;c[7]=h*b+l*d;c[8]=e*-d+i*b;c[9]=g*-d+j*b;c[10]=f*-d+k*b;c[11]=h*-d+l*b;return c};
mat4.rotateY=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[0],g=a[1],f=a[2],h=a[3],i=a[8],j=a[9],k=a[10],l=a[11];c?a!==c&&(c[4]=a[4],c[5]=a[5],c[6]=a[6],c[7]=a[7],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[0]=e*b+i*-d;c[1]=g*b+j*-d;c[2]=f*b+k*-d;c[3]=h*b+l*-d;c[8]=e*d+i*b;c[9]=g*d+j*b;c[10]=f*d+k*b;c[11]=h*d+l*b;return c};
mat4.rotateZ=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[0],g=a[1],f=a[2],h=a[3],i=a[4],j=a[5],k=a[6],l=a[7];c?a!==c&&(c[8]=a[8],c[9]=a[9],c[10]=a[10],c[11]=a[11],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[0]=e*b+i*d;c[1]=g*b+j*d;c[2]=f*b+k*d;c[3]=h*b+l*d;c[4]=e*-d+i*b;c[5]=g*-d+j*b;c[6]=f*-d+k*b;c[7]=h*-d+l*b;return c};
mat4.frustum=function(a,b,c,d,e,g,f){f||(f=mat4.create());var h=b-a,i=d-c,j=g-e;f[0]=e*2/h;f[1]=0;f[2]=0;f[3]=0;f[4]=0;f[5]=e*2/i;f[6]=0;f[7]=0;f[8]=(b+a)/h;f[9]=(d+c)/i;f[10]=-(g+e)/j;f[11]=-1;f[12]=0;f[13]=0;f[14]=-(g*e*2)/j;f[15]=0;return f};mat4.perspective=function(a,b,c,d,e){a=c*Math.tan(a*Math.PI/360);b*=a;return mat4.frustum(-b,b,-a,a,c,d,e)};
mat4.ortho=function(a,b,c,d,e,g,f){f||(f=mat4.create());var h=b-a,i=d-c,j=g-e;f[0]=2/h;f[1]=0;f[2]=0;f[3]=0;f[4]=0;f[5]=2/i;f[6]=0;f[7]=0;f[8]=0;f[9]=0;f[10]=-2/j;f[11]=0;f[12]=-(a+b)/h;f[13]=-(d+c)/i;f[14]=-(g+e)/j;f[15]=1;return f};
mat4.lookAt=function(a,b,c,d){d||(d=mat4.create());var e,g,f,h,i,j,k,l,n=a[0],o=a[1],a=a[2];g=c[0];f=c[1];e=c[2];c=b[1];j=b[2];if(n===b[0]&&o===c&&a===j)return mat4.identity(d);c=n-b[0];j=o-b[1];k=a-b[2];l=1/Math.sqrt(c*c+j*j+k*k);c*=l;j*=l;k*=l;b=f*k-e*j;e=e*c-g*k;g=g*j-f*c;(l=Math.sqrt(b*b+e*e+g*g))?(l=1/l,b*=l,e*=l,g*=l):g=e=b=0;f=j*g-k*e;h=k*b-c*g;i=c*e-j*b;(l=Math.sqrt(f*f+h*h+i*i))?(l=1/l,f*=l,h*=l,i*=l):i=h=f=0;d[0]=b;d[1]=f;d[2]=c;d[3]=0;d[4]=e;d[5]=h;d[6]=j;d[7]=0;d[8]=g;d[9]=i;d[10]=k;d[11]=
0;d[12]=-(b*n+e*o+g*a);d[13]=-(f*n+h*o+i*a);d[14]=-(c*n+j*o+k*a);d[15]=1;return d};mat4.fromRotationTranslation=function(a,b,c){c||(c=mat4.create());var d=a[0],e=a[1],g=a[2],f=a[3],h=d+d,i=e+e,j=g+g,a=d*h,k=d*i;d*=j;var l=e*i;e*=j;g*=j;h*=f;i*=f;f*=j;c[0]=1-(l+g);c[1]=k+f;c[2]=d-i;c[3]=0;c[4]=k-f;c[5]=1-(a+g);c[6]=e+h;c[7]=0;c[8]=d+i;c[9]=e-h;c[10]=1-(a+l);c[11]=0;c[12]=b[0];c[13]=b[1];c[14]=b[2];c[15]=1;return c};
mat4.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+", "+a[9]+", "+a[10]+", "+a[11]+", "+a[12]+", "+a[13]+", "+a[14]+", "+a[15]+"]"};quat4.create=function(a){var b=new MatrixArray(4);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3]);return b};quat4.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];return b};
quat4.calculateW=function(a,b){var c=a[0],d=a[1],e=a[2];if(!b||a===b)return a[3]=-Math.sqrt(Math.abs(1-c*c-d*d-e*e)),a;b[0]=c;b[1]=d;b[2]=e;b[3]=-Math.sqrt(Math.abs(1-c*c-d*d-e*e));return b};quat4.inverse=function(a,b){if(!b||a===b)return a[0]*=-1,a[1]*=-1,a[2]*=-1,a;b[0]=-a[0];b[1]=-a[1];b[2]=-a[2];b[3]=a[3];return b};quat4.length=function(a){var b=a[0],c=a[1],d=a[2],a=a[3];return Math.sqrt(b*b+c*c+d*d+a*a)};
quat4.normalize=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=a[3],f=Math.sqrt(c*c+d*d+e*e+g*g);if(f===0)return b[0]=0,b[1]=0,b[2]=0,b[3]=0,b;f=1/f;b[0]=c*f;b[1]=d*f;b[2]=e*f;b[3]=g*f;return b};quat4.multiply=function(a,b,c){c||(c=a);var d=a[0],e=a[1],g=a[2],a=a[3],f=b[0],h=b[1],i=b[2],b=b[3];c[0]=d*b+a*f+e*i-g*h;c[1]=e*b+a*h+g*f-d*i;c[2]=g*b+a*i+d*h-e*f;c[3]=a*b-d*f-e*h-g*i;return c};
quat4.multiplyVec3=function(a,b,c){c||(c=b);var d=b[0],e=b[1],g=b[2],b=a[0],f=a[1],h=a[2],a=a[3],i=a*d+f*g-h*e,j=a*e+h*d-b*g,k=a*g+b*e-f*d,d=-b*d-f*e-h*g;c[0]=i*a+d*-b+j*-h-k*-f;c[1]=j*a+d*-f+k*-b-i*-h;c[2]=k*a+d*-h+i*-f-j*-b;return c};quat4.toMat3=function(a,b){b||(b=mat3.create());var c=a[0],d=a[1],e=a[2],g=a[3],f=c+c,h=d+d,i=e+e,j=c*f,k=c*h;c*=i;var l=d*h;d*=i;e*=i;f*=g;h*=g;g*=i;b[0]=1-(l+e);b[1]=k+g;b[2]=c-h;b[3]=k-g;b[4]=1-(j+e);b[5]=d+f;b[6]=c+h;b[7]=d-f;b[8]=1-(j+l);return b};
quat4.toMat4=function(a,b){b||(b=mat4.create());var c=a[0],d=a[1],e=a[2],g=a[3],f=c+c,h=d+d,i=e+e,j=c*f,k=c*h;c*=i;var l=d*h;d*=i;e*=i;f*=g;h*=g;g*=i;b[0]=1-(l+e);b[1]=k+g;b[2]=c-h;b[3]=0;b[4]=k-g;b[5]=1-(j+e);b[6]=d+f;b[7]=0;b[8]=c+h;b[9]=d-f;b[10]=1-(j+l);b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return b};
quat4.slerp=function(a,b,c,d){d||(d=a);var e=a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3],g,f;if(Math.abs(e)>=1)return d!==a&&(d[0]=a[0],d[1]=a[1],d[2]=a[2],d[3]=a[3]),d;g=Math.acos(e);f=Math.sqrt(1-e*e);if(Math.abs(f)<0.001)return d[0]=a[0]*0.5+b[0]*0.5,d[1]=a[1]*0.5+b[1]*0.5,d[2]=a[2]*0.5+b[2]*0.5,d[3]=a[3]*0.5+b[3]*0.5,d;e=Math.sin((1-c)*g)/f;c=Math.sin(c*g)/f;d[0]=a[0]*e+b[0]*c;d[1]=a[1]*e+b[1]*c;d[2]=a[2]*e+b[2]*c;d[3]=a[3]*e+b[3]*c;return d};
quat4.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+"]"};
(function()
{
	var MAX_VERTICES = 8000;						// equates to 2500 objects being drawn
	var MAX_INDICES = (MAX_VERTICES / 2) * 3;		// 6 indices for every 4 vertices
	var MAX_POINTS = 8000;
	var MULTI_BUFFERS = 4;							// cycle 4 buffers to try and avoid blocking
	var BATCH_NULL = 0;
	var BATCH_QUAD = 1;
	var BATCH_SETTEXTURE = 2;
	var BATCH_SETOPACITY = 3;
	var BATCH_SETBLEND = 4;
	var BATCH_UPDATEMODELVIEW = 5;
	var BATCH_RENDERTOTEXTURE = 6;
	var BATCH_CLEAR = 7;
	var BATCH_POINTS = 8;
	var BATCH_SETPROGRAM = 9;
	var BATCH_SETPROGRAMPARAMETERS = 10;
	var BATCH_SETTEXTURE1 = 11;
	function GLWrap_(gl, isMobile)
	{
		this.isIE = /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent);
		this.width = 0;		// not yet known, wait for call to setSize()
		this.height = 0;
		this.cam = vec3.create([0, 0, 100]);			// camera position
		this.look = vec3.create([0, 0, 0]);				// lookat position
		this.up = vec3.create([0, 1, 0]);				// up vector
		this.worldScale = vec3.create([1, 1, 1]);		// world scaling factor
		this.enable_mipmaps = true;
		this.matP = mat4.create();						// perspective matrix
		this.matMV = mat4.create();						// model view matrix
		this.lastMV = mat4.create();
		this.currentMV = mat4.create();
		this.gl = gl;
		this.initState();
	};
	GLWrap_.prototype.initState = function ()
	{
		var gl = this.gl;
		var i, len;
		this.lastOpacity = 1;
		this.lastTexture0 = null;			// last bound to TEXTURE0
		this.lastTexture1 = null;			// last bound to TEXTURE1
		this.currentOpacity = 1;
		gl.clearColor(0, 0, 0, 0);
		gl.clear(gl.COLOR_BUFFER_BIT);
		gl.enable(gl.BLEND);
        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);
		gl.disable(gl.CULL_FACE);
		gl.disable(gl.DEPTH_TEST);
		this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);
		this.lastSrcBlend = gl.ONE;
		this.lastDestBlend = gl.ONE_MINUS_SRC_ALPHA;
		this.pointBuffer = gl.createBuffer();
		gl.bindBuffer(gl.ARRAY_BUFFER, this.pointBuffer);
		this.vertexBuffers = new Array(MULTI_BUFFERS);
		this.texcoordBuffers = new Array(MULTI_BUFFERS);
		for (i = 0; i < MULTI_BUFFERS; i++)
		{
			this.vertexBuffers[i] = gl.createBuffer();
			gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffers[i]);
			this.texcoordBuffers[i] = gl.createBuffer();
			gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffers[i]);
		}
		this.curBuffer = 0;
		this.indexBuffer = gl.createBuffer();
		gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
		this.vertexData = new Float32Array(MAX_VERTICES * 2);
		this.texcoordData = new Float32Array(MAX_VERTICES * 2);
		this.pointData = new Float32Array(MAX_POINTS * 4);
		var indexData = new Uint16Array(MAX_INDICES);
		i = 0, len = MAX_INDICES;
		var fv = 0;
		while (i < len)
		{
			indexData[i++] = fv;		// top left
			indexData[i++] = fv + 1;	// top right
			indexData[i++] = fv + 2;	// bottom right (first tri)
			indexData[i++] = fv;		// top left
			indexData[i++] = fv + 2;	// bottom right
			indexData[i++] = fv + 3;	// bottom left
			fv += 4;
		}
		gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexData, gl.STATIC_DRAW);
		this.vertexPtr = 0;
		this.pointPtr = 0;
		var fsSource, vsSource;
		this.shaderPrograms = [];
		fsSource = [
			"varying mediump vec2 vTex;",
			"uniform lowp float opacity;",
			"uniform lowp sampler2D samplerFront;",
			"void main(void) {",
			"	gl_FragColor = texture2D(samplerFront, vTex);",
			"	gl_FragColor *= opacity;",
			"}"
		].join("\n");
		vsSource = [
			"attribute highp vec2 aPos;",
			"attribute mediump vec2 aTex;",
			"varying mediump vec2 vTex;",
			"uniform highp mat4 matP;",
			"uniform highp mat4 matMV;",
			"void main(void) {",
			"	gl_Position = matP * matMV * vec4(aPos.x, aPos.y, 0.0, 1.0);",
			"	vTex = aTex;",
			"}"
		].join("\n");
		var shaderProg = this.createShaderProgram({src: fsSource}, vsSource, "<default>");
;
		this.shaderPrograms.push(shaderProg);		// Default shader is always shader 0
		fsSource = [
			"uniform mediump sampler2D samplerFront;",
			"varying lowp float opacity;",
			"void main(void) {",
			"	gl_FragColor = texture2D(samplerFront, gl_PointCoord);",
			"	gl_FragColor *= opacity;",
			"}"
		].join("\n");
		var pointVsSource = [
			"attribute vec4 aPos;",
			"varying float opacity;",
			"uniform mat4 matP;",
			"uniform mat4 matMV;",
			"void main(void) {",
			"	gl_Position = matP * matMV * vec4(aPos.x, aPos.y, 0.0, 1.0);",
			"	gl_PointSize = aPos.z;",
			"	opacity = aPos.w;",
			"}"
		].join("\n");
		shaderProg = this.createShaderProgram({src: fsSource}, pointVsSource, "<point>");
;
		this.shaderPrograms.push(shaderProg);		// Point shader is always shader 1
		for (var shader_name in cr.shaders)
		{
			if (cr.shaders.hasOwnProperty(shader_name))
				this.shaderPrograms.push(this.createShaderProgram(cr.shaders[shader_name], vsSource, shader_name));
		}
		gl.activeTexture(gl.TEXTURE0);
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.batch = [];
		this.batchPtr = 0;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
		this.lastProgram = -1;				// start -1 so first switchProgram can do work
		this.currentProgram = -1;			// current program during batch execution
		this.currentShader = null;
		this.fbo = gl.createFramebuffer();
		this.renderToTex = null;
		this.tmpVec3 = vec3.create([0, 0, 0]);
;
;
		var pointsizes = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);
		this.minPointSize = pointsizes[0];
		this.maxPointSize = pointsizes[1];
		if (this.maxPointSize > 2048)
			this.maxPointSize = 2048;
;
		this.switchProgram(0);
		cr.seal(this);
	};
	function GLShaderProgram(gl, shaderProgram, name)
	{
		this.gl = gl;
		this.shaderProgram = shaderProgram;
		this.name = name;
		this.locAPos = gl.getAttribLocation(shaderProgram, "aPos");
		this.locATex = gl.getAttribLocation(shaderProgram, "aTex");
		this.locMatP = gl.getUniformLocation(shaderProgram, "matP");
		this.locMatMV = gl.getUniformLocation(shaderProgram, "matMV");
		this.locOpacity = gl.getUniformLocation(shaderProgram, "opacity");
		this.locSamplerFront = gl.getUniformLocation(shaderProgram, "samplerFront");
		this.locSamplerBack = gl.getUniformLocation(shaderProgram, "samplerBack");
		this.locDestStart = gl.getUniformLocation(shaderProgram, "destStart");
		this.locDestEnd = gl.getUniformLocation(shaderProgram, "destEnd");
		this.locSeconds = gl.getUniformLocation(shaderProgram, "seconds");
		this.locPixelWidth = gl.getUniformLocation(shaderProgram, "pixelWidth");
		this.locPixelHeight = gl.getUniformLocation(shaderProgram, "pixelHeight");
		this.locLayerScale = gl.getUniformLocation(shaderProgram, "layerScale");
		this.locLayerAngle = gl.getUniformLocation(shaderProgram, "layerAngle");
		this.locViewOrigin = gl.getUniformLocation(shaderProgram, "viewOrigin");
		this.hasAnyOptionalUniforms = !!(this.locPixelWidth || this.locPixelHeight || this.locSeconds || this.locSamplerBack || this.locDestStart || this.locDestEnd || this.locLayerScale || this.locLayerAngle || this.locViewOrigin);
		if (this.locOpacity)
			gl.uniform1f(this.locOpacity, 1);
		if (this.locSamplerFront)
			gl.uniform1i(this.locSamplerFront, 0);
		if (this.locSamplerBack)
			gl.uniform1i(this.locSamplerBack, 1);
		if (this.locDestStart)
			gl.uniform2f(this.locDestStart, 0.0, 0.0);
		if (this.locDestEnd)
			gl.uniform2f(this.locDestEnd, 1.0, 1.0);
		if (this.locLayerScale)
			gl.uniform1f(this.locLayerScale, 1.0);
		if (this.locLayerAngle)
			gl.uniform1f(this.locLayerAngle, 0.0);
		if (this.locViewOrigin)
			gl.uniform2f(this.locViewOrigin, 0.0, 0.0);
		this.hasCurrentMatMV = false;		// matMV needs updating
	};
	GLWrap_.prototype.createShaderProgram = function(shaderEntry, vsSource, name)
	{
		var gl = this.gl;
		var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
		gl.shaderSource(fragmentShader, shaderEntry.src);
		gl.compileShader(fragmentShader);
		if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			return null;
		}
		var vertexShader = gl.createShader(gl.VERTEX_SHADER);
		gl.shaderSource(vertexShader, vsSource);
		gl.compileShader(vertexShader);
		if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			gl.deleteShader(vertexShader);
			return null;
		}
		var shaderProgram = gl.createProgram();
		gl.attachShader(shaderProgram, fragmentShader);
		gl.attachShader(shaderProgram, vertexShader);
		gl.linkProgram(shaderProgram);
		if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			gl.deleteShader(vertexShader);
			gl.deleteProgram(shaderProgram);
			return null;
		}
		gl.useProgram(shaderProgram);
;
		gl.deleteShader(fragmentShader);
		gl.deleteShader(vertexShader);
		var ret = new GLShaderProgram(gl, shaderProgram, name);
		ret.extendBoxHorizontal = shaderEntry.extendBoxHorizontal || 0;
		ret.extendBoxVertical = shaderEntry.extendBoxVertical || 0;
		ret.crossSampling = !!shaderEntry.crossSampling;
		ret.animated = !!shaderEntry.animated;
		ret.parameters = shaderEntry.parameters || [];
		var i, len;
		for (i = 0, len = ret.parameters.length; i < len; i++)
		{
			ret.parameters[i][1] = gl.getUniformLocation(shaderProgram, ret.parameters[i][0]);
			gl.uniform1f(ret.parameters[i][1], 0);
		}
		cr.seal(ret);
		return ret;
	};
	GLWrap_.prototype.getShaderIndex = function(name_)
	{
		var i, len;
		for (i = 0, len = this.shaderPrograms.length; i < len; i++)
		{
			if (this.shaderPrograms[i].name === name_)
				return i;
		}
		return -1;
	};
	GLWrap_.prototype.project = function (x, y, out)
	{
		var mv = this.matMV;
		var proj = this.matP;
		var fTempo = [0, 0, 0, 0, 0, 0, 0, 0];
		fTempo[0] = mv[0]*x+mv[4]*y+mv[12];
		fTempo[1] = mv[1]*x+mv[5]*y+mv[13];
		fTempo[2] = mv[2]*x+mv[6]*y+mv[14];
		fTempo[3] = mv[3]*x+mv[7]*y+mv[15];
		fTempo[4] = proj[0]*fTempo[0]+proj[4]*fTempo[1]+proj[8]*fTempo[2]+proj[12]*fTempo[3];
		fTempo[5] = proj[1]*fTempo[0]+proj[5]*fTempo[1]+proj[9]*fTempo[2]+proj[13]*fTempo[3];
		fTempo[6] = proj[2]*fTempo[0]+proj[6]*fTempo[1]+proj[10]*fTempo[2]+proj[14]*fTempo[3];
		fTempo[7] = -fTempo[2];
		if(fTempo[7]===0.0)	//The w value
			return;
		fTempo[7]=1.0/fTempo[7];
		fTempo[4]*=fTempo[7];
		fTempo[5]*=fTempo[7];
		fTempo[6]*=fTempo[7];
		out[0]=(fTempo[4]*0.5+0.5)*this.width;
		out[1]=(fTempo[5]*0.5+0.5)*this.height;
	};
	GLWrap_.prototype.setSize = function(w, h, force)
	{
		if (this.width === w && this.height === h && !force)
			return;
		this.endBatch();
		this.width = w;
		this.height = h;
		this.gl.viewport(0, 0, w, h);
		mat4.perspective(45, w / h, 1, 1000, this.matP);
		mat4.lookAt(this.cam, this.look, this.up, this.matMV);
		var tl = [0, 0];
		var br = [0, 0];
		this.project(0, 0, tl);
		this.project(1, 1, br);
		this.worldScale[0] = 1 / (br[0] - tl[0]);
		this.worldScale[1] = -1 / (br[1] - tl[1]);
		var i, len, s;
		for (i = 0, len = this.shaderPrograms.length; i < len; i++)
		{
			s = this.shaderPrograms[i];
			s.hasCurrentMatMV = false;
			if (s.locMatP)
			{
				this.gl.useProgram(s.shaderProgram);
				this.gl.uniformMatrix4fv(s.locMatP, false, this.matP);
			}
		}
		this.gl.useProgram(this.shaderPrograms[this.lastProgram].shaderProgram);
		this.gl.bindTexture(this.gl.TEXTURE_2D, null);
		this.gl.activeTexture(this.gl.TEXTURE1);
		this.gl.bindTexture(this.gl.TEXTURE_2D, null);
		this.gl.activeTexture(this.gl.TEXTURE0);
		this.lastTexture0 = null;
		this.lastTexture1 = null;
	};
	GLWrap_.prototype.resetModelView = function ()
	{
		mat4.lookAt(this.cam, this.look, this.up, this.matMV);
		mat4.scale(this.matMV, this.worldScale);
	};
	GLWrap_.prototype.translate = function (x, y)
	{
		if (x === 0 && y === 0)
			return;
		this.tmpVec3[0] = x;// * this.worldScale[0];
		this.tmpVec3[1] = y;// * this.worldScale[1];
		this.tmpVec3[2] = 0;
		mat4.translate(this.matMV, this.tmpVec3);
	};
	GLWrap_.prototype.scale = function (x, y)
	{
		if (x === 1 && y === 1)
			return;
		this.tmpVec3[0] = x;
		this.tmpVec3[1] = y;
		this.tmpVec3[2] = 1;
		mat4.scale(this.matMV, this.tmpVec3);
	};
	GLWrap_.prototype.rotateZ = function (a)
	{
		if (a === 0)
			return;
		mat4.rotateZ(this.matMV, a);
	};
	GLWrap_.prototype.updateModelView = function()
	{
		var anydiff = false;
		for (var i = 0; i < 16; i++)
		{
			if (this.lastMV[i] !== this.matMV[i])
			{
				anydiff = true;
				break;
			}
		}
		if (!anydiff)
			return;
		var b = this.pushBatch();
		b.type = BATCH_UPDATEMODELVIEW;
		if (b.mat4param)
			mat4.set(this.matMV, b.mat4param);
		else
			b.mat4param = mat4.create(this.matMV);
		mat4.set(this.matMV, this.lastMV);
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	/*
	var debugBatch = false;
	jQuery(document).mousedown(
		function(info) {
			if (info.which === 2)
				debugBatch = true;
		}
	);
	*/
	function GLBatchJob(type_, glwrap_)
	{
		this.type = type_;
		this.glwrap = glwrap_;
		this.gl = glwrap_.gl;
		this.opacityParam = 0;		// for setOpacity()
		this.startIndex = 0;		// for quad()
		this.indexCount = 0;		// "
		this.texParam = null;		// for setTexture()
		this.mat4param = null;		// for updateModelView()
		this.shaderParams = [];		// for user parameters
		cr.seal(this);
	};
	GLBatchJob.prototype.doSetTexture = function ()
	{
		this.gl.bindTexture(this.gl.TEXTURE_2D, this.texParam);
	};
	GLBatchJob.prototype.doSetTexture1 = function ()
	{
		var gl = this.gl;
		gl.activeTexture(gl.TEXTURE1);
		gl.bindTexture(gl.TEXTURE_2D, this.texParam);
		gl.activeTexture(gl.TEXTURE0);
	};
	GLBatchJob.prototype.doSetOpacity = function ()
	{
		var o = this.opacityParam;
		var glwrap = this.glwrap;
		glwrap.currentOpacity = o;
		var curProg = glwrap.currentShader;
		if (curProg.locOpacity)
			this.gl.uniform1f(curProg.locOpacity, o);
	};
	GLBatchJob.prototype.doQuad = function ()
	{
		this.gl.drawElements(this.gl.TRIANGLES, this.indexCount, this.gl.UNSIGNED_SHORT, this.startIndex * 2);
	};
	GLBatchJob.prototype.doSetBlend = function ()
	{
		this.gl.blendFunc(this.startIndex, this.indexCount);
	};
	GLBatchJob.prototype.doUpdateModelView = function ()
	{
		var i, len, s, shaderPrograms = this.glwrap.shaderPrograms, currentProgram = this.glwrap.currentProgram;
		for (i = 0, len = shaderPrograms.length; i < len; i++)
		{
			s = shaderPrograms[i];
			if (i === currentProgram && s.locMatMV)
			{
				this.gl.uniformMatrix4fv(s.locMatMV, false, this.mat4param);
				s.hasCurrentMatMV = true;
			}
			else
				s.hasCurrentMatMV = false;
		}
		mat4.set(this.mat4param, this.glwrap.currentMV);
	};
	GLBatchJob.prototype.doRenderToTexture = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		if (this.texParam)
		{
			if (glwrap.lastTexture1 === this.texParam)
			{
				gl.activeTexture(gl.TEXTURE1);
				gl.bindTexture(gl.TEXTURE_2D, null);
				glwrap.lastTexture1 = null;
				gl.activeTexture(gl.TEXTURE0);
			}
			gl.bindFramebuffer(gl.FRAMEBUFFER, glwrap.fbo);
			gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texParam, 0);
		}
		else
		{
			gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, null, 0);
			gl.bindFramebuffer(gl.FRAMEBUFFER, null);
		}
	};
	GLBatchJob.prototype.doClear = function ()
	{
		var gl = this.gl;
		if (this.startIndex === 0)		// clear whole surface
		{
			gl.clearColor(this.mat4param[0], this.mat4param[1], this.mat4param[2], this.mat4param[3]);
			gl.clear(gl.COLOR_BUFFER_BIT);
		}
		else							// clear rectangle
		{
			gl.enable(gl.SCISSOR_TEST);
			gl.scissor(this.mat4param[0], this.mat4param[1], this.mat4param[2], this.mat4param[3]);
			gl.clearColor(0, 0, 0, 0);
			gl.clear(this.gl.COLOR_BUFFER_BIT);
			gl.disable(gl.SCISSOR_TEST);
		}
	};
	GLBatchJob.prototype.doPoints = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		var s = glwrap.shaderPrograms[1];
		gl.useProgram(s.shaderProgram);
		if (!s.hasCurrentMatMV && s.locMatMV)
		{
			gl.uniformMatrix4fv(s.locMatMV, false, glwrap.currentMV);
			s.hasCurrentMatMV = true;
		}
		gl.enableVertexAttribArray(s.locAPos);
		gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.pointBuffer);
		gl.vertexAttribPointer(s.locAPos, 4, gl.FLOAT, false, 0, 0);
		gl.drawArrays(gl.POINTS, this.startIndex / 4, this.indexCount);
		s = glwrap.currentShader;
		gl.useProgram(s.shaderProgram);
		if (s.locAPos >= 0)
		{
			gl.enableVertexAttribArray(s.locAPos);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.vertexBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
		}
		if (s.locATex >= 0)
		{
			gl.enableVertexAttribArray(s.locATex);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.texcoordBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
	};
	GLBatchJob.prototype.doSetProgram = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		var s = glwrap.shaderPrograms[this.startIndex];		// recycled param to save memory
		glwrap.currentProgram = this.startIndex;			// current batch program
		glwrap.currentShader = s;
		gl.useProgram(s.shaderProgram);						// switch to
		if (!s.hasCurrentMatMV && s.locMatMV)
		{
			gl.uniformMatrix4fv(s.locMatMV, false, glwrap.currentMV);
			s.hasCurrentMatMV = true;
		}
		if (s.locOpacity)
			gl.uniform1f(s.locOpacity, glwrap.currentOpacity);
		if (s.locAPos >= 0)
		{
			gl.enableVertexAttribArray(s.locAPos);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.vertexBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
		}
		if (s.locATex >= 0)
		{
			gl.enableVertexAttribArray(s.locATex);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.texcoordBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
	}
	GLBatchJob.prototype.doSetProgramParameters = function ()
	{
		var i, len, s = this.glwrap.currentShader;
		var gl = this.gl;
		var mat4param = this.mat4param;
		if (s.locSamplerBack && this.glwrap.lastTexture1 !== this.texParam)
		{
			gl.activeTexture(gl.TEXTURE1);
			gl.bindTexture(gl.TEXTURE_2D, this.texParam);
			this.glwrap.lastTexture1 = this.texParam;
			gl.activeTexture(gl.TEXTURE0);
		}
		if (s.locPixelWidth)
			gl.uniform1f(s.locPixelWidth, mat4param[0]);
		if (s.locPixelHeight)
			gl.uniform1f(s.locPixelHeight, mat4param[1]);
		if (s.locDestStart)
			gl.uniform2f(s.locDestStart, mat4param[2], mat4param[3]);
		if (s.locDestEnd)
			gl.uniform2f(s.locDestEnd, mat4param[4], mat4param[5]);
		if (s.locLayerScale)
			gl.uniform1f(s.locLayerScale, mat4param[6]);
		if (s.locLayerAngle)
			gl.uniform1f(s.locLayerAngle, mat4param[7]);
		if (s.locViewOrigin)
			gl.uniform2f(s.locViewOrigin, mat4param[8], mat4param[9]);
		if (s.locSeconds)
			gl.uniform1f(s.locSeconds, cr.performance_now() / 1000.0);
		if (s.parameters.length)
		{
			for (i = 0, len = s.parameters.length; i < len; i++)
			{
				gl.uniform1f(s.parameters[i][1], this.shaderParams[i]);
			}
		}
	};
	GLWrap_.prototype.pushBatch = function ()
	{
		if (this.batchPtr === this.batch.length)
			this.batch.push(new GLBatchJob(BATCH_NULL, this));
		return this.batch[this.batchPtr++];
	};
	GLWrap_.prototype.endBatch = function ()
	{
		if (this.batchPtr === 0)
			return;
		if (this.gl.isContextLost())
			return;
		var gl = this.gl;
		if (this.pointPtr > 0)
		{
			gl.bindBuffer(gl.ARRAY_BUFFER, this.pointBuffer);
			gl.bufferData(gl.ARRAY_BUFFER, this.pointData.subarray(0, this.pointPtr), gl.STREAM_DRAW);
			if (s && s.locAPos >= 0 && s.name === "<point>")
				gl.vertexAttribPointer(s.locAPos, 4, gl.FLOAT, false, 0, 0);
		}
		if (this.vertexPtr > 0)
		{
			var s = this.currentShader;
			gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffers[this.curBuffer]);
			gl.bufferData(gl.ARRAY_BUFFER, this.vertexData.subarray(0, this.vertexPtr), gl.STREAM_DRAW);
			if (s && s.locAPos >= 0 && s.name !== "<point>")
				gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
			gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffers[this.curBuffer]);
			gl.bufferData(gl.ARRAY_BUFFER, this.texcoordData.subarray(0, this.vertexPtr), gl.STREAM_DRAW);
			if (s && s.locATex >= 0 && s.name !== "<point>")
				gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
		var i, len, b;
		for (i = 0, len = this.batchPtr; i < len; i++)
		{
			b = this.batch[i];
			switch (b.type) {
			case 1:
				b.doQuad();
				break;
			case 2:
				b.doSetTexture();
				break;
			case 3:
				b.doSetOpacity();
				break;
			case 4:
				b.doSetBlend();
				break;
			case 5:
				b.doUpdateModelView();
				break;
			case 6:
				b.doRenderToTexture();
				break;
			case 7:
				b.doClear();
				break;
			case 8:
				b.doPoints();
				break;
			case 9:
				b.doSetProgram();
				break;
			case 10:
				b.doSetProgramParameters();
				break;
			case 11:
				b.doSetTexture1();
				break;
			}
		}
		this.batchPtr = 0;
		this.vertexPtr = 0;
		this.pointPtr = 0;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
		this.curBuffer++;
		if (this.curBuffer >= MULTI_BUFFERS)
			this.curBuffer = 0;
	};
	GLWrap_.prototype.setOpacity = function (op)
	{
		if (op === this.lastOpacity)
			return;
		var b = this.pushBatch();
		b.type = BATCH_SETOPACITY;
		b.opacityParam = op;
		this.lastOpacity = op;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.setTexture = function (tex)
	{
		if (tex === this.lastTexture0)
			return;
;
		var b = this.pushBatch();
		b.type = BATCH_SETTEXTURE;
		b.texParam = tex;
		this.lastTexture0 = tex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.setBlend = function (s, d)
	{
		if (s === this.lastSrcBlend && d === this.lastDestBlend)
			return;
		var b = this.pushBatch();
		b.type = BATCH_SETBLEND;
		b.startIndex = s;		// recycle params to save memory
		b.indexCount = d;
		this.lastSrcBlend = s;
		this.lastDestBlend = d;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.isPremultipliedAlphaBlend = function ()
	{
		return (this.lastSrcBlend === this.gl.ONE && this.lastDestBlend === this.gl.ONE_MINUS_SRC_ALPHA);
	};
	GLWrap_.prototype.setAlphaBlend = function ()
	{
		this.setBlend(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);
	};
	GLWrap_.prototype.setNoPremultiplyAlphaBlend = function ()
	{
		this.setBlend(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);
	};
	var LAST_VERTEX = MAX_VERTICES * 2 - 8;
	GLWrap_.prototype.quad = function(tlx, tly, trx, try_, brx, bry, blx, bly)
	{
		if (this.vertexPtr >= LAST_VERTEX)
			this.endBatch();
		var v = this.vertexPtr;			// vertex cursor
		var vd = this.vertexData;		// vertex data array
		var td = this.texcoordData;		// texture coord data array
		if (this.hasQuadBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount += 6;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_QUAD;
			b.startIndex = (v / 4) * 3;
			b.indexCount = 6;
			this.hasQuadBatchTop = true;
			this.hasPointBatchTop = false;
		}
		vd[v] = tlx;
		td[v++] = 0;
		vd[v] = tly;
		td[v++] = 0;
		vd[v] = trx;
		td[v++] = 1;
		vd[v] = try_;
		td[v++] = 0;
		vd[v] = brx;
		td[v++] = 1;
		vd[v] = bry;
		td[v++] = 1;
		vd[v] = blx;
		td[v++] = 0;
		vd[v] = bly;
		td[v++] = 1;
		this.vertexPtr = v;
	};
	GLWrap_.prototype.quadTex = function(tlx, tly, trx, try_, brx, bry, blx, bly, rcTex)
	{
		if (this.vertexPtr >= LAST_VERTEX)
			this.endBatch();
		var v = this.vertexPtr;			// vertex cursor
		var vd = this.vertexData;		// vertex data array
		var td = this.texcoordData;		// texture coord data array
		if (this.hasQuadBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount += 6;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_QUAD;
			b.startIndex = (v / 4) * 3;
			b.indexCount = 6;
			this.hasQuadBatchTop = true;
			this.hasPointBatchTop = false;
		}
		var rc_left = rcTex.left;
		var rc_top = rcTex.top;
		var rc_right = rcTex.right;
		var rc_bottom = rcTex.bottom;
		vd[v] = tlx;
		td[v++] = rc_left;
		vd[v] = tly;
		td[v++] = rc_top;
		vd[v] = trx;
		td[v++] = rc_right;
		vd[v] = try_;
		td[v++] = rc_top;
		vd[v] = brx;
		td[v++] = rc_right;
		vd[v] = bry;
		td[v++] = rc_bottom;
		vd[v] = blx;
		td[v++] = rc_left;
		vd[v] = bly;
		td[v++] = rc_bottom;
		this.vertexPtr = v;
	};
	GLWrap_.prototype.quadTexUV = function(tlx, tly, trx, try_, brx, bry, blx, bly, tlu, tlv, tru, trv, bru, brv, blu, blv)
	{
		if (this.vertexPtr >= LAST_VERTEX)
			this.endBatch();
		var v = this.vertexPtr;			// vertex cursor
		var vd = this.vertexData;		// vertex data array
		var td = this.texcoordData;		// texture coord data array
		if (this.hasQuadBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount += 6;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_QUAD;
			b.startIndex = (v / 4) * 3;
			b.indexCount = 6;
			this.hasQuadBatchTop = true;
			this.hasPointBatchTop = false;
		}
		vd[v] = tlx;
		td[v++] = tlu;
		vd[v] = tly;
		td[v++] = tlv;
		vd[v] = trx;
		td[v++] = tru;
		vd[v] = try_;
		td[v++] = trv;
		vd[v] = brx;
		td[v++] = bru;
		vd[v] = bry;
		td[v++] = brv;
		vd[v] = blx;
		td[v++] = blu;
		vd[v] = bly;
		td[v++] = blv;
		this.vertexPtr = v;
	};
	GLWrap_.prototype.convexPoly = function(pts)
	{
		var pts_count = pts.length / 2;
;
		var tris = pts_count - 2;	// 3 points = 1 tri, 4 points = 2 tris, 5 points = 3 tris etc.
		var last_tri = tris - 1;
		var p0x = pts[0];
		var p0y = pts[1];
		var i, i2, p1x, p1y, p2x, p2y, p3x, p3y;
		for (i = 0; i < tris; i += 2)		// draw 2 triangles at a time
		{
			i2 = i * 2;
			p1x = pts[i2 + 2];
			p1y = pts[i2 + 3];
			p2x = pts[i2 + 4];
			p2y = pts[i2 + 5];
			if (i === last_tri)
			{
				this.quad(p0x, p0y, p1x, p1y, p2x, p2y, p2x, p2y);
			}
			else
			{
				p3x = pts[i2 + 6];
				p3y = pts[i2 + 7];
				this.quad(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y);
			}
		}
	};
	var LAST_POINT = MAX_POINTS - 4;
	GLWrap_.prototype.point = function(x_, y_, size_, opacity_)
	{
		if (this.pointPtr >= LAST_POINT)
			this.endBatch();
		var p = this.pointPtr;			// point cursor
		var pd = this.pointData;		// point data array
		if (this.hasPointBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount++;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_POINTS;
			b.startIndex = p;
			b.indexCount = 1;
			this.hasPointBatchTop = true;
			this.hasQuadBatchTop = false;
		}
		pd[p++] = x_;
		pd[p++] = y_;
		pd[p++] = size_;
		pd[p++] = opacity_;
		this.pointPtr = p;
	};
	GLWrap_.prototype.switchProgram = function (progIndex)
	{
		if (this.lastProgram === progIndex)
			return;			// no change
		var shaderProg = this.shaderPrograms[progIndex];
		if (!shaderProg)
		{
			if (this.lastProgram === 0)
				return;								// already on default shader
			progIndex = 0;
			shaderProg = this.shaderPrograms[0];
		}
		var b = this.pushBatch();
		b.type = BATCH_SETPROGRAM;
		b.startIndex = progIndex;
		this.lastProgram = progIndex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.programUsesDest = function (progIndex)
	{
		var s = this.shaderPrograms[progIndex];
		return !!(s.locDestStart || s.locDestEnd);
	};
	GLWrap_.prototype.programUsesCrossSampling = function (progIndex)
	{
		var s = this.shaderPrograms[progIndex];
		return !!(s.locDestStart || s.locDestEnd || s.crossSampling);
	};
	GLWrap_.prototype.programExtendsBox = function (progIndex)
	{
		var s = this.shaderPrograms[progIndex];
		return s.extendBoxHorizontal !== 0 || s.extendBoxVertical !== 0;
	};
	GLWrap_.prototype.getProgramBoxExtendHorizontal = function (progIndex)
	{
		return this.shaderPrograms[progIndex].extendBoxHorizontal;
	};
	GLWrap_.prototype.getProgramBoxExtendVertical = function (progIndex)
	{
		return this.shaderPrograms[progIndex].extendBoxVertical;
	};
	GLWrap_.prototype.getProgramParameterType = function (progIndex, paramIndex)
	{
		return this.shaderPrograms[progIndex].parameters[paramIndex][2];
	};
	GLWrap_.prototype.programIsAnimated = function (progIndex)
	{
		return this.shaderPrograms[progIndex].animated;
	};
	GLWrap_.prototype.setProgramParameters = function (backTex, pixelWidth, pixelHeight, destStartX, destStartY, destEndX, destEndY, layerScale, layerAngle, viewOriginLeft, viewOriginTop, params)
	{
		var i, len;
		var s = this.shaderPrograms[this.lastProgram];
		var b, mat4param, shaderParams;
		if (s.hasAnyOptionalUniforms || params.length)
		{
			b = this.pushBatch();
			b.type = BATCH_SETPROGRAMPARAMETERS;
			if (b.mat4param)
				mat4.set(this.matMV, b.mat4param);
			else
				b.mat4param = mat4.create();
			mat4param = b.mat4param;
			mat4param[0] = pixelWidth;
			mat4param[1] = pixelHeight;
			mat4param[2] = destStartX;
			mat4param[3] = destStartY;
			mat4param[4] = destEndX;
			mat4param[5] = destEndY;
			mat4param[6] = layerScale;
			mat4param[7] = layerAngle;
			mat4param[8] = viewOriginLeft;
			mat4param[9] = viewOriginTop;
			if (s.locSamplerBack)
			{
;
				b.texParam = backTex;
			}
			else
				b.texParam = null;
			if (params.length)
			{
				shaderParams = b.shaderParams;
				shaderParams.length = params.length;
				for (i = 0, len = params.length; i < len; i++)
					shaderParams[i] = params[i];
			}
			this.hasQuadBatchTop = false;
			this.hasPointBatchTop = false;
		}
	};
	GLWrap_.prototype.clear = function (r, g, b_, a)
	{
		var b = this.pushBatch();
		b.type = BATCH_CLEAR;
		b.startIndex = 0;					// clear all mode
		if (!b.mat4param)
			b.mat4param = mat4.create();
		b.mat4param[0] = r;
		b.mat4param[1] = g;
		b.mat4param[2] = b_;
		b.mat4param[3] = a;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.clearRect = function (x, y, w, h)
	{
		if (w < 0 || h < 0)
			return;							// invalid clear area
		var b = this.pushBatch();
		b.type = BATCH_CLEAR;
		b.startIndex = 1;					// clear rect mode
		if (!b.mat4param)
			b.mat4param = mat4.create();
		b.mat4param[0] = x;
		b.mat4param[1] = y;
		b.mat4param[2] = w;
		b.mat4param[3] = h;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.present = function ()
	{
		this.endBatch();
		this.gl.flush();
		/*
		if (debugBatch)
		{
;
			debugBatch = false;
		}
		*/
	};
	function nextHighestPowerOfTwo(x) {
		--x;
		for (var i = 1; i < 32; i <<= 1) {
			x = x | x >> i;
		}
		return x + 1;
	}
	var all_textures = [];
	var textures_by_src = {};
	var BF_RGBA8 = 0;
	var BF_RGB8 = 1;
	var BF_RGBA4 = 2;
	var BF_RGB5_A1 = 3;
	var BF_RGB565 = 4;
	GLWrap_.prototype.loadTexture = function (img, tiling, linearsampling, pixelformat, tiletype, nomip)
	{
		tiling = !!tiling;
		linearsampling = !!linearsampling;
		var tex_key = img.src + "," + tiling + "," + linearsampling + (tiling ? ("," + tiletype) : "");
		var webGL_texture = null;
		if (typeof img.src !== "undefined" && textures_by_src.hasOwnProperty(tex_key))
		{
			webGL_texture = textures_by_src[tex_key];
			webGL_texture.c2refcount++;
			return webGL_texture;
		}
		this.endBatch();
;
		var gl = this.gl;
		var isPOT = (cr.isPOT(img.width) && cr.isPOT(img.height));
		webGL_texture = gl.createTexture();
		gl.bindTexture(gl.TEXTURE_2D, webGL_texture);
		gl.pixelStorei(gl["UNPACK_PREMULTIPLY_ALPHA_WEBGL"], true);
		var internalformat = gl.RGBA;
		var format = gl.RGBA;
		var type = gl.UNSIGNED_BYTE;
		if (pixelformat && !this.isIE)
		{
			switch (pixelformat) {
			case BF_RGB8:
				internalformat = gl.RGB;
				format = gl.RGB;
				break;
			case BF_RGBA4:
				type = gl.UNSIGNED_SHORT_4_4_4_4;
				break;
			case BF_RGB5_A1:
				type = gl.UNSIGNED_SHORT_5_5_5_1;
				break;
			case BF_RGB565:
				internalformat = gl.RGB;
				format = gl.RGB;
				type = gl.UNSIGNED_SHORT_5_6_5;
				break;
			}
		}
		if (!isPOT && tiling)
		{
			var canvas = document.createElement("canvas");
			canvas.width = cr.nextHighestPowerOfTwo(img.width);
			canvas.height = cr.nextHighestPowerOfTwo(img.height);
			var ctx = canvas.getContext("2d");
			ctx["webkitImageSmoothingEnabled"] = linearsampling;
			ctx["mozImageSmoothingEnabled"] = linearsampling;
			ctx["msImageSmoothingEnabled"] = linearsampling;
			ctx["imageSmoothingEnabled"] = linearsampling;
			ctx.drawImage(img,
						  0, 0, img.width, img.height,
						  0, 0, canvas.width, canvas.height);
			gl.texImage2D(gl.TEXTURE_2D, 0, internalformat, format, type, canvas);
		}
		else
			gl.texImage2D(gl.TEXTURE_2D, 0, internalformat, format, type, img);
		if (tiling)
		{
			if (tiletype === "repeat-x")
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
			}
			else if (tiletype === "repeat-y")
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
			}
			else
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
			}
		}
		else
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
		}
		if (linearsampling)
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
			if (isPOT && this.enable_mipmaps && !nomip)
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);
				gl.generateMipmap(gl.TEXTURE_2D);
			}
			else
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
		}
		else
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
		}
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture0 = null;
		webGL_texture.c2width = img.width;
		webGL_texture.c2height = img.height;
		webGL_texture.c2refcount = 1;
		webGL_texture.c2texkey = tex_key;
		all_textures.push(webGL_texture);
		textures_by_src[tex_key] = webGL_texture;
		return webGL_texture;
	};
	GLWrap_.prototype.createEmptyTexture = function (w, h, linearsampling, _16bit, tiling)
	{
		this.endBatch();
		var gl = this.gl;
		if (this.isIE)
			_16bit = false;
		var webGL_texture = gl.createTexture();
		gl.bindTexture(gl.TEXTURE_2D, webGL_texture);
		gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, _16bit ? gl.UNSIGNED_SHORT_4_4_4_4 : gl.UNSIGNED_BYTE, null);
		if (tiling)
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
		}
		else
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
		}
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, linearsampling ? gl.LINEAR : gl.NEAREST);
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, linearsampling ? gl.LINEAR : gl.NEAREST);
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture0 = null;
		webGL_texture.c2width = w;
		webGL_texture.c2height = h;
		all_textures.push(webGL_texture);
		return webGL_texture;
	};
	GLWrap_.prototype.videoToTexture = function (video_, texture_, _16bit)
	{
		this.endBatch();
		var gl = this.gl;
		if (this.isIE)
			_16bit = false;
		gl.bindTexture(gl.TEXTURE_2D, texture_);
		gl.pixelStorei(gl["UNPACK_PREMULTIPLY_ALPHA_WEBGL"], true);
		gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, _16bit ? gl.UNSIGNED_SHORT_4_4_4_4 : gl.UNSIGNED_BYTE, video_);
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture0 = null;
	};
	GLWrap_.prototype.deleteTexture = function (tex)
	{
		if (!tex)
			return;
		if (typeof tex.c2refcount !== "undefined" && tex.c2refcount > 1)
		{
			tex.c2refcount--;
			return;
		}
		this.endBatch();
		if (tex === this.lastTexture0)
		{
			this.gl.bindTexture(this.gl.TEXTURE_2D, null);
			this.lastTexture0 = null;
		}
		if (tex === this.lastTexture1)
		{
			this.gl.activeTexture(this.gl.TEXTURE1);
			this.gl.bindTexture(this.gl.TEXTURE_2D, null);
			this.gl.activeTexture(this.gl.TEXTURE0);
			this.lastTexture1 = null;
		}
		cr.arrayFindRemove(all_textures, tex);
		if (typeof tex.c2texkey !== "undefined")
			delete textures_by_src[tex.c2texkey];
		this.gl.deleteTexture(tex);
	};
	GLWrap_.prototype.estimateVRAM = function ()
	{
		var total = this.width * this.height * 4 * 2;
		var i, len, t;
		for (i = 0, len = all_textures.length; i < len; i++)
		{
			t = all_textures[i];
			total += (t.c2width * t.c2height * 4);
		}
		return total;
	};
	GLWrap_.prototype.textureCount = function ()
	{
		return all_textures.length;
	};
	GLWrap_.prototype.setRenderingToTexture = function (tex)
	{
		if (tex === this.renderToTex)
			return;
;
		var b = this.pushBatch();
		b.type = BATCH_RENDERTOTEXTURE;
		b.texParam = tex;
		this.renderToTex = tex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	cr.GLWrap = GLWrap_;
}());
;
(function()
{
	function Runtime(canvas)
	{
		if (!canvas || (!canvas.getContext && !canvas["dc"]))
			return;
		if (canvas["c2runtime"])
			return;
		else
			canvas["c2runtime"] = this;
		var self = this;
		this.isCrosswalk = /crosswalk/i.test(navigator.userAgent) || /xwalk/i.test(navigator.userAgent) || !!(typeof window["c2isCrosswalk"] !== "undefined" && window["c2isCrosswalk"]);
		this.isPhoneGap = (!this.isCrosswalk && (typeof window["device"] !== "undefined" && (typeof window["device"]["cordova"] !== "undefined" || typeof window["device"]["phonegap"] !== "undefined"))) || (typeof window["c2isphonegap"] !== "undefined" && window["c2isphonegap"]);
		this.isDirectCanvas = !!canvas["dc"];
		this.isAppMobi = (typeof window["AppMobi"] !== "undefined" || this.isDirectCanvas);
		this.isCocoonJs = !!window["c2cocoonjs"];
		this.isEjecta = !!window["c2ejecta"];
		if (this.isCocoonJs)
		{
			CocoonJS["App"]["onSuspended"].addEventListener(function() {
				self["setSuspended"](true);
			});
			CocoonJS["App"]["onActivated"].addEventListener(function () {
				self["setSuspended"](false);
			});
		}
		if (this.isEjecta)
		{
			document.addEventListener("pagehide", function() {
				self["setSuspended"](true);
			});
			document.addEventListener("pageshow", function() {
				self["setSuspended"](false);
			});
			document.addEventListener("resize", function () {
				self["setSize"](window.innerWidth, window.innerHeight);
			});
		}
		this.isDomFree = (this.isDirectCanvas || this.isCocoonJs || this.isEjecta);
		this.isIE = /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent) || /iemobile/i.test(navigator.userAgent);
		this.isTizen = /tizen/i.test(navigator.userAgent);
		this.isAndroid = /android/i.test(navigator.userAgent) && !this.isTizen && !this.isIE;		// IE mobile and Tizen masquerade as Android
		this.isiPhone = (/iphone/i.test(navigator.userAgent) || /ipod/i.test(navigator.userAgent)) && !this.isIE;	// treat ipod as an iphone; IE mobile masquerades as iPhone
		this.isiPad = /ipad/i.test(navigator.userAgent);
		this.isiOS = this.isiPhone || this.isiPad || this.isEjecta;
		this.isiPhoneiOS6 = (this.isiPhone && /os\s6/i.test(navigator.userAgent));
		this.isChrome = /chrome/i.test(navigator.userAgent) || /chromium/i.test(navigator.userAgent);
		this.isAmazonWebApp = /amazonwebappplatform/i.test(navigator.userAgent);
		this.isFirefox = /firefox/i.test(navigator.userAgent);
		this.isSafari = /safari/i.test(navigator.userAgent) && !this.isChrome && !this.isIE;		// Chrome and IE Mobile masquerade as Safari
		this.isWindows = /windows/i.test(navigator.userAgent);
		this.isNodeWebkit = (typeof window["c2nodewebkit"] !== "undefined" || /nodewebkit/i.test(navigator.userAgent));
		this.isArcade = (typeof window["is_scirra_arcade"] !== "undefined");
		this.isWindows8App = !!(typeof window["c2isWindows8"] !== "undefined" && window["c2isWindows8"]);
		this.isWindows8Capable = !!(typeof window["c2isWindows8Capable"] !== "undefined" && window["c2isWindows8Capable"]);
		this.isWindowsPhone8 = !!(typeof window["c2isWindowsPhone8"] !== "undefined" && window["c2isWindowsPhone8"]);
		this.isWindowsPhone81 = !!(typeof window["c2isWindowsPhone81"] !== "undefined" && window["c2isWindowsPhone81"]);
		this.isWinJS = (this.isWindows8App || this.isWindows8Capable || this.isWindowsPhone81);	// note not WP8.0
		this.isBlackberry10 = !!(typeof window["c2isBlackberry10"] !== "undefined" && window["c2isBlackberry10"]);
		this.isAndroidStockBrowser = (this.isAndroid && !this.isChrome && !this.isFirefox && !this.isAmazonWebApp && !this.isDomFree);
		this.devicePixelRatio = 1;
		this.isMobile = (this.isPhoneGap || this.isCrosswalk || this.isAppMobi || this.isCocoonJs || this.isAndroid || this.isiOS || this.isWindowsPhone8 || this.isWindowsPhone81 || this.isBlackberry10 || this.isTizen || this.isEjecta);
		if (!this.isMobile)
		{
			this.isMobile = /(blackberry|bb10|playbook|palm|symbian|nokia|windows\s+ce|phone|mobile|tablet|kindle|silk)/i.test(navigator.userAgent);
		}
		if (typeof cr_is_preview !== "undefined" && !this.isNodeWebkit && (window.location.search === "?nw" || /nodewebkit/i.test(navigator.userAgent)))
		{
			this.isNodeWebkit = true;
		}
		this.isDebug = (typeof cr_is_preview !== "undefined" && window.location.search.indexOf("debug") > -1);
		this.canvas = canvas;
		this.canvasdiv = document.getElementById("c2canvasdiv");
		this.gl = null;
		this.glwrap = null;
		this.ctx = null;
		this.fullscreenOldMarginCss = "";
		this.firstInFullscreen = false;
		this.oldWidth = 0;		// for restoring non-fullscreen canvas after fullscreen
		this.oldHeight = 0;
		this.canvas.oncontextmenu = function (e) { if (e.preventDefault) e.preventDefault(); return false; };
		this.canvas.onselectstart = function (e) { if (e.preventDefault) e.preventDefault(); return false; };
		if (this.isDirectCanvas)
			window["c2runtime"] = this;
		if (this.isNodeWebkit)
		{
			window["ondragover"] = function(e) { e.preventDefault(); return false; };
			window["ondrop"] = function(e) { e.preventDefault(); return false; };
			require("nw.gui")["App"]["clearCache"]();
		}
		this.width = canvas.width;
		this.height = canvas.height;
		this.draw_width = this.width;
		this.draw_height = this.height;
		this.cssWidth = this.width;
		this.cssHeight = this.height;
		this.lastWindowWidth = window.innerWidth;
		this.lastWindowHeight = window.innerHeight;
		this.redraw = true;
		this.isSuspended = false;
		if (!Date.now) {
		  Date.now = function now() {
			return +new Date();
		  };
		}
		this.plugins = [];
		this.types = {};
		this.types_by_index = [];
		this.behaviors = [];
		this.layouts = {};
		this.layouts_by_index = [];
		this.eventsheets = {};
		this.eventsheets_by_index = [];
		this.wait_for_textures = [];        // for blocking until textures loaded
		this.triggers_to_postinit = [];
		this.all_global_vars = [];
		this.all_local_vars = [];
		this.solidBehavior = null;
		this.jumpthruBehavior = null;
		this.shadowcasterBehavior = null;
		this.deathRow = new cr.ObjectSet();
		this.isInClearDeathRow = false;
		this.isInOnDestroy = 0;					// needs to support recursion so increments and decrements and is true if > 0
		this.isRunningEvents = false;
		this.createRow = [];
		this.isLoadingState = false;
		this.saveToSlot = "";
		this.loadFromSlot = "";
		this.loadFromJson = "";
		this.lastSaveJson = "";
		this.signalledContinuousPreview = false;
		this.suspendDrawing = false;		// for hiding display until continuous preview loads
		this.dt = 0;
        this.dt1 = 0;
		this.logictime = 0;			// used to calculate CPUUtilisation
		this.cpuutilisation = 0;
		this.zeroDtCount = 0;
        this.timescale = 1.0;
        this.kahanTime = new cr.KahanAdder();
		this.last_tick_time = 0;
		this.measuring_dt = true;
		this.fps = 0;
		this.last_fps_time = 0;
		this.tickcount = 0;
		this.execcount = 0;
		this.framecount = 0;        // for fps
		this.objectcount = 0;
		this.changelayout = null;
		this.destroycallbacks = [];
		this.event_stack = [];
		this.event_stack_index = -1;
		this.localvar_stack = [[]];
		this.localvar_stack_index = 0;
		this.trigger_depth = 0;		// recursion depth for triggers
		this.pushEventStack(null);
		this.loop_stack = [];
		this.loop_stack_index = -1;
		this.next_uid = 0;
		this.next_puid = 0;		// permanent unique ids
		this.layout_first_tick = true;
		this.family_count = 0;
		this.suspend_events = [];
		this.raf_id = -1;
		this.timeout_id = -1;
		this.isloading = true;
		this.loadingprogress = 0;
		this.isNodeFullscreen = false;
		this.stackLocalCount = 0;	// number of stack-based local vars for recursion
		this.audioInstance = null;
		this.halfFramerateMode = false;
		this.lastRafTime = 0;		// time of last requestAnimationFrame call
		this.ranLastRaf = false;	// false if last requestAnimationFrame was skipped for half framerate mode
		this.had_a_click = false;
		this.isInUserInputEvent = false;
		this.objects_to_pretick = new cr.ObjectSet();
        this.objects_to_tick = new cr.ObjectSet();
		this.objects_to_tick2 = new cr.ObjectSet();
		this.registered_collisions = [];
		this.temp_poly = new cr.CollisionPoly([]);
		this.temp_poly2 = new cr.CollisionPoly([]);
		this.allGroups = [];				// array of all event groups
        this.groups_by_name = {};
		this.cndsBySid = {};
		this.actsBySid = {};
		this.varsBySid = {};
		this.blocksBySid = {};
		this.running_layout = null;			// currently running layout
		this.layer_canvas = null;			// for layers "render-to-texture"
		this.layer_ctx = null;
		this.layer_tex = null;
		this.layout_tex = null;
		this.layout_canvas = null;
		this.layout_ctx = null;
		this.is_WebGL_context_lost = false;
		this.uses_background_blending = false;	// if any shader uses background blending, so entire layout renders to texture
		this.fx_tex = [null, null];
		this.fullscreen_scaling = 0;
		this.files_subfolder = "";			// path with project files
		this.objectsByUid = {};				// maps every in-use UID (as a string) to its instance
		this.loaderlogo = null;
		this.snapshotCanvas = null;
		this.snapshotData = "";
		this.load();
		this.isRetina = ((!this.isDomFree || this.isEjecta) && this.useHighDpi && !this.isAndroidStockBrowser);
		this.devicePixelRatio = (this.isRetina ? (window["devicePixelRatio"] || window["webkitDevicePixelRatio"] || window["mozDevicePixelRatio"] || window["msDevicePixelRatio"] || 1) : 1);
		this.ClearDeathRow();
		var attribs;
		var alpha_canvas = this.alphaBackground && !(this.isNodeWebkit || this.isWinJS || this.isWindowsPhone8 || this.isCrosswalk);
		if (this.fullscreen_mode > 0)
			this["setSize"](window.innerWidth, window.innerHeight, true);
		try {
			if (this.enableWebGL && (this.isCocoonJs || this.isEjecta || !this.isDomFree))
			{
				attribs = {
					"alpha": alpha_canvas,
					"depth": false,
					"antialias": false,
					"failIfMajorPerformanceCaveat": true
				};
				this.gl = (canvas.getContext("webgl", attribs) || canvas.getContext("experimental-webgl", attribs));
			}
		}
		catch (e) {
		}
		if (this.gl)
		{
;
			if (!this.isDomFree)
			{
				this.overlay_canvas = document.createElement("canvas");
				jQuery(this.overlay_canvas).appendTo(this.canvas.parentNode);
				this.overlay_canvas.oncontextmenu = function (e) { return false; };
				this.overlay_canvas.onselectstart = function (e) { return false; };
				this.overlay_canvas.width = this.cssWidth;
				this.overlay_canvas.height = this.cssHeight;
				jQuery(this.overlay_canvas).css({"width": this.cssWidth + "px",
												"height": this.cssHeight + "px"});
				this.positionOverlayCanvas();
				this.overlay_ctx = this.overlay_canvas.getContext("2d");
			}
			this.glwrap = new cr.GLWrap(this.gl, this.isMobile);
			this.glwrap.setSize(canvas.width, canvas.height);
			this.glwrap.enable_mipmaps = (this.downscalingQuality !== 0);
			this.ctx = null;
			this.canvas.addEventListener("webglcontextlost", function (ev) {
				ev.preventDefault();
				self.onContextLost();
				console.log("[Construct 2] WebGL context lost");
				window["cr_setSuspended"](true);		// stop rendering
			}, false);
			this.canvas.addEventListener("webglcontextrestored", function (ev) {
				self.glwrap.initState();
				self.glwrap.setSize(self.glwrap.width, self.glwrap.height, true);
				self.layer_tex = null;
				self.layout_tex = null;
				self.fx_tex[0] = null;
				self.fx_tex[1] = null;
				self.onContextRestored();
				self.redraw = true;
				console.log("[Construct 2] WebGL context restored");
				window["cr_setSuspended"](false);		// resume rendering
			}, false);
			var i, len, j, lenj, k, lenk, t, s, l, y;
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				for (j = 0, lenj = t.effect_types.length; j < lenj; j++)
				{
					s = t.effect_types[j];
					s.shaderindex = this.glwrap.getShaderIndex(s.id);
					this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(s.shaderindex);
				}
			}
			for (i = 0, len = this.layouts_by_index.length; i < len; i++)
			{
				l = this.layouts_by_index[i];
				for (j = 0, lenj = l.effect_types.length; j < lenj; j++)
				{
					s = l.effect_types[j];
					s.shaderindex = this.glwrap.getShaderIndex(s.id);
				}
				for (j = 0, lenj = l.layers.length; j < lenj; j++)
				{
					y = l.layers[j];
					for (k = 0, lenk = y.effect_types.length; k < lenk; k++)
					{
						s = y.effect_types[k];
						s.shaderindex = this.glwrap.getShaderIndex(s.id);
						this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(s.shaderindex);
					}
				}
			}
		}
		else
		{
			if (this.fullscreen_mode > 0 && this.isDirectCanvas)
			{
;
				this.canvas = null;
				document.oncontextmenu = function (e) { return false; };
				document.onselectstart = function (e) { return false; };
				this.ctx = AppMobi["canvas"]["getContext"]("2d");
				try {
					this.ctx["samplingMode"] = this.linearSampling ? "smooth" : "sharp";
					this.ctx["globalScale"] = 1;
					this.ctx["HTML5CompatibilityMode"] = true;
					this.ctx["imageSmoothingEnabled"] = this.linearSampling;
				} catch(e){}
				if (this.width !== 0 && this.height !== 0)
				{
					this.ctx.width = this.width;
					this.ctx.height = this.height;
				}
			}
			if (!this.ctx)
			{
;
				if (this.isCocoonJs)
				{
					attribs = {
						"antialias": !!this.linearSampling,
						"alpha": alpha_canvas
					};
					this.ctx = canvas.getContext("2d", attribs);
				}
				else
				{
					attribs = {
						"alpha": alpha_canvas
					};
					this.ctx = canvas.getContext("2d", attribs);
				}
				this.ctx["webkitImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["mozImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["msImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["imageSmoothingEnabled"] = this.linearSampling;
			}
			this.overlay_canvas = null;
			this.overlay_ctx = null;
		}
		this.tickFunc = function () { self.tick(false); };
		if (window != window.top && !this.isDomFree && !this.isWinJS && !this.isWindowsPhone8)
		{
			document.addEventListener("mousedown", function () {
				window.focus();
			}, true);
			document.addEventListener("touchstart", function () {
				window.focus();
			}, true);
		}
		if (typeof cr_is_preview !== "undefined")
		{
			if (this.isCocoonJs)
				console.log("[Construct 2] In preview-over-wifi via CocoonJS mode");
			if (window.location.search.indexOf("continuous") > -1)
			{
				cr.logexport("Reloading for continuous preview");
				this.loadFromSlot = "__c2_continuouspreview";
				this.suspendDrawing = true;
			}
			if (this.pauseOnBlur && !this.isMobile)
			{
				jQuery(window).focus(function ()
				{
					self["setSuspended"](false);
				});
				jQuery(window).blur(function ()
				{
					self["setSuspended"](true);
				});
			}
		}
		if (this.fullscreen_mode === 0 && this.isRetina && this.devicePixelRatio > 1)
		{
			this["setSize"](this.original_width, this.original_height, true);
		}
		this.tryLockOrientation();
		this.getready();	// determine things to preload
		this.go();			// run loading screen
		this.extra = {};
		cr.seal(this);
	};
	var webkitRepaintFlag = false;
	Runtime.prototype["setSize"] = function (w, h, force)
	{
		var offx = 0, offy = 0;
		var neww = 0, newh = 0, intscale = 0;
		var tryHideAddressBar = (this.isiPhoneiOS6 && this.isSafari && !navigator["standalone"] && !this.isDomFree && !this.isPhoneGap);
		if (tryHideAddressBar)
			h += 60;		// height of Safari iPhone iOS 6 address bar
		if (this.lastWindowWidth === w && this.lastWindowHeight === h && !force)
			return;
		this.lastWindowWidth = w;
		this.lastWindowHeight = h;
		var mode = this.fullscreen_mode;
		var orig_aspect, cur_aspect;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"] || this.isNodeFullscreen) && !this.isPhoneGap;
		if (!isfullscreen && this.fullscreen_mode === 0 && !force)
			return;			// ignore size events when not fullscreen and not using a fullscreen-in-browser mode
		if (isfullscreen && this.fullscreen_scaling > 0)
			mode = this.fullscreen_scaling;
		var dpr = this.devicePixelRatio;
		if (mode >= 4)
		{
			orig_aspect = this.original_width / this.original_height;
			cur_aspect = w / h;
			if (cur_aspect > orig_aspect)
			{
				neww = h * orig_aspect;
				if (mode === 5)	// integer scaling
				{
					intscale = (neww * dpr) / this.original_width;
					if (intscale > 1)
						intscale = Math.floor(intscale);
					else if (intscale < 1)
						intscale = 1 / Math.ceil(1 / intscale);
					neww = this.original_width * intscale / dpr;
					newh = this.original_height * intscale / dpr;
					offx = (w - neww) / 2;
					offy = (h - newh) / 2;
					w = neww;
					h = newh;
				}
				else
				{
					offx = (w - neww) / 2;
					w = neww;
				}
			}
			else
			{
				newh = w / orig_aspect;
				if (mode === 5)	// integer scaling
				{
					intscale = (newh * dpr) / this.original_height;
					if (intscale > 1)
						intscale = Math.floor(intscale);
					else if (intscale < 1)
						intscale = 1 / Math.ceil(1 / intscale);
					neww = this.original_width * intscale / dpr;
					newh = this.original_height * intscale / dpr;
					offx = (w - neww) / 2;
					offy = (h - newh) / 2;
					w = neww;
					h = newh;
				}
				else
				{
					offy = (h - newh) / 2;
					h = newh;
				}
			}
			if (isfullscreen && !this.isNodeWebkit)
			{
				offx = 0;
				offy = 0;
			}
		}
		else if (this.isNodeWebkit && this.isNodeFullscreen && this.fullscreen_mode_set === 0)
		{
			offx = Math.floor((w - this.original_width) / 2);
			offy = Math.floor((h - this.original_height) / 2);
			w = this.original_width;
			h = this.original_height;
		}
		if (mode < 2)
			this.aspect_scale = dpr;
		if (this.isRetina && this.isiPad && dpr > 1)	// don't apply to iPad 1-2
		{
			if (w >= 1024)
				w = 1023;		// 2046 retina pixels
			if (h >= 1024)
				h = 1023;
		}
		this.cssWidth = Math.round(w);
		this.cssHeight = Math.round(h);
		this.width = Math.round(w * dpr);
		this.height = Math.round(h * dpr);
		this.redraw = true;
		if (this.wantFullscreenScalingQuality)
		{
			this.draw_width = this.width;
			this.draw_height = this.height;
			this.fullscreenScalingQuality = true;
		}
		else
		{
			if ((this.width < this.original_width && this.height < this.original_height) || mode === 1)
			{
				this.draw_width = this.width;
				this.draw_height = this.height;
				this.fullscreenScalingQuality = true;
			}
			else
			{
				this.draw_width = this.original_width;
				this.draw_height = this.original_height;
				this.fullscreenScalingQuality = false;
				/*var orig_aspect = this.original_width / this.original_height;
				var cur_aspect = this.width / this.height;
				if ((this.fullscreen_mode !== 2 && cur_aspect > orig_aspect) || (this.fullscreen_mode === 2 && cur_aspect < orig_aspect))
					this.aspect_scale = this.height / this.original_height;
				else
					this.aspect_scale = this.width / this.original_width;*/
				if (mode === 2)		// scale inner
				{
					orig_aspect = this.original_width / this.original_height;
					cur_aspect = this.lastWindowWidth / this.lastWindowHeight;
					if (cur_aspect < orig_aspect)
						this.draw_width = this.draw_height * cur_aspect;
					else if (cur_aspect > orig_aspect)
						this.draw_height = this.draw_width / cur_aspect;
				}
				else if (mode === 3)
				{
					orig_aspect = this.original_width / this.original_height;
					cur_aspect = this.lastWindowWidth / this.lastWindowHeight;
					if (cur_aspect > orig_aspect)
						this.draw_width = this.draw_height * cur_aspect;
					else if (cur_aspect < orig_aspect)
						this.draw_height = this.draw_width / cur_aspect;
				}
			}
		}
		if (this.canvasdiv && !this.isDomFree)
		{
			jQuery(this.canvasdiv).css({"width": Math.round(w) + "px",
										"height": Math.round(h) + "px",
										"margin-left": Math.floor(offx) + "px",
										"margin-top": Math.floor(offy) + "px"});
			if (typeof cr_is_preview !== "undefined")
			{
				jQuery("#borderwrap").css({"width": Math.round(w) + "px",
											"height": Math.round(h) + "px"});
			}
		}
		if (this.canvas)
		{
			this.canvas.width = Math.round(w * dpr);
			this.canvas.height = Math.round(h * dpr);
			if (this.isEjecta)
			{
				this.canvas.style.left = Math.floor(offx) + "px";
				this.canvas.style.top = Math.floor(offy) + "px";
				this.canvas.style.width = Math.round(w) + "px";
				this.canvas.style.height = Math.round(h) + "px";
			}
			else if (this.isRetina && !this.isDomFree)
			{
				jQuery(this.canvas).css({"width": Math.round(w) + "px",
										"height": Math.round(h) + "px"});
			}
		}
		if (this.overlay_canvas)
		{
			this.overlay_canvas.width = Math.round(w);
			this.overlay_canvas.height = Math.round(h);
			jQuery(this.overlay_canvas).css({"width": Math.round(w) + "px",
											"height": Math.round(h) + "px"});
		}
		if (this.glwrap)
		{
			this.glwrap.setSize(Math.round(w * dpr), Math.round(h * dpr));
		}
		if (this.isDirectCanvas && this.ctx)
		{
			this.ctx.width = Math.round(w);
			this.ctx.height = Math.round(h);
		}
		if (this.ctx)
		{
			this.ctx["webkitImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["mozImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["msImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["imageSmoothingEnabled"] = this.linearSampling;
		}
		this.tryLockOrientation();
		if (!this.isDomFree && (tryHideAddressBar || this.isiPhone))
		{
			window.setTimeout(function () {
				window.scrollTo(0, 1);
			}, 100);
		}
	};
	Runtime.prototype.tryLockOrientation = function ()
	{
		if (!this.autoLockOrientation || this.orientations === 0)
			return;
		var orientation = "portrait";
		if (this.orientations === 2)
			orientation = "landscape";
		if (screen["lockOrientation"])
			screen["lockOrientation"](orientation);
		else if (screen["webkitLockOrientation"])
			screen["webkitLockOrientation"](orientation);
		else if (screen["mozLockOrientation"])
			screen["mozLockOrientation"](orientation);
		else if (screen["msLockOrientation"])
			screen["msLockOrientation"](orientation);
	};
	Runtime.prototype.onContextLost = function ()
	{
		this.is_WebGL_context_lost = true;
		var i, len, t;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onLostWebGLContext)
				t.onLostWebGLContext();
		}
	};
	Runtime.prototype.onContextRestored = function ()
	{
		this.is_WebGL_context_lost = false;
		var i, len, t;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onRestoreWebGLContext)
				t.onRestoreWebGLContext();
		}
	};
	Runtime.prototype.positionOverlayCanvas = function()
	{
		if (this.isDomFree)
			return;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"] || this.isNodeFullscreen) && !this.isPhoneGap;
		var overlay_position = isfullscreen ? jQuery(this.canvas).offset() : jQuery(this.canvas).position();
		overlay_position.position = "absolute";
		jQuery(this.overlay_canvas).css(overlay_position);
	};
	var caf = window["cancelAnimationFrame"] ||
	  window["mozCancelAnimationFrame"]    ||
	  window["webkitCancelAnimationFrame"] ||
	  window["msCancelAnimationFrame"]     ||
	  window["oCancelAnimationFrame"];
	Runtime.prototype["setSuspended"] = function (s)
	{
		var i, len;
		if (s && !this.isSuspended)
		{
			cr.logexport("[Construct 2] Suspending");
			this.isSuspended = true;			// next tick will be last
			if (this.raf_id !== -1 && caf)		// note: CocoonJS does not implement cancelAnimationFrame
				caf(this.raf_id);
			if (this.timeout_id !== -1)
				clearTimeout(this.timeout_id);
			for (i = 0, len = this.suspend_events.length; i < len; i++)
				this.suspend_events[i](true);
		}
		else if (!s && this.isSuspended)
		{
			cr.logexport("[Construct 2] Resuming");
			this.isSuspended = false;
			this.last_tick_time = cr.performance_now();	// ensure first tick is a zero-dt one
			this.last_fps_time = cr.performance_now();	// reset FPS counter
			this.framecount = 0;
			this.logictime = 0;
			for (i = 0, len = this.suspend_events.length; i < len; i++)
				this.suspend_events[i](false);
			this.tick(false);						// kick off runtime again
		}
	};
	Runtime.prototype.addSuspendCallback = function (f)
	{
		this.suspend_events.push(f);
	};
	Runtime.prototype.load = function ()
	{
;
		var pm = cr.getProjectModel();
		this.name = pm[0];
		this.first_layout = pm[1];
		this.fullscreen_mode = pm[12];	// 0 = off, 1 = crop, 2 = scale inner, 3 = scale outer, 4 = letterbox scale, 5 = integer letterbox scale
		this.fullscreen_mode_set = pm[12];
		this.original_width = pm[10];
		this.original_height = pm[11];
		this.parallax_x_origin = this.original_width / 2;
		this.parallax_y_origin = this.original_height / 2;
		if (this.isDomFree && !this.isEjecta && (pm[12] >= 4 || pm[12] === 0))
		{
			cr.logexport("[Construct 2] Letterbox scale fullscreen modes are not supported on this platform - falling back to 'Scale outer'");
			this.fullscreen_mode = 3;
			this.fullscreen_mode_set = 3;
		}
		this.uses_loader_layout = pm[18];
		this.loaderstyle = pm[19];
		if (this.loaderstyle === 0)
		{
			this.loaderlogo = new Image();
			this.loaderlogo.src = "loading-logo.png";
		}
		this.next_uid = pm[21];
		this.system = new cr.system_object(this);
		var i, len, j, lenj, k, lenk, idstr, m, b, t, f;
		var plugin, plugin_ctor;
		for (i = 0, len = pm[2].length; i < len; i++)
		{
			m = pm[2][i];
;
			cr.add_common_aces(m);
			plugin = new m[0](this);
			plugin.singleglobal = m[1];
			plugin.is_world = m[2];
			plugin.must_predraw = m[9];
			if (plugin.onCreate)
				plugin.onCreate();  // opportunity to override default ACEs
			cr.seal(plugin);
			this.plugins.push(plugin);
		}
		pm = cr.getProjectModel();
		for (i = 0, len = pm[3].length; i < len; i++)
		{
			m = pm[3][i];
			plugin_ctor = m[1];
;
			plugin = null;
			for (j = 0, lenj = this.plugins.length; j < lenj; j++)
			{
				if (this.plugins[j] instanceof plugin_ctor)
				{
					plugin = this.plugins[j];
					break;
				}
			}
;
;
			var type_inst = new plugin.Type(plugin);
;
			type_inst.name = m[0];
			type_inst.is_family = m[2];
			type_inst.instvar_sids = m[3].slice(0);
			type_inst.vars_count = m[3].length;
			type_inst.behs_count = m[4];
			type_inst.fx_count = m[5];
			type_inst.sid = m[11];
			if (type_inst.is_family)
			{
				type_inst.members = [];				// types in this family
				type_inst.family_index = this.family_count++;
				type_inst.families = null;
			}
			else
			{
				type_inst.members = null;
				type_inst.family_index = -1;
				type_inst.families = [];			// families this type belongs to
			}
			type_inst.family_var_map = null;
			type_inst.family_beh_map = null;
			type_inst.family_fx_map = null;
			type_inst.is_contained = false;
			type_inst.container = null;
			if (m[6])
			{
				type_inst.texture_file = m[6][0];
				type_inst.texture_filesize = m[6][1];
				type_inst.texture_pixelformat = m[6][2];
			}
			else
			{
				type_inst.texture_file = null;
				type_inst.texture_filesize = 0;
				type_inst.texture_pixelformat = 0;		// rgba8
			}
			if (m[7])
			{
				type_inst.animations = m[7];
			}
			else
			{
				type_inst.animations = null;
			}
			type_inst.index = i;                                // save index in to types array in type
			type_inst.instances = [];                           // all instances of this type
			type_inst.deadCache = [];							// destroyed instances to recycle next create
			type_inst.solstack = [new cr.selection(type_inst)]; // initialise SOL stack with one empty SOL
			type_inst.cur_sol = 0;
			type_inst.default_instance = null;
			type_inst.default_layerindex = 0;
			type_inst.stale_iids = true;
			type_inst.updateIIDs = cr.type_updateIIDs;
			type_inst.getFirstPicked = cr.type_getFirstPicked;
			type_inst.getPairedInstance = cr.type_getPairedInstance;
			type_inst.getCurrentSol = cr.type_getCurrentSol;
			type_inst.pushCleanSol = cr.type_pushCleanSol;
			type_inst.pushCopySol = cr.type_pushCopySol;
			type_inst.popSol = cr.type_popSol;
			type_inst.getBehaviorByName = cr.type_getBehaviorByName;
			type_inst.getBehaviorIndexByName = cr.type_getBehaviorIndexByName;
			type_inst.getEffectIndexByName = cr.type_getEffectIndexByName;
			type_inst.applySolToContainer = cr.type_applySolToContainer;
			type_inst.getInstanceByIID = cr.type_getInstanceByIID;
			type_inst.collision_grid = new cr.SparseGrid(this.original_width, this.original_height);
			type_inst.any_cell_changed = true;
			type_inst.any_instance_parallaxed = false;
			type_inst.extra = {};
			type_inst.toString = cr.type_toString;
			type_inst.behaviors = [];
			for (j = 0, lenj = m[8].length; j < lenj; j++)
			{
				b = m[8][j];
				var behavior_ctor = b[1];
				var behavior_plugin = null;
				for (k = 0, lenk = this.behaviors.length; k < lenk; k++)
				{
					if (this.behaviors[k] instanceof behavior_ctor)
					{
						behavior_plugin = this.behaviors[k];
						break;
					}
				}
				if (!behavior_plugin)
				{
					behavior_plugin = new behavior_ctor(this);
					behavior_plugin.my_types = [];						// types using this behavior
					behavior_plugin.my_instances = new cr.ObjectSet(); 	// instances of this behavior
					if (behavior_plugin.onCreate)
						behavior_plugin.onCreate();
					cr.seal(behavior_plugin);
					this.behaviors.push(behavior_plugin);
					if (cr.behaviors.solid && behavior_plugin instanceof cr.behaviors.solid)
						this.solidBehavior = behavior_plugin;
					if (cr.behaviors.jumpthru && behavior_plugin instanceof cr.behaviors.jumpthru)
						this.jumpthruBehavior = behavior_plugin;
					if (cr.behaviors.shadowcaster && behavior_plugin instanceof cr.behaviors.shadowcaster)
						this.shadowcasterBehavior = behavior_plugin;
				}
				if (behavior_plugin.my_types.indexOf(type_inst) === -1)
					behavior_plugin.my_types.push(type_inst);
				var behavior_type = new behavior_plugin.Type(behavior_plugin, type_inst);
				behavior_type.name = b[0];
				behavior_type.sid = b[2];
				behavior_type.onCreate();
				cr.seal(behavior_type);
				type_inst.behaviors.push(behavior_type);
			}
			type_inst.global = m[9];
			type_inst.isOnLoaderLayout = m[10];
			type_inst.effect_types = [];
			for (j = 0, lenj = m[12].length; j < lenj; j++)
			{
				type_inst.effect_types.push({
					id: m[12][j][0],
					name: m[12][j][1],
					shaderindex: -1,
					active: true,
					index: j
				});
			}
			type_inst.tile_poly_data = m[13];
			if (!this.uses_loader_layout || type_inst.is_family || type_inst.isOnLoaderLayout || !plugin.is_world)
			{
				type_inst.onCreate();
				cr.seal(type_inst);
			}
			if (type_inst.name)
				this.types[type_inst.name] = type_inst;
			this.types_by_index.push(type_inst);
			if (plugin.singleglobal)
			{
				var instance = new plugin.Instance(type_inst);
				instance.uid = this.next_uid++;
				instance.puid = this.next_puid++;
				instance.iid = 0;
				instance.get_iid = cr.inst_get_iid;
				instance.toString = cr.inst_toString;
				instance.properties = m[14];
				instance.onCreate();
				cr.seal(instance);
				type_inst.instances.push(instance);
				this.objectsByUid[instance.uid.toString()] = instance;
			}
		}
		for (i = 0, len = pm[4].length; i < len; i++)
		{
			var familydata = pm[4][i];
			var familytype = this.types_by_index[familydata[0]];
			var familymember;
			for (j = 1, lenj = familydata.length; j < lenj; j++)
			{
				familymember = this.types_by_index[familydata[j]];
				familymember.families.push(familytype);
				familytype.members.push(familymember);
			}
		}
		for (i = 0, len = pm[26].length; i < len; i++)
		{
			var containerdata = pm[26][i];
			var containertypes = [];
			for (j = 0, lenj = containerdata.length; j < lenj; j++)
				containertypes.push(this.types_by_index[containerdata[j]]);
			for (j = 0, lenj = containertypes.length; j < lenj; j++)
			{
				containertypes[j].is_contained = true;
				containertypes[j].container = containertypes;
			}
		}
		if (this.family_count > 0)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				if (t.is_family || !t.families.length)
					continue;
				t.family_var_map = new Array(this.family_count);
				t.family_beh_map = new Array(this.family_count);
				t.family_fx_map = new Array(this.family_count);
				var all_fx = [];
				var varsum = 0;
				var behsum = 0;
				var fxsum = 0;
				for (j = 0, lenj = t.families.length; j < lenj; j++)
				{
					f = t.families[j];
					t.family_var_map[f.family_index] = varsum;
					varsum += f.vars_count;
					t.family_beh_map[f.family_index] = behsum;
					behsum += f.behs_count;
					t.family_fx_map[f.family_index] = fxsum;
					fxsum += f.fx_count;
					for (k = 0, lenk = f.effect_types.length; k < lenk; k++)
						all_fx.push(cr.shallowCopy({}, f.effect_types[k]));
				}
				t.effect_types = all_fx.concat(t.effect_types);
				for (j = 0, lenj = t.effect_types.length; j < lenj; j++)
					t.effect_types[j].index = j;
			}
		}
		for (i = 0, len = pm[5].length; i < len; i++)
		{
			m = pm[5][i];
			var layout = new cr.layout(this, m);
			cr.seal(layout);
			this.layouts[layout.name] = layout;
			this.layouts_by_index.push(layout);
		}
		for (i = 0, len = pm[6].length; i < len; i++)
		{
			m = pm[6][i];
			var sheet = new cr.eventsheet(this, m);
			cr.seal(sheet);
			this.eventsheets[sheet.name] = sheet;
			this.eventsheets_by_index.push(sheet);
		}
		for (i = 0, len = this.eventsheets_by_index.length; i < len; i++)
			this.eventsheets_by_index[i].postInit();
		for (i = 0, len = this.eventsheets_by_index.length; i < len; i++)
			this.eventsheets_by_index[i].updateDeepIncludes();
		for (i = 0, len = this.triggers_to_postinit.length; i < len; i++)
			this.triggers_to_postinit[i].postInit();
		this.triggers_to_postinit.length = 0;
		this.audio_to_preload = pm[7];
		this.files_subfolder = pm[8];
		this.pixel_rounding = pm[9];
		this.aspect_scale = 1.0;
		this.enableWebGL = pm[13];
		this.linearSampling = pm[14];
		this.alphaBackground = pm[15];
		this.versionstr = pm[16];
		this.useHighDpi = pm[17];
		this.orientations = pm[20];		// 0 = any, 1 = portrait, 2 = landscape
		this.autoLockOrientation = (this.orientations > 0);
		this.pauseOnBlur = pm[22];
		this.wantFullscreenScalingQuality = pm[23];		// false = low quality, true = high quality
		this.fullscreenScalingQuality = this.wantFullscreenScalingQuality;
		this.downscalingQuality = pm[24];	// 0 = low (mips off), 1 = medium (mips on, dense spritesheet), 2 = high (mips on, sparse spritesheet)
		this.preloadSounds = pm[25];		// 0 = no, 1 = yes
		this.start_time = Date.now();
	};
	var anyImageHadError = false;
	Runtime.prototype.waitForImageLoad = function (img_)
	{
		img_.onerror = function (e)
		{
			img_.c2error = true;
			anyImageHadError = true;
			if (console && console.error)
				console.error("Error loading image '" + img_.src + "': ", e);
		};
		this.wait_for_textures.push(img_);
	};
	Runtime.prototype.findWaitingTexture = function (src_)
	{
		var i, len;
		for (i = 0, len = this.wait_for_textures.length; i < len; i++)
		{
			if (this.wait_for_textures[i].cr_src === src_)
				return this.wait_for_textures[i];
		}
		return null;
	};
	var audio_preload_totalsize = 0;
	var audio_preload_started = false;
	Runtime.prototype.getready = function ()
	{
		if (!this.audioInstance)
			return;
		audio_preload_totalsize = this.audioInstance.setPreloadList(this.audio_to_preload);
	};
	Runtime.prototype.areAllTexturesAndSoundsLoaded = function ()
	{
		var totalsize = audio_preload_totalsize;
		var completedsize = 0;
		var audiocompletedsize = 0;
		var ret = true;
		var i, len, img;
		for (i = 0, len = this.wait_for_textures.length; i < len; i++)
		{
			img = this.wait_for_textures[i];
			var filesize = img.cr_filesize;
			if (!filesize || filesize <= 0)
				filesize = 50000;
			totalsize += filesize;
			if ((img.complete || img["loaded"]) && !img.c2error)
				completedsize += filesize;
			else
				ret = false;    // not all textures loaded
		}
		if (ret && this.preloadSounds && this.audioInstance)
		{
			if (!audio_preload_started)
			{
				this.audioInstance.startPreloads();
				audio_preload_started = true;
			}
			audiocompletedsize = this.audioInstance.getPreloadedSize();
			completedsize += audiocompletedsize;
			if (audiocompletedsize < audio_preload_totalsize)
				ret = false;		// not done yet
		}
		if (totalsize == 0)
			this.progress = 0;
		else
			this.progress = (completedsize / totalsize);
		return ret;
	};
	Runtime.prototype.go = function ()
	{
		if (!this.ctx && !this.glwrap)
			return;
		var ctx = this.ctx || this.overlay_ctx;
		if (this.overlay_canvas)
			this.positionOverlayCanvas();
		this.progress = 0;
		this.last_progress = -1;
		if (this.areAllTexturesAndSoundsLoaded())
			this.go_loading_finished();
		else
		{
			var ms_elapsed = Date.now() - this.start_time;
			if (ctx)
			{
				var overlay_width = this.width;
				var overlay_height = this.height;
				var multiplier = this.devicePixelRatio;
				if (this.overlay_canvas)
				{
					overlay_width = this.cssWidth;
					overlay_height = this.cssHeight;
					multiplier = 1;
				}
				if (this.loaderstyle !== 3 && (this.isCocoonJs || (ms_elapsed >= 500 && this.last_progress != this.progress)))
				{
					ctx.clearRect(0, 0, overlay_width, overlay_height);
					var mx = overlay_width / 2;
					var my = overlay_height / 2;
					var haslogo = (this.loaderstyle === 0 && this.loaderlogo.complete);
					var hlw = 40 * multiplier;
					var hlh = 0;
					var logowidth = 80 * multiplier;
					var logoheight;
					if (haslogo)
					{
						logowidth = this.loaderlogo.width * multiplier;
						logoheight = this.loaderlogo.height * multiplier;
						hlw = logowidth / 2;
						hlh = logoheight / 2;
						ctx.drawImage(this.loaderlogo, cr.floor(mx - hlw), cr.floor(my - hlh), logowidth, logoheight);
					}
					if (this.loaderstyle <= 1)
					{
						my += hlh + (haslogo ? 12 * multiplier : 0);
						mx -= hlw;
						mx = cr.floor(mx) + 0.5;
						my = cr.floor(my) + 0.5;
						ctx.fillStyle = anyImageHadError ? "red" : "DodgerBlue";
						ctx.fillRect(mx, my, Math.floor(logowidth * this.progress), 6 * multiplier);
						ctx.strokeStyle = "black";
						ctx.strokeRect(mx, my, logowidth, 6 * multiplier);
						ctx.strokeStyle = "white";
						ctx.strokeRect(mx - 1 * multiplier, my - 1 * multiplier, logowidth + 2 * multiplier, 8 * multiplier);
					}
					else if (this.loaderstyle === 2)
					{
						ctx.font = (this.isEjecta ? "12pt ArialMT" : "12pt Arial");
						ctx.fillStyle = anyImageHadError ? "#f00" : "#999";
						ctx.textBaseLine = "middle";
						var percent_text = Math.round(this.progress * 100) + "%";
						var text_dim = ctx.measureText ? ctx.measureText(percent_text) : null;
						var text_width = text_dim ? text_dim.width : 0;
						ctx.fillText(percent_text, mx - (text_width / 2), my);
					}
				}
				this.last_progress = this.progress;
			}
			setTimeout((function (self) { return function () { self.go(); }; })(this), (this.isCocoonJs ? 10 : 100));
		}
	};
	Runtime.prototype.go_loading_finished = function ()
	{
		if (this.overlay_canvas)
		{
			this.canvas.parentNode.removeChild(this.overlay_canvas);
			this.overlay_ctx = null;
			this.overlay_canvas = null;
		}
		this.start_time = Date.now();
		this.last_fps_time = cr.performance_now();       // for counting framerate
		var i, len, t;
		if (this.uses_loader_layout)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				if (!t.is_family && !t.isOnLoaderLayout && t.plugin.is_world)
				{
					t.onCreate();
					cr.seal(t);
				}
			}
		}
		else
			this.isloading = false;
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			this.layouts_by_index[i].createGlobalNonWorlds();
		}
		if (this.fullscreen_mode >= 2)
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = this.width / this.height;
			if ((this.fullscreen_mode !== 2 && cur_aspect > orig_aspect) || (this.fullscreen_mode === 2 && cur_aspect < orig_aspect))
				this.aspect_scale = this.height / this.original_height;
			else
				this.aspect_scale = this.width / this.original_width;
		}
		if (this.first_layout)
			this.layouts[this.first_layout].startRunning();
		else
			this.layouts_by_index[0].startRunning();
;
		if (!this.uses_loader_layout)
		{
			this.loadingprogress = 1;
			this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null);
		}
		if (navigator["splashscreen"] && navigator["splashscreen"]["hide"])
			navigator["splashscreen"]["hide"]();
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onAppBegin)
				t.onAppBegin();
		}
		this.tick(false);
		if (this.isDirectCanvas)
			AppMobi["webview"]["execute"]("onGameReady();");
	};
	var raf = window["requestAnimationFrame"] ||
	  window["mozRequestAnimationFrame"]    ||
	  window["webkitRequestAnimationFrame"] ||
	  window["msRequestAnimationFrame"]     ||
	  window["oRequestAnimationFrame"];
	Runtime.prototype.tick = function (background_wake)
	{
		if (!this.running_layout)
			return;
		var logic_start = cr.performance_now();
		if (this.halfFramerateMode && this.ranLastRaf)
		{
			if (logic_start - this.lastRafTime < 29)
			{
				this.ranLastRaf = false;
				this.lastRafTime = logic_start;
				if (raf)
					this.raf_id = raf(this.tickFunc, this.canvas);
				else	// no idea if this works without raf/hi res timers but let's hope for the best
					this.timeout_id = setTimeout(this.tickFunc, this.isMobile ? 1 : 16);
				return;		// skipped this frame
			}
		}
		this.ranLastRaf = true;
		this.lastRafTime = logic_start;
		var fsmode = this.fullscreen_mode;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"]) && !this.isPhoneGap;
		if ((isfullscreen || this.isNodeFullscreen) && this.fullscreen_scaling > 0)
			fsmode = this.fullscreen_scaling;
		if (fsmode > 0 && (!this.isiOS || window.self !== window.top))
		{
			var curwidth = window.innerWidth;
			var curheight = window.innerHeight;
			if (this.lastWindowWidth !== curwidth || this.lastWindowHeight !== curheight)
			{
					this["setSize"](curwidth, curheight);
			}
		}
		if (!this.isDomFree)
		{
			if (isfullscreen)
			{
				if (!this.firstInFullscreen)
				{
					this.fullscreenOldMarginCss = jQuery(this.canvas).css("margin") || "0";
					this.firstInFullscreen = true;
				}
				if (!this.isChrome && !this.isNodeWebkit)
				{
					jQuery(this.canvas).css({
						"margin-left": "" + Math.floor((screen.width - (this.width / this.devicePixelRatio)) / 2) + "px",
						"margin-top": "" + Math.floor((screen.height - (this.height / this.devicePixelRatio)) / 2) + "px"
					});
				}
			}
			else
			{
				if (this.firstInFullscreen)
				{
					if (!this.isChrome && !this.isNodeWebkit)
					{
						jQuery(this.canvas).css("margin", this.fullscreenOldMarginCss);
					}
					this.fullscreenOldMarginCss = "";
					this.firstInFullscreen = false;
					if (this.fullscreen_mode === 0)
					{
						this["setSize"](Math.round(this.oldWidth / this.devicePixelRatio), Math.round(this.oldHeight / this.devicePixelRatio), true);
					}
				}
				else
				{
					this.oldWidth = this.width;
					this.oldHeight = this.height;
				}
			}
		}
		if (this.isloading)
		{
			var done = this.areAllTexturesAndSoundsLoaded();		// updates this.progress
			this.loadingprogress = this.progress;
			if (done)
			{
				this.isloading = false;
				this.progress = 1;
				this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null);
			}
		}
		this.logic();
		if ((this.redraw || this.isCocoonJs) && !this.is_WebGL_context_lost && !this.suspendDrawing && !background_wake)
		{
			this.redraw = false;
			if (this.glwrap)
				this.drawGL();
			else
				this.draw();
			if (this.snapshotCanvas)
			{
				if (this.canvas && this.canvas.toDataURL)
				{
					this.snapshotData = this.canvas.toDataURL(this.snapshotCanvas[0], this.snapshotCanvas[1]);
					this.trigger(cr.system_object.prototype.cnds.OnCanvasSnapshot, null);
				}
				this.snapshotCanvas = null;
			}
		}
		if (!this.hit_breakpoint)
		{
			this.tickcount++;
			this.execcount++;
			this.framecount++;
		}
		this.logictime += cr.performance_now() - logic_start;
		if (this.isSuspended || background_wake)
			return;
		if (raf)
			this.raf_id = raf(this.tickFunc, this.canvas);
		else
		{
			this.timeout_id = setTimeout(this.tickFunc, this.isMobile ? 1 : 16);
		}
	};
	Runtime.prototype.logic = function ()
	{
		var i, leni, j, lenj, k, lenk, type, inst, binst;
		var cur_time = cr.performance_now();
		if (cur_time - this.last_fps_time >= 1000)  // every 1 second
		{
			this.last_fps_time += 1000;
			this.fps = this.framecount;
			this.framecount = 0;
			this.cpuutilisation = this.logictime;
			this.logictime = 0;
		}
		if (this.measuring_dt)
		{
			if (this.last_tick_time !== 0)
			{
				var ms_diff = cur_time - this.last_tick_time;
				if (ms_diff === 0 && !this.isDebug)
				{
					this.zeroDtCount++;
					if (this.zeroDtCout >= 10)
						this.measuring_dt = false;
					this.dt1 = 1.0 / 60.0;            // 60fps assumed (0.01666...)
				}
				else
				{
					this.dt1 = ms_diff / 1000.0; // dt measured in seconds
					if (this.dt1 > 0.5)
						this.dt1 = 0;
					else if (this.dt1 > 0.1)
						this.dt1 = 0.1;
				}
			}
			this.last_tick_time = cur_time;
		}
        this.dt = this.dt1 * this.timescale;
        this.kahanTime.add(this.dt);
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"] || this.isNodeFullscreen) && !this.isPhoneGap;
		if (this.fullscreen_mode >= 2 /* scale */ || (isfullscreen && this.fullscreen_scaling > 0))
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = this.width / this.height;
			var mode = this.fullscreen_mode;
			if (isfullscreen && this.fullscreen_scaling > 0)
				mode = this.fullscreen_scaling;
			if ((mode !== 2 && cur_aspect > orig_aspect) || (mode === 2 && cur_aspect < orig_aspect))
			{
				this.aspect_scale = this.height / this.original_height;
			}
			else
			{
				this.aspect_scale = this.width / this.original_width;
			}
			if (this.running_layout)
			{
				this.running_layout.scrollToX(this.running_layout.scrollX);
				this.running_layout.scrollToY(this.running_layout.scrollY);
			}
		}
		else
			this.aspect_scale = (this.isRetina ? this.devicePixelRatio : 1);
		this.ClearDeathRow();
		this.isInOnDestroy++;
		this.system.runWaits();		// prevent instance list changing
		this.isInOnDestroy--;
		this.ClearDeathRow();		// allow instance list changing
		this.isInOnDestroy++;
        var tickarr = this.objects_to_pretick.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].pretick();
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					inst.behavior_insts[k].tick();
				}
			}
		}
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;	// type doesn't have any behaviors
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					binst = inst.behavior_insts[k];
					if (binst.posttick)
						binst.posttick();
				}
			}
		}
        tickarr = this.objects_to_tick.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].tick();
		this.isInOnDestroy--;		// end preventing instance lists from being changed
		this.handleSaveLoad();		// save/load now if queued
		i = 0;
		while (this.changelayout && i++ < 10)
		{
			this.doChangeLayout(this.changelayout);
		}
        for (i = 0, leni = this.eventsheets_by_index.length; i < leni; i++)
            this.eventsheets_by_index[i].hasRun = false;
		if (this.running_layout.event_sheet)
			this.running_layout.event_sheet.run();
		this.registered_collisions.length = 0;
		this.layout_first_tick = false;
		this.isInOnDestroy++;		// prevent instance lists from being changed
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;	// type doesn't have any behaviors
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				var inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					binst = inst.behavior_insts[k];
					if (binst.tick2)
						binst.tick2();
				}
			}
		}
        tickarr = this.objects_to_tick2.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].tick2();
		this.isInOnDestroy--;		// end preventing instance lists from being changed
	};
	Runtime.prototype.doChangeLayout = function (changeToLayout)
	{
;
		var prev_layout = this.running_layout;
		this.running_layout.stopRunning();
		var i, len, j, lenj, k, lenk, type, inst, binst;
		if (this.glwrap)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				type = this.types_by_index[i];
				if (type.is_family)
					continue;
				if (type.unloadTextures && (!type.global || type.instances.length === 0) && changeToLayout.initial_types.indexOf(type) === -1)
				{
					type.unloadTextures();
				}
			}
		}
		if (prev_layout == changeToLayout)
			this.system.waits.length = 0;
		changeToLayout.startRunning();
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (!type.global && !type.plugin.singleglobal)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				if (inst.onLayoutChange)
					inst.onLayoutChange();
				if (inst.behavior_insts)
				{
					for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
					{
						binst = inst.behavior_insts[k];
						if (binst.onLayoutChange)
							binst.onLayoutChange();
					}
				}
			}
		}
		this.redraw = true;
		this.layout_first_tick = true;
		this.ClearDeathRow();
	};
	Runtime.prototype.pretickMe = function (inst)
    {
        this.objects_to_pretick.add(inst);
    };
	Runtime.prototype.unpretickMe = function (inst)
	{
		this.objects_to_pretick.remove(inst);
	};
    Runtime.prototype.tickMe = function (inst)
    {
        this.objects_to_tick.add(inst);
    };
	Runtime.prototype.untickMe = function (inst)
	{
		this.objects_to_tick.remove(inst);
	};
	Runtime.prototype.tick2Me = function (inst)
    {
        this.objects_to_tick2.add(inst);
    };
	Runtime.prototype.untick2Me = function (inst)
	{
		this.objects_to_tick2.remove(inst);
	};
    Runtime.prototype.getDt = function (inst)
    {
        if (!inst || inst.my_timescale === -1.0)
            return this.dt;
        return this.dt1 * inst.my_timescale;
    };
	Runtime.prototype.draw = function ()
	{
		this.running_layout.draw(this.ctx);
		if (this.isDirectCanvas)
			this.ctx["present"]();
	};
	Runtime.prototype.drawGL = function ()
	{
		this.running_layout.drawGL(this.glwrap);
		this.glwrap.present();
	};
	Runtime.prototype.addDestroyCallback = function (f)
	{
		if (f)
			this.destroycallbacks.push(f);
	};
	Runtime.prototype.removeDestroyCallback = function (f)
	{
		cr.arrayFindRemove(this.destroycallbacks, f);
	};
	Runtime.prototype.getObjectByUID = function (uid_)
	{
;
		var uidstr = uid_.toString();
		if (this.objectsByUid.hasOwnProperty(uidstr))
			return this.objectsByUid[uidstr];
		else
			return null;
	};
	Runtime.prototype.DestroyInstance = function (inst)
	{
		var i, len;
		if (!this.deathRow.contains(inst))
		{
			this.deathRow.add(inst);
			if (inst.is_contained)
			{
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					this.DestroyInstance(inst.siblings[i]);
				}
			}
			if (this.isInClearDeathRow)
				this.deathRow.values_cache.push(inst);
			this.isInOnDestroy++;		// support recursion
			this.trigger(Object.getPrototypeOf(inst.type.plugin).cnds.OnDestroyed, inst);
			this.isInOnDestroy--;
		}
	};
	Runtime.prototype.ClearDeathRow = function ()
	{
		var inst, index, type, instances, binst;
		var i, j, k, leni, lenj, lenk;
		var w, f;
		this.isInClearDeathRow = true;
		for (i = 0, leni = this.createRow.length; i < leni; i++)
		{
			inst = this.createRow[i];
			type = inst.type;
			type.instances.push(inst);
			for (j = 0, lenj = type.families.length; j < lenj; j++)
			{
				type.families[j].instances.push(inst);
				type.families[j].stale_iids = true;
			}
		}
		this.createRow.length = 0;
		var arr = this.deathRow.valuesRef();	// get array of items from set
		for (i = 0; i < arr.length; i++)		// check array length every time in case it changes
		{
			inst = arr[i];
			type = inst.type;
			instances = type.instances;
			for (j = 0, lenj = this.destroycallbacks.length; j < lenj; j++)
				this.destroycallbacks[j](inst);
			cr.arrayFindRemove(instances, inst);
			if (instances.length === 0)
				type.any_instance_parallaxed = false;
			if (inst.collcells)
			{
				type.collision_grid.update(inst, inst.collcells, null);
			}
			if (inst.layer)
			{
				cr.arrayRemove(inst.layer.instances, inst.get_zindex());
				inst.layer.zindices_stale = true;
			}
			for (j = 0, lenj = type.families.length; j < lenj; j++)
			{
				cr.arrayFindRemove(type.families[j].instances, inst);
				type.families[j].stale_iids = true;
			}
			if (inst.behavior_insts)
			{
				for (j = 0, lenj = inst.behavior_insts.length; j < lenj; j++)
				{
					binst = inst.behavior_insts[j];
					if (binst.onDestroy)
						binst.onDestroy();
					binst.behavior.my_instances.remove(inst);
				}
			}
			this.objects_to_pretick.remove(inst);
            this.objects_to_tick.remove(inst);
			this.objects_to_tick2.remove(inst);
			for (j = 0, lenj = this.system.waits.length; j < lenj; j++)
			{
				w = this.system.waits[j];
				if (w.sols.hasOwnProperty(type.index))
					cr.arrayFindRemove(w.sols[type.index].insts, inst);
				if (!type.is_family)
				{
					for (k = 0, lenk = type.families.length; k < lenk; k++)
					{
						f = type.families[k];
						if (w.sols.hasOwnProperty(f.index))
							cr.arrayFindRemove(w.sols[f.index].insts, inst);
					}
				}
			}
			if (inst.onDestroy)
				inst.onDestroy();
			if (this.objectsByUid.hasOwnProperty(inst.uid.toString()))
				delete this.objectsByUid[inst.uid.toString()];
			this.objectcount--;
			if (type.deadCache.length < 64)
				type.deadCache.push(inst);
			type.stale_iids = true;
		}
		if (!this.deathRow.isEmpty())
			this.redraw = true;
		this.deathRow.clear();
		this.isInClearDeathRow = false;
	};
	Runtime.prototype.createInstance = function (type, layer, sx, sy)
	{
		if (type.is_family)
		{
			var i = cr.floor(Math.random() * type.members.length);
			return this.createInstance(type.members[i], layer, sx, sy);
		}
		if (!type.default_instance)
		{
			return null;
		}
		return this.createInstanceFromInit(type.default_instance, layer, false, sx, sy, false);
	};
	var all_behaviors = [];
	Runtime.prototype.createInstanceFromInit = function (initial_inst, layer, is_startup_instance, sx, sy, skip_siblings)
	{
		var i, len, j, lenj, p, effect_fallback, x, y;
		if (!initial_inst)
			return null;
		var type = this.types_by_index[initial_inst[1]];
;
;
		var is_world = type.plugin.is_world;
;
		if (this.isloading && is_world && !type.isOnLoaderLayout)
			return null;
		if (is_world && !this.glwrap && initial_inst[0][11] === 11)
			return null;
		var original_layer = layer;
		if (!is_world)
			layer = null;
		var inst;
		if (type.deadCache.length)
		{
			inst = type.deadCache.pop();
			inst.recycled = true;
			type.plugin.Instance.call(inst, type);
		}
		else
		{
			inst = new type.plugin.Instance(type);
			inst.recycled = false;
		}
		if (is_startup_instance && !skip_siblings)
			inst.uid = initial_inst[2];
		else
			inst.uid = this.next_uid++;
		this.objectsByUid[inst.uid.toString()] = inst;
		inst.puid = this.next_puid++;
		inst.iid = type.instances.length;
		for (i = 0, len = this.createRow.length; i < len; ++i)
		{
			if (this.createRow[i].type === type)
				inst.iid++;
		}
		inst.get_iid = cr.inst_get_iid;
		var initial_vars = initial_inst[3];
		if (inst.recycled)
		{
			cr.wipe(inst.extra);
		}
		else
		{
			inst.extra = {};
			if (typeof cr_is_preview !== "undefined")
			{
				inst.instance_var_names = [];
				inst.instance_var_names.length = initial_vars.length;
				for (i = 0, len = initial_vars.length; i < len; i++)
					inst.instance_var_names[i] = initial_vars[i][1];
			}
			inst.instance_vars = [];
			inst.instance_vars.length = initial_vars.length;
		}
		for (i = 0, len = initial_vars.length; i < len; i++)
			inst.instance_vars[i] = initial_vars[i][0];
		if (is_world)
		{
			var wm = initial_inst[0];
;
			inst.x = cr.is_undefined(sx) ? wm[0] : sx;
			inst.y = cr.is_undefined(sy) ? wm[1] : sy;
			inst.z = wm[2];
			inst.width = wm[3];
			inst.height = wm[4];
			inst.depth = wm[5];
			inst.angle = wm[6];
			inst.opacity = wm[7];
			inst.hotspotX = wm[8];
			inst.hotspotY = wm[9];
			inst.blend_mode = wm[10];
			effect_fallback = wm[11];
			if (!this.glwrap && type.effect_types.length)	// no WebGL renderer and shaders used
				inst.blend_mode = effect_fallback;			// use fallback blend mode - destroy mode was handled above
			inst.compositeOp = cr.effectToCompositeOp(inst.blend_mode);
			if (this.gl)
				cr.setGLBlend(inst, inst.blend_mode, this.gl);
			if (inst.recycled)
			{
				for (i = 0, len = wm[12].length; i < len; i++)
				{
					for (j = 0, lenj = wm[12][i].length; j < lenj; j++)
						inst.effect_params[i][j] = wm[12][i][j];
				}
				inst.bbox.set(0, 0, 0, 0);
				inst.collcells.set(0, 0, -1, -1);
				inst.bquad.set_from_rect(inst.bbox);
				inst.bbox_changed_callbacks.length = 0;
			}
			else
			{
				inst.effect_params = wm[12].slice(0);
				for (i = 0, len = inst.effect_params.length; i < len; i++)
					inst.effect_params[i] = wm[12][i].slice(0);
				inst.active_effect_types = [];
				inst.active_effect_flags = [];
				inst.active_effect_flags.length = type.effect_types.length;
				inst.bbox = new cr.rect(0, 0, 0, 0);
				inst.collcells = new cr.rect(0, 0, -1, -1);
				inst.bquad = new cr.quad();
				inst.bbox_changed_callbacks = [];
				inst.set_bbox_changed = cr.set_bbox_changed;
				inst.add_bbox_changed_callback = cr.add_bbox_changed_callback;
				inst.contains_pt = cr.inst_contains_pt;
				inst.update_bbox = cr.update_bbox;
				inst.update_collision_cell = cr.update_collision_cell;
				inst.get_zindex = cr.inst_get_zindex;
			}
			inst.tilemap_exists = false;
			inst.tilemap_width = 0;
			inst.tilemap_height = 0;
			inst.tilemap_data = null;
			if (wm.length === 14)
			{
				inst.tilemap_exists = true;
				inst.tilemap_width = wm[13][0];
				inst.tilemap_height = wm[13][1];
				inst.tilemap_data = wm[13][2];
			}
			for (i = 0, len = type.effect_types.length; i < len; i++)
				inst.active_effect_flags[i] = true;
			inst.updateActiveEffects = cr.inst_updateActiveEffects;
			inst.updateActiveEffects();
			inst.uses_shaders = !!inst.active_effect_types.length;
			inst.bbox_changed = true;
			inst.cell_changed = true;
			type.any_cell_changed = true;
			inst.visible = true;
            inst.my_timescale = -1.0;
			inst.layer = layer;
			inst.zindex = layer.instances.length;	// will be placed at top of current layer
			if (typeof inst.collision_poly === "undefined")
				inst.collision_poly = null;
			inst.collisionsEnabled = true;
			this.redraw = true;
		}
		inst.toString = cr.inst_toString;
		var initial_props, binst;
		all_behaviors.length = 0;
		for (i = 0, len = type.families.length; i < len; i++)
		{
			all_behaviors.push.apply(all_behaviors, type.families[i].behaviors);
		}
		all_behaviors.push.apply(all_behaviors, type.behaviors);
		if (inst.recycled)
		{
			for (i = 0, len = all_behaviors.length; i < len; i++)
			{
				var btype = all_behaviors[i];
				binst = inst.behavior_insts[i];
				binst.recycled = true;
				btype.behavior.Instance.call(binst, btype, inst);
				initial_props = initial_inst[4][i];
				for (j = 0, lenj = initial_props.length; j < lenj; j++)
					binst.properties[j] = initial_props[j];
				binst.onCreate();
				btype.behavior.my_instances.add(inst);
			}
		}
		else
		{
			inst.behavior_insts = [];
			for (i = 0, len = all_behaviors.length; i < len; i++)
			{
				var btype = all_behaviors[i];
				var binst = new btype.behavior.Instance(btype, inst);
				binst.recycled = false;
				binst.properties = initial_inst[4][i].slice(0);
				binst.onCreate();
				cr.seal(binst);
				inst.behavior_insts.push(binst);
				btype.behavior.my_instances.add(inst);
			}
		}
		initial_props = initial_inst[5];
		if (inst.recycled)
		{
			for (i = 0, len = initial_props.length; i < len; i++)
				inst.properties[i] = initial_props[i];
		}
		else
			inst.properties = initial_props.slice(0);
		this.createRow.push(inst);
		if (layer)
		{
;
			layer.instances.push(inst);
			if (layer.parallaxX !== 1 || layer.parallaxY !== 1)
				type.any_instance_parallaxed = true;
		}
		this.objectcount++;
		if (type.is_contained)
		{
			inst.is_contained = true;
			if (inst.recycled)
				inst.siblings.length = 0;
			else
				inst.siblings = [];			// note: should not include self in siblings
			if (!is_startup_instance && !skip_siblings)	// layout links initial instances
			{
				for (i = 0, len = type.container.length; i < len; i++)
				{
					if (type.container[i] === type)
						continue;
					if (!type.container[i].default_instance)
					{
						return null;
					}
					inst.siblings.push(this.createInstanceFromInit(type.container[i].default_instance, original_layer, false, is_world ? inst.x : sx, is_world ? inst.y : sy, true));
				}
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					inst.siblings[i].siblings.push(inst);
					for (j = 0; j < len; j++)
					{
						if (i !== j)
							inst.siblings[i].siblings.push(inst.siblings[j]);
					}
				}
			}
		}
		else
		{
			inst.is_contained = false;
			inst.siblings = null;
		}
		inst.onCreate();
		if (!inst.recycled)
			cr.seal(inst);
		for (i = 0, len = inst.behavior_insts.length; i < len; i++)
		{
			if (inst.behavior_insts[i].postCreate)
				inst.behavior_insts[i].postCreate();
		}
		return inst;
	};
	Runtime.prototype.getLayerByName = function (layer_name)
	{
		var i, len;
		for (i = 0, len = this.running_layout.layers.length; i < len; i++)
		{
			var layer = this.running_layout.layers[i];
			if (cr.equals_nocase(layer.name, layer_name))
				return layer;
		}
		return null;
	};
	Runtime.prototype.getLayerByNumber = function (index)
	{
		index = cr.floor(index);
		if (index < 0)
			index = 0;
		if (index >= this.running_layout.layers.length)
			index = this.running_layout.layers.length - 1;
		return this.running_layout.layers[index];
	};
	Runtime.prototype.getLayer = function (l)
	{
		if (cr.is_number(l))
			return this.getLayerByNumber(l);
		else
			return this.getLayerByName(l.toString());
	};
	Runtime.prototype.clearSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].getCurrentSol().select_all = true;
		}
	};
	Runtime.prototype.pushCleanSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].pushCleanSol();
		}
	};
	Runtime.prototype.pushCopySol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].pushCopySol();
		}
	};
	Runtime.prototype.popSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].popSol();
		}
	};
	Runtime.prototype.updateAllCells = function (type)
	{
		if (!type.any_cell_changed)
			return;		// all instances must already be up-to-date
		var i, len, instances = type.instances;
		for (i = 0, len = instances.length; i < len; ++i)
		{
			instances[i].update_collision_cell();
		}
		var createRow = this.createRow;
		for (i = 0, len = createRow.length; i < len; ++i)
		{
			if (createRow[i].type === type)
				createRow[i].update_collision_cell();
		}
		type.any_cell_changed = false;
	};
	Runtime.prototype.getCollisionCandidates = function (layer, rtype, bbox, candidates)
	{
		var i, len, t;
		var is_parallaxed = (layer ? (layer.parallaxX !== 1 || layer.parallaxY !== 1) : false);
		if (rtype.is_family)
		{
			for (i = 0, len = rtype.members.length; i < len; ++i)
			{
				t = rtype.members[i];
				if (is_parallaxed || t.any_instance_parallaxed)
				{
					cr.appendArray(candidates, t.instances);
				}
				else
				{
					this.updateAllCells(t);
					t.collision_grid.queryRange(bbox, candidates);
				}
			}
		}
		else
		{
			if (is_parallaxed || rtype.any_instance_parallaxed)
			{
				cr.appendArray(candidates, rtype.instances);
			}
			else
			{
				this.updateAllCells(rtype);
				rtype.collision_grid.queryRange(bbox, candidates);
			}
		}
	};
	Runtime.prototype.getTypesCollisionCandidates = function (layer, types, bbox, candidates)
	{
		var i, len;
		for (i = 0, len = types.length; i < len; ++i)
		{
			this.getCollisionCandidates(layer, types[i], bbox, candidates);
		}
	};
	Runtime.prototype.getSolidCollisionCandidates = function (layer, bbox, candidates)
	{
		var solid = this.getSolidBehavior();
		if (!solid)
			return null;
		this.getTypesCollisionCandidates(layer, solid.my_types, bbox, candidates);
	};
	Runtime.prototype.getJumpthruCollisionCandidates = function (layer, bbox, candidates)
	{
		var jumpthru = this.getJumpthruBehavior();
		if (!jumpthru)
			return null;
		this.getTypesCollisionCandidates(layer, jumpthru.my_types, bbox, candidates);
	};
	Runtime.prototype.testAndSelectCanvasPointOverlap = function (type, ptx, pty, inverted)
	{
		var sol = type.getCurrentSol();
		var i, j, inst, len;
		var lx, ly;
		if (sol.select_all)
		{
			if (!inverted)
			{
				sol.select_all = false;
				sol.instances.length = 0;   // clear contents
			}
			for (i = 0, len = type.instances.length; i < len; i++)
			{
				inst = type.instances[i];
				inst.update_bbox();
				lx = inst.layer.canvasToLayer(ptx, pty, true);
				ly = inst.layer.canvasToLayer(ptx, pty, false);
				if (inst.contains_pt(lx, ly))
				{
					if (inverted)
						return false;
					else
						sol.instances.push(inst);
				}
			}
		}
		else
		{
			j = 0;
			for (i = 0, len = sol.instances.length; i < len; i++)
			{
				inst = sol.instances[i];
				inst.update_bbox();
				lx = inst.layer.canvasToLayer(ptx, pty, true);
				ly = inst.layer.canvasToLayer(ptx, pty, false);
				if (inst.contains_pt(lx, ly))
				{
					if (inverted)
						return false;
					else
					{
						sol.instances[j] = sol.instances[i];
						j++;
					}
				}
			}
			if (!inverted)
				sol.instances.length = j;
		}
		type.applySolToContainer();
		if (inverted)
			return true;		// did not find anything overlapping
		else
			return sol.hasObjects();
	};
	Runtime.prototype.testOverlap = function (a, b)
	{
		if (!a || !b || a === b || !a.collisionsEnabled || !b.collisionsEnabled)
			return false;
		a.update_bbox();
		b.update_bbox();
		var layera = a.layer;
		var layerb = b.layer;
		var different_layers = (layera !== layerb && (layera.parallaxX !== layerb.parallaxX || layerb.parallaxY !== layerb.parallaxY || layera.scale !== layerb.scale || layera.angle !== layerb.angle || layera.zoomRate !== layerb.zoomRate));
		var i, len, i2, i21, x, y, haspolya, haspolyb, polya, polyb;
		if (!different_layers)	// same layers: easy check
		{
			if (!a.bbox.intersects_rect(b.bbox))
				return false;
			if (!a.bquad.intersects_quad(b.bquad))
				return false;
			if (a.tilemap_exists && b.tilemap_exists)
				return false;
			if (a.tilemap_exists)
				return this.testTilemapOverlap(a, b);
			if (b.tilemap_exists)
				return this.testTilemapOverlap(b, a);
			haspolya = (a.collision_poly && !a.collision_poly.is_empty());
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolya && !haspolyb)
				return true;
			if (haspolya)
			{
				a.collision_poly.cache_poly(a.width, a.height, a.angle);
				polya = a.collision_poly;
			}
			else
			{
				this.temp_poly.set_from_quad(a.bquad, a.x, a.y, a.width, a.height);
				polya = this.temp_poly;
			}
			if (haspolyb)
			{
				b.collision_poly.cache_poly(b.width, b.height, b.angle);
				polyb = b.collision_poly;
			}
			else
			{
				this.temp_poly.set_from_quad(b.bquad, b.x, b.y, b.width, b.height);
				polyb = this.temp_poly;
			}
			return polya.intersects_poly(polyb, b.x - a.x, b.y - a.y);
		}
		else	// different layers: need to do full translated check
		{
			haspolya = (a.collision_poly && !a.collision_poly.is_empty());
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (haspolya)
			{
				a.collision_poly.cache_poly(a.width, a.height, a.angle);
				this.temp_poly.set_from_poly(a.collision_poly);
			}
			else
			{
				this.temp_poly.set_from_quad(a.bquad, a.x, a.y, a.width, a.height);
			}
			polya = this.temp_poly;
			if (haspolyb)
			{
				b.collision_poly.cache_poly(b.width, b.height, b.angle);
				this.temp_poly2.set_from_poly(b.collision_poly);
			}
			else
			{
				this.temp_poly2.set_from_quad(b.bquad, b.x, b.y, b.width, b.height);
			}
			polyb = this.temp_poly2;
			for (i = 0, len = polya.pts_count; i < len; i++)
			{
				i2 = i * 2;
				i21 = i2 + 1;
				x = polya.pts_cache[i2];
				y = polya.pts_cache[i21];
				polya.pts_cache[i2] = layera.layerToCanvas(x + a.x, y + a.y, true);
				polya.pts_cache[i21] = layera.layerToCanvas(x + a.x, y + a.y, false);
			}
			polya.update_bbox();
			for (i = 0, len = polyb.pts_count; i < len; i++)
			{
				i2 = i * 2;
				i21 = i2 + 1;
				x = polyb.pts_cache[i2];
				y = polyb.pts_cache[i21];
				polyb.pts_cache[i2] = layerb.layerToCanvas(x + b.x, y + b.y, true);
				polyb.pts_cache[i21] = layerb.layerToCanvas(x + b.x, y + b.y, false);
			}
			polyb.update_bbox();
			return polya.intersects_poly(polyb, 0, 0);
		}
	};
	var tmpQuad = new cr.quad();
	var tmpRect = new cr.rect(0, 0, 0, 0);
	var collrect_candidates = [];
	Runtime.prototype.testTilemapOverlap = function (tm, a)
	{
		var i, len, c, rc;
		var bbox = a.bbox;
		var tmx = tm.x;
		var tmy = tm.y;
		tm.getCollisionRectCandidates(bbox, collrect_candidates);
		var collrects = collrect_candidates;
		var haspolya = (a.collision_poly && !a.collision_poly.is_empty());
		for (i = 0, len = collrects.length; i < len; ++i)
		{
			c = collrects[i];
			rc = c.rc;
			if (bbox.intersects_rect_off(rc, tmx, tmy))
			{
				tmpQuad.set_from_rect(rc);
				tmpQuad.offset(tmx, tmy);
				if (tmpQuad.intersects_quad(a.bquad))
				{
					if (haspolya)
					{
						a.collision_poly.cache_poly(a.width, a.height, a.angle);
						if (c.poly)
						{
							if (c.poly.intersects_poly(a.collision_poly, a.x - (tmx + rc.left), a.y - (tmy + rc.top)))
							{
								collrect_candidates.length = 0;
								return true;
							}
						}
						else
						{
							this.temp_poly.set_from_quad(tmpQuad, 0, 0, rc.right - rc.left, rc.bottom - rc.top);
							if (this.temp_poly.intersects_poly(a.collision_poly, a.x, a.y))
							{
								collrect_candidates.length = 0;
								return true;
							}
						}
					}
					else
					{
						if (c.poly)
						{
							this.temp_poly.set_from_quad(a.bquad, 0, 0, a.width, a.height);
							if (c.poly.intersects_poly(this.temp_poly, -(tmx + rc.left), -(tmy + rc.top)))
							{
								collrect_candidates.length = 0;
								return true;
							}
						}
						else
						{
							collrect_candidates.length = 0;
							return true;
						}
					}
				}
			}
		}
		collrect_candidates.length = 0;
		return false;
	};
	Runtime.prototype.testRectOverlap = function (r, b)
	{
		if (!b || !b.collisionsEnabled)
			return false;
		b.update_bbox();
		var layerb = b.layer;
		var haspolyb, polyb;
		if (!b.bbox.intersects_rect(r))
			return false;
		if (b.tilemap_exists)
		{
			b.getCollisionRectCandidates(r, collrect_candidates);
			var collrects = collrect_candidates;
			var i, len, c, tilerc;
			var tmx = b.x;
			var tmy = b.y;
			for (i = 0, len = collrects.length; i < len; ++i)
			{
				c = collrects[i];
				tilerc = c.rc;
				if (r.intersects_rect_off(tilerc, tmx, tmy))
				{
					if (c.poly)
					{
						this.temp_poly.set_from_rect(r, 0, 0);
						if (c.poly.intersects_poly(this.temp_poly, -(tmx + tilerc.left), -(tmy + tilerc.top)))
						{
							collrect_candidates.length = 0;
							return true;
						}
					}
					else
					{
						collrect_candidates.length = 0;
						return true;
					}
				}
			}
			collrect_candidates.length = 0;
			return false;
		}
		else
		{
			tmpQuad.set_from_rect(r);
			if (!b.bquad.intersects_quad(tmpQuad))
				return false;
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolyb)
				return true;
			b.collision_poly.cache_poly(b.width, b.height, b.angle);
			tmpQuad.offset(-r.left, -r.top);
			this.temp_poly.set_from_quad(tmpQuad, 0, 0, 1, 1);
			return b.collision_poly.intersects_poly(this.temp_poly, r.left - b.x, r.top - b.y);
		}
	};
	Runtime.prototype.testSegmentOverlap = function (x1, y1, x2, y2, b)
	{
		if (!b || !b.collisionsEnabled)
			return false;
		b.update_bbox();
		var layerb = b.layer;
		var haspolyb, polyb;
		tmpRect.set(cr.min(x1, x2), cr.min(y1, y2), cr.max(x1, x2), cr.max(y1, y2));
		if (!b.bbox.intersects_rect(tmpRect))
			return false;
		if (b.tilemap_exists)
		{
			b.getCollisionRectCandidates(tmpRect, collrect_candidates);
			var collrects = collrect_candidates;
			var i, len, c, tilerc;
			var tmx = b.x;
			var tmy = b.y;
			for (i = 0, len = collrects.length; i < len; ++i)
			{
				c = collrects[i];
				tilerc = c.rc;
				if (tmpRect.intersects_rect_off(tilerc, tmx, tmy))
				{
					tmpQuad.set_from_rect(tilerc);
					tmpQuad.offset(tmx, tmy);
					if (tmpQuad.intersects_segment(x1, y1, x2, y2))
					{
						if (c.poly)
						{
							if (c.poly.intersects_segment(tmx + tilerc.left, tmy + tilerc.top, x1, y1, x2, y2))
							{
								collrect_candidates.length = 0;
								return true;
							}
						}
						else
						{
							collrect_candidates.length = 0;
							return true;
						}
					}
				}
			}
			collrect_candidates.length = 0;
			return false;
		}
		else
		{
			if (!b.bquad.intersects_segment(x1, y1, x2, y2))
				return false;
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolyb)
				return true;
			b.collision_poly.cache_poly(b.width, b.height, b.angle);
			return b.collision_poly.intersects_segment(b.x, b.y, x1, y1, x2, y2);
		}
	};
	Runtime.prototype.typeHasBehavior = function (t, b)
	{
		if (!b)
			return false;
		var i, len, j, lenj, f;
		for (i = 0, len = t.behaviors.length; i < len; i++)
		{
			if (t.behaviors[i].behavior instanceof b)
				return true;
		}
		if (!t.is_family)
		{
			for (i = 0, len = t.families.length; i < len; i++)
			{
				f = t.families[i];
				for (j = 0, lenj = f.behaviors.length; j < lenj; j++)
				{
					if (f.behaviors[j].behavior instanceof b)
						return true;
				}
			}
		}
		return false;
	};
	Runtime.prototype.typeHasNoSaveBehavior = function (t)
	{
		return this.typeHasBehavior(t, cr.behaviors.NoSave);
	};
	Runtime.prototype.typeHasPersistBehavior = function (t)
	{
		return this.typeHasBehavior(t, cr.behaviors.Persist);
	};
	Runtime.prototype.getSolidBehavior = function ()
	{
		return this.solidBehavior;
	};
	Runtime.prototype.getJumpthruBehavior = function ()
	{
		return this.jumpthruBehavior;
	};
	var candidates = [];
	Runtime.prototype.testOverlapSolid = function (inst)
	{
		var i, len, s;
		inst.update_bbox();
		this.getSolidCollisionCandidates(inst.layer, inst.bbox, candidates);
		for (i = 0, len = candidates.length; i < len; ++i)
		{
			s = candidates[i];
			if (!s.extra.solidEnabled)
				continue;
			if (this.testOverlap(inst, s))
			{
				candidates.length = 0;
				return s;
			}
		}
		candidates.length = 0;
		return null;
	};
	Runtime.prototype.testRectOverlapSolid = function (r)
	{
		var i, len, s;
		this.getSolidCollisionCandidates(null, r, candidates);
		for (i = 0, len = candidates.length; i < len; ++i)
		{
			s = candidates[i];
			if (!s.extra.solidEnabled)
				continue;
			if (this.testRectOverlap(r, s))
			{
				candidates.length = 0;
				return s;
			}
		}
		candidates.length = 0;
		return null;
	};
	var jumpthru_array_ret = [];
	Runtime.prototype.testOverlapJumpThru = function (inst, all)
	{
		var ret = null;
		if (all)
		{
			ret = jumpthru_array_ret;
			ret.length = 0;
		}
		inst.update_bbox();
		this.getJumpthruCollisionCandidates(inst.layer, inst.bbox, candidates);
		var i, len, j;
		for (i = 0, len = candidates.length; i < len; ++i)
		{
			j = candidates[i];
			if (!j.extra.jumpthruEnabled)
				continue;
			if (this.testOverlap(inst, j))
			{
				if (all)
					ret.push(j);
				else
				{
					candidates.length = 0;
					return j;
				}
			}
		}
		candidates.length = 0;
		return ret;
	};
	Runtime.prototype.pushOutSolid = function (inst, xdir, ydir, dist, include_jumpthrus, specific_jumpthru)
	{
		var push_dist = dist || 50;
		var oldx = inst.x
		var oldy = inst.y;
		var i;
		var last_overlapped = null, secondlast_overlapped = null;
		for (i = 0; i < push_dist; i++)
		{
			inst.x = (oldx + (xdir * i));
			inst.y = (oldy + (ydir * i));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, last_overlapped))
			{
				last_overlapped = this.testOverlapSolid(inst);
				if (last_overlapped)
					secondlast_overlapped = last_overlapped;
				if (!last_overlapped)
				{
					if (include_jumpthrus)
					{
						if (specific_jumpthru)
							last_overlapped = (this.testOverlap(inst, specific_jumpthru) ? specific_jumpthru : null);
						else
							last_overlapped = this.testOverlapJumpThru(inst);
						if (last_overlapped)
							secondlast_overlapped = last_overlapped;
					}
					if (!last_overlapped)
					{
						if (secondlast_overlapped)
							this.pushInFractional(inst, xdir, ydir, secondlast_overlapped, 16);
						return true;
					}
				}
			}
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.pushOut = function (inst, xdir, ydir, dist, otherinst)
	{
		var push_dist = dist || 50;
		var oldx = inst.x
		var oldy = inst.y;
		var i;
		for (i = 0; i < push_dist; i++)
		{
			inst.x = (oldx + (xdir * i));
			inst.y = (oldy + (ydir * i));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, otherinst))
				return true;
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.pushInFractional = function (inst, xdir, ydir, obj, limit)
	{
		var divisor = 2;
		var frac;
		var forward = false;
		var overlapping = false;
		var bestx = inst.x;
		var besty = inst.y;
		while (divisor <= limit)
		{
			frac = 1 / divisor;
			divisor *= 2;
			inst.x += xdir * frac * (forward ? 1 : -1);
			inst.y += ydir * frac * (forward ? 1 : -1);
			inst.set_bbox_changed();
			if (this.testOverlap(inst, obj))
			{
				forward = true;
				overlapping = true;
			}
			else
			{
				forward = false;
				overlapping = false;
				bestx = inst.x;
				besty = inst.y;
			}
		}
		if (overlapping)
		{
			inst.x = bestx;
			inst.y = besty;
			inst.set_bbox_changed();
		}
	};
	Runtime.prototype.pushOutSolidNearest = function (inst, max_dist_)
	{
		var max_dist = (cr.is_undefined(max_dist_) ? 100 : max_dist_);
		var dist = 0;
		var oldx = inst.x
		var oldy = inst.y;
		var dir = 0;
		var dx = 0, dy = 0;
		var last_overlapped = this.testOverlapSolid(inst);
		if (!last_overlapped)
			return true;		// already clear of solids
		while (dist <= max_dist)
		{
			switch (dir) {
			case 0:		dx = 0; dy = -1; dist++; break;
			case 1:		dx = 1; dy = -1; break;
			case 2:		dx = 1; dy = 0; break;
			case 3:		dx = 1; dy = 1; break;
			case 4:		dx = 0; dy = 1; break;
			case 5:		dx = -1; dy = 1; break;
			case 6:		dx = -1; dy = 0; break;
			case 7:		dx = -1; dy = -1; break;
			}
			dir = (dir + 1) % 8;
			inst.x = cr.floor(oldx + (dx * dist));
			inst.y = cr.floor(oldy + (dy * dist));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, last_overlapped))
			{
				last_overlapped = this.testOverlapSolid(inst);
				if (!last_overlapped)
					return true;
			}
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.registerCollision = function (a, b)
	{
		if (!a.collisionsEnabled || !b.collisionsEnabled)
			return;
		this.registered_collisions.push([a, b]);
	};
	Runtime.prototype.checkRegisteredCollision = function (a, b)
	{
		var i, len, x;
		for (i = 0, len = this.registered_collisions.length; i < len; i++)
		{
			x = this.registered_collisions[i];
			if ((x[0] == a && x[1] == b) || (x[0] == b && x[1] == a))
				return true;
		}
		return false;
	};
	Runtime.prototype.calculateSolidBounceAngle = function(inst, startx, starty, obj)
	{
		var objx = inst.x;
		var objy = inst.y;
		var radius = cr.max(10, cr.distanceTo(startx, starty, objx, objy));
		var startangle = cr.angleTo(startx, starty, objx, objy);
		var firstsolid = obj || this.testOverlapSolid(inst);
		if (!firstsolid)
			return cr.clamp_angle(startangle + cr.PI);
		var cursolid = firstsolid;
		var i, curangle, anticlockwise_free_angle, clockwise_free_angle;
		var increment = cr.to_radians(5);	// 5 degree increments
		for (i = 1; i < 36; i++)
		{
			curangle = startangle - i * increment;
			inst.x = startx + Math.cos(curangle) * radius;
			inst.y = starty + Math.sin(curangle) * radius;
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, cursolid))
			{
				cursolid = obj ? null : this.testOverlapSolid(inst);
				if (!cursolid)
				{
					anticlockwise_free_angle = curangle;
					break;
				}
			}
		}
		if (i === 36)
			anticlockwise_free_angle = cr.clamp_angle(startangle + cr.PI);
		var cursolid = firstsolid;
		for (i = 1; i < 36; i++)
		{
			curangle = startangle + i * increment;
			inst.x = startx + Math.cos(curangle) * radius;
			inst.y = starty + Math.sin(curangle) * radius;
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, cursolid))
			{
				cursolid = obj ? null : this.testOverlapSolid(inst);
				if (!cursolid)
				{
					clockwise_free_angle = curangle;
					break;
				}
			}
		}
		if (i === 36)
			clockwise_free_angle = cr.clamp_angle(startangle + cr.PI);
		inst.x = objx;
		inst.y = objy;
		inst.set_bbox_changed();
		if (clockwise_free_angle === anticlockwise_free_angle)
			return clockwise_free_angle;
		var half_diff = cr.angleDiff(clockwise_free_angle, anticlockwise_free_angle) / 2;
		var normal;
		if (cr.angleClockwise(clockwise_free_angle, anticlockwise_free_angle))
		{
			normal = cr.clamp_angle(anticlockwise_free_angle + half_diff + cr.PI);
		}
		else
		{
			normal = cr.clamp_angle(clockwise_free_angle + half_diff);
		}
;
		var vx = Math.cos(startangle);
		var vy = Math.sin(startangle);
		var nx = Math.cos(normal);
		var ny = Math.sin(normal);
		var v_dot_n = vx * nx + vy * ny;
		var rx = vx - 2 * v_dot_n * nx;
		var ry = vy - 2 * v_dot_n * ny;
		return cr.angleTo(0, 0, rx, ry);
	};
	var triggerSheetIndex = -1;
	Runtime.prototype.trigger = function (method, inst, value /* for fast triggers */)
	{
;
		if (!this.running_layout)
			return false;
		var sheet = this.running_layout.event_sheet;
		if (!sheet)
			return false;     // no event sheet active; nothing to trigger
		var ret = false;
		var r, i, len;
		triggerSheetIndex++;
		var deep_includes = sheet.deep_includes;
		for (i = 0, len = deep_includes.length; i < len; ++i)
		{
			r = this.triggerOnSheet(method, inst, deep_includes[i], value);
			ret = ret || r;
		}
		r = this.triggerOnSheet(method, inst, sheet, value);
		ret = ret || r;
		triggerSheetIndex--;
		return ret;
    };
    Runtime.prototype.triggerOnSheet = function (method, inst, sheet, value)
    {
        var ret = false;
		var i, leni, r, families;
		if (!inst)
		{
			r = this.triggerOnSheetForTypeName(method, inst, "system", sheet, value);
			ret = ret || r;
		}
		else
		{
			r = this.triggerOnSheetForTypeName(method, inst, inst.type.name, sheet, value);
			ret = ret || r;
			families = inst.type.families;
			for (i = 0, leni = families.length; i < leni; ++i)
			{
				r = this.triggerOnSheetForTypeName(method, inst, families[i].name, sheet, value);
				ret = ret || r;
			}
		}
		return ret;             // true if anything got triggered
	};
	Runtime.prototype.triggerOnSheetForTypeName = function (method, inst, type_name, sheet, value)
	{
		var i, leni;
		var ret = false, ret2 = false;
		var trig, index;
		var fasttrigger = (typeof value !== "undefined");
		var triggers = (fasttrigger ? sheet.fasttriggers : sheet.triggers);
		var obj_entry = triggers[type_name];
		if (!obj_entry)
			return ret;
		var triggers_list = null;
		for (i = 0, leni = obj_entry.length; i < leni; ++i)
		{
			if (obj_entry[i].method == method)
			{
				triggers_list = obj_entry[i].evs;
				break;
			}
		}
		if (!triggers_list)
			return ret;
		var triggers_to_fire;
		if (fasttrigger)
		{
			triggers_to_fire = triggers_list[value];
		}
		else
		{
			triggers_to_fire = triggers_list;
		}
		if (!triggers_to_fire)
			return null;
		for (i = 0, leni = triggers_to_fire.length; i < leni; i++)
		{
			trig = triggers_to_fire[i][0];
			index = triggers_to_fire[i][1];
			ret2 = this.executeSingleTrigger(inst, type_name, trig, index);
			ret = ret || ret2;
		}
		return ret;
	};
	Runtime.prototype.executeSingleTrigger = function (inst, type_name, trig, index)
	{
		var i, leni;
		var ret = false;
		this.trigger_depth++;
		var current_event = this.getCurrentEventStack().current_event;
		if (current_event)
			this.pushCleanSol(current_event.solModifiersIncludingParents);
		var isrecursive = (this.trigger_depth > 1);		// calling trigger from inside another trigger
		this.pushCleanSol(trig.solModifiersIncludingParents);
		if (isrecursive)
			this.pushLocalVarStack();
		var event_stack = this.pushEventStack(trig);
		event_stack.current_event = trig;
		if (inst)
		{
			var sol = this.types[type_name].getCurrentSol();
			sol.select_all = false;
			sol.instances.length = 1;
			sol.instances[0] = inst;
			this.types[type_name].applySolToContainer();
		}
		var ok_to_run = true;
		if (trig.parent)
		{
			var temp_parents_arr = event_stack.temp_parents_arr;
			var cur_parent = trig.parent;
			while (cur_parent)
			{
				temp_parents_arr.push(cur_parent);
				cur_parent = cur_parent.parent;
			}
			temp_parents_arr.reverse();
			for (i = 0, leni = temp_parents_arr.length; i < leni; i++)
			{
				if (!temp_parents_arr[i].run_pretrigger())   // parent event failed
				{
					ok_to_run = false;
					break;
				}
			}
		}
		if (ok_to_run)
		{
			this.execcount++;
			if (trig.orblock)
				trig.run_orblocktrigger(index);
			else
				trig.run();
			ret = ret || event_stack.last_event_true;
		}
		this.popEventStack();
		if (isrecursive)
			this.popLocalVarStack();
		this.popSol(trig.solModifiersIncludingParents);
		if (current_event)
			this.popSol(current_event.solModifiersIncludingParents);
		if (this.isInOnDestroy === 0 && triggerSheetIndex === 0 && !this.isRunningEvents && (!this.deathRow.isEmpty() || this.createRow.length))
		{
			this.ClearDeathRow();
		}
		this.trigger_depth--;
		return ret;
	};
	Runtime.prototype.getCurrentCondition = function ()
	{
		var evinfo = this.getCurrentEventStack();
		return evinfo.current_event.conditions[evinfo.cndindex];
	};
	Runtime.prototype.getCurrentAction = function ()
	{
		var evinfo = this.getCurrentEventStack();
		return evinfo.current_event.actions[evinfo.actindex];
	};
	Runtime.prototype.pushLocalVarStack = function ()
	{
		this.localvar_stack_index++;
		if (this.localvar_stack_index >= this.localvar_stack.length)
			this.localvar_stack.push([]);
	};
	Runtime.prototype.popLocalVarStack = function ()
	{
;
		this.localvar_stack_index--;
	};
	Runtime.prototype.getCurrentLocalVarStack = function ()
	{
		return this.localvar_stack[this.localvar_stack_index];
	};
	Runtime.prototype.pushEventStack = function (cur_event)
	{
		this.event_stack_index++;
		if (this.event_stack_index >= this.event_stack.length)
			this.event_stack.push(new cr.eventStackFrame());
		var ret = this.getCurrentEventStack();
		ret.reset(cur_event);
		return ret;
	};
	Runtime.prototype.popEventStack = function ()
	{
;
		this.event_stack_index--;
	};
	Runtime.prototype.getCurrentEventStack = function ()
	{
		return this.event_stack[this.event_stack_index];
	};
	Runtime.prototype.pushLoopStack = function (name_)
	{
		this.loop_stack_index++;
		if (this.loop_stack_index >= this.loop_stack.length)
		{
			this.loop_stack.push(cr.seal({ name: name_, index: 0, stopped: false }));
		}
		var ret = this.getCurrentLoop();
		ret.name = name_;
		ret.index = 0;
		ret.stopped = false;
		return ret;
	};
	Runtime.prototype.popLoopStack = function ()
	{
;
		this.loop_stack_index--;
	};
	Runtime.prototype.getCurrentLoop = function ()
	{
		return this.loop_stack[this.loop_stack_index];
	};
	Runtime.prototype.getEventVariableByName = function (name, scope)
	{
		var i, leni, j, lenj, sheet, e;
		while (scope)
		{
			for (i = 0, leni = scope.subevents.length; i < leni; i++)
			{
				e = scope.subevents[i];
				if (e instanceof cr.eventvariable && cr.equals_nocase(name, e.name))
					return e;
			}
			scope = scope.parent;
		}
		for (i = 0, leni = this.eventsheets_by_index.length; i < leni; i++)
		{
			sheet = this.eventsheets_by_index[i];
			for (j = 0, lenj = sheet.events.length; j < lenj; j++)
			{
				e = sheet.events[j];
				if (e instanceof cr.eventvariable && cr.equals_nocase(name, e.name))
					return e;
			}
		}
		return null;
	};
	Runtime.prototype.getLayoutBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			if (this.layouts_by_index[i].sid === sid_)
				return this.layouts_by_index[i];
		}
		return null;
	};
	Runtime.prototype.getObjectTypeBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			if (this.types_by_index[i].sid === sid_)
				return this.types_by_index[i];
		}
		return null;
	};
	Runtime.prototype.getGroupBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.allGroups.length; i < len; i++)
		{
			if (this.allGroups[i].sid === sid_)
				return this.allGroups[i];
		}
		return null;
	};
	function makeSaveDb(e)
	{
		var db = e.target.result;
		db.createObjectStore("saves", { keyPath: "slot" });
	};
	function IndexedDB_WriteSlot(slot_, data_, oncomplete_, onerror_)
	{
		var request = indexedDB.open("_C2SaveStates");
		request.onupgradeneeded = makeSaveDb;
		request.onerror = onerror_;
		request.onsuccess = function (e)
		{
			var db = e.target.result;
			db.onerror = onerror_;
			var transaction = db.transaction(["saves"], "readwrite");
			var objectStore = transaction.objectStore("saves");
			var putReq = objectStore.put({"slot": slot_, "data": data_ });
			putReq.onsuccess = oncomplete_;
		};
	};
	function IndexedDB_ReadSlot(slot_, oncomplete_, onerror_)
	{
		var request = indexedDB.open("_C2SaveStates");
		request.onupgradeneeded = makeSaveDb;
		request.onerror = onerror_;
		request.onsuccess = function (e)
		{
			var db = e.target.result;
			db.onerror = onerror_;
			var transaction = db.transaction(["saves"]);
			var objectStore = transaction.objectStore("saves");
			var readReq = objectStore.get(slot_);
			readReq.onsuccess = function (e)
			{
				if (readReq.result)
					oncomplete_(readReq.result["data"]);
				else
					oncomplete_(null);
			};
		};
	};
	Runtime.prototype.signalContinuousPreview = function ()
	{
		this.signalledContinuousPreview = true;
	};
	function doContinuousPreviewReload()
	{
		cr.logexport("Reloading for continuous preview");
		if (!!window["c2cocoonjs"])
		{
			CocoonJS["App"]["reload"]();
		}
		else
		{
			if (window.location.search.indexOf("continuous") > -1)
				window.location.reload(true);
			else
				window.location = window.location + "?continuous";
		}
	};
	Runtime.prototype.handleSaveLoad = function ()
	{
		var self = this;
		var savingToSlot = this.saveToSlot;
		var savingJson = this.lastSaveJson;
		var loadingFromSlot = this.loadFromSlot;
		var continuous = false;
		if (this.signalledContinuousPreview)
		{
			continuous = true;
			savingToSlot = "__c2_continuouspreview";
			this.signalledContinuousPreview = false;
		}
		if (savingToSlot.length)
		{
			this.ClearDeathRow();
			savingJson = this.saveToJSONString();
			if (window.indexedDB && !this.isCocoonJs)
			{
				IndexedDB_WriteSlot(savingToSlot, savingJson, function ()
				{
					cr.logexport("Saved state to IndexedDB storage (" + savingJson.length + " bytes)");
					self.lastSaveJson = savingJson;
					self.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
					self.lastSaveJson = "";
					if (continuous)
						doContinuousPreviewReload();
				}, function (e)
				{
					try {
						localStorage.setItem("__c2save_" + savingToSlot, savingJson);
						cr.logexport("Saved state to WebStorage (" + savingJson.length + " bytes)");
						self.lastSaveJson = savingJson;
						self.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
						self.lastSaveJson = "";
						if (continuous)
							doContinuousPreviewReload();
					}
					catch (f)
					{
						cr.logexport("Failed to save game state: " + e + "; " + f);
					}
				});
			}
			else
			{
				try {
					localStorage.setItem("__c2save_" + savingToSlot, savingJson);
					cr.logexport("Saved state to WebStorage (" + savingJson.length + " bytes)");
					self.lastSaveJson = savingJson;
					this.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
					self.lastSaveJson = "";
					if (continuous)
						doContinuousPreviewReload();
				}
				catch (e)
				{
					cr.logexport("Error saving to WebStorage: " + e);
				}
			}
			this.saveToSlot = "";
			this.loadFromSlot = "";
			this.loadFromJson = "";
		}
		if (loadingFromSlot.length)
		{
			if (window.indexedDB && !this.isCocoonJs)
			{
				IndexedDB_ReadSlot(loadingFromSlot, function (result_)
				{
					if (result_)
					{
						self.loadFromJson = result_;
						cr.logexport("Loaded state from IndexedDB storage (" + self.loadFromJson.length + " bytes)");
					}
					else
					{
						self.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
						cr.logexport("Loaded state from WebStorage (" + self.loadFromJson.length + " bytes)");
					}
					self.suspendDrawing = false;
					if (!self.loadFromJson.length)
						self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
				}, function (e)
				{
					self.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
					cr.logexport("Loaded state from WebStorage (" + self.loadFromJson.length + " bytes)");
					self.suspendDrawing = false;
					if (!self.loadFromJson.length)
						self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
				});
			}
			else
			{
				this.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
				cr.logexport("Loaded state from WebStorage (" + this.loadFromJson.length + " bytes)");
				this.suspendDrawing = false;
				if (!self.loadFromJson.length)
					self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
			}
			this.loadFromSlot = "";
			this.saveToSlot = "";
		}
		if (this.loadFromJson.length)
		{
			this.ClearDeathRow();
			this.loadFromJSONString(this.loadFromJson);
			this.lastSaveJson = this.loadFromJson;
			this.trigger(cr.system_object.prototype.cnds.OnLoadComplete, null);
			this.lastSaveJson = "";
			this.loadFromJson = "";
		}
	};
	function CopyExtraObject(extra)
	{
		var p, ret = {};
		for (p in extra)
		{
			if (extra.hasOwnProperty(p))
			{
				if (extra[p] instanceof cr.ObjectSet)
					continue;
				if (extra[p] && typeof extra[p].c2userdata !== "undefined")
					continue;
				ret[p] = extra[p];
			}
		}
		return ret;
	};
	Runtime.prototype.saveToJSONString = function()
	{
		var i, len, j, lenj, type, layout, typeobj, g, c, a, v, p;
		var o = {
			"c2save":				true,
			"version":				1,
			"rt": {
				"time":				this.kahanTime.sum,
				"timescale":		this.timescale,
				"tickcount":		this.tickcount,
				"execcount":		this.execcount,
				"next_uid":			this.next_uid,
				"running_layout":	this.running_layout.sid,
				"start_time_offset": (Date.now() - this.start_time)
			},
			"types": {},
			"layouts": {},
			"events": {
				"groups": {},
				"cnds": {},
				"acts": {},
				"vars": {}
			}
		};
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || this.typeHasNoSaveBehavior(type))
				continue;
			typeobj = {
				"instances": []
			};
			if (cr.hasAnyOwnProperty(type.extra))
				typeobj["ex"] = CopyExtraObject(type.extra);
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				typeobj["instances"].push(this.saveInstanceToJSON(type.instances[j]));
			}
			o["types"][type.sid.toString()] = typeobj;
		}
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			layout = this.layouts_by_index[i];
			o["layouts"][layout.sid.toString()] = layout.saveToJSON();
		}
		var ogroups = o["events"]["groups"];
		for (i = 0, len = this.allGroups.length; i < len; i++)
		{
			g = this.allGroups[i];
			ogroups[g.sid.toString()] = this.groups_by_name[g.group_name].group_active;
		}
		var ocnds = o["events"]["cnds"];
		for (p in this.cndsBySid)
		{
			if (this.cndsBySid.hasOwnProperty(p))
			{
				c = this.cndsBySid[p];
				if (cr.hasAnyOwnProperty(c.extra))
					ocnds[p] = { "ex": CopyExtraObject(c.extra) };
			}
		}
		var oacts = o["events"]["acts"];
		for (p in this.actsBySid)
		{
			if (this.actsBySid.hasOwnProperty(p))
			{
				a = this.actsBySid[p];
				if (cr.hasAnyOwnProperty(a.extra))
					oacts[p] = { "ex": a.extra };
			}
		}
		var ovars = o["events"]["vars"];
		for (p in this.varsBySid)
		{
			if (this.varsBySid.hasOwnProperty(p))
			{
				v = this.varsBySid[p];
				if (!v.is_constant && (!v.parent || v.is_static))
					ovars[p] = v.data;
			}
		}
		o["system"] = this.system.saveToJSON();
		return JSON.stringify(o);
	};
	Runtime.prototype.refreshUidMap = function ()
	{
		var i, len, type, j, lenj, inst;
		this.objectsByUid = {};
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				this.objectsByUid[inst.uid.toString()] = inst;
			}
		}
	};
	Runtime.prototype.loadFromJSONString = function (str)
	{
		var o = JSON.parse(str);
		if (!o["c2save"])
			return;		// probably not a c2 save state
		if (o["version"] > 1)
			return;		// from future version of c2; assume not compatible
		var rt = o["rt"];
		this.kahanTime.reset();
		this.kahanTime.sum = rt["time"];
		this.timescale = rt["timescale"];
		this.tickcount = rt["tickcount"];
		this.start_time = Date.now() - rt["start_time_offset"];
		var layout_sid = rt["running_layout"];
		if (layout_sid !== this.running_layout.sid)
		{
			var changeToLayout = this.getLayoutBySid(layout_sid);
			if (changeToLayout)
				this.doChangeLayout(changeToLayout);
			else
				return;		// layout that was saved on has gone missing (deleted?)
		}
		this.isLoadingState = true;
		var i, len, j, lenj, k, lenk, p, type, existing_insts, load_insts, inst, binst, layout, layer, g, iid, t;
		var otypes = o["types"];
		for (p in otypes)
		{
			if (otypes.hasOwnProperty(p))
			{
				type = this.getObjectTypeBySid(parseInt(p, 10));
				if (!type || type.is_family || this.typeHasNoSaveBehavior(type))
					continue;
				if (otypes[p]["ex"])
					type.extra = otypes[p]["ex"];
				else
					cr.wipe(type.extra);
				existing_insts = type.instances;
				load_insts = otypes[p]["instances"];
				for (i = 0, len = cr.min(existing_insts.length, load_insts.length); i < len; i++)
				{
					this.loadInstanceFromJSON(existing_insts[i], load_insts[i]);
				}
				for (i = load_insts.length, len = existing_insts.length; i < len; i++)
					this.DestroyInstance(existing_insts[i]);
				for (i = existing_insts.length, len = load_insts.length; i < len; i++)
				{
					layer = null;
					if (type.plugin.is_world)
					{
						layer = this.running_layout.getLayerBySid(load_insts[i]["w"]["l"]);
						if (!layer)
							continue;
					}
					inst = this.createInstanceFromInit(type.default_instance, layer, false, 0, 0, true);
					this.loadInstanceFromJSON(inst, load_insts[i]);
				}
				type.stale_iids = true;
			}
		}
		this.ClearDeathRow();
		this.refreshUidMap();
		var olayouts = o["layouts"];
		for (p in olayouts)
		{
			if (olayouts.hasOwnProperty(p))
			{
				layout = this.getLayoutBySid(parseInt(p, 10));
				if (!layout)
					continue;		// must've gone missing
				layout.loadFromJSON(olayouts[p]);
			}
		}
		var ogroups = o["events"]["groups"];
		for (p in ogroups)
		{
			if (ogroups.hasOwnProperty(p))
			{
				g = this.getGroupBySid(parseInt(p, 10));
				if (g && this.groups_by_name[g.group_name])
					this.groups_by_name[g.group_name].group_active = ogroups[p];
			}
		}
		var ocnds = o["events"]["cnds"];
		for (p in ocnds)
		{
			if (ocnds.hasOwnProperty(p) && this.cndsBySid.hasOwnProperty(p))
			{
				this.cndsBySid[p].extra = ocnds[p]["ex"];
			}
		}
		var oacts = o["events"]["acts"];
		for (p in oacts)
		{
			if (oacts.hasOwnProperty(p) && this.actsBySid.hasOwnProperty(p))
			{
				this.actsBySid[p].extra = oacts[p]["ex"];
			}
		}
		var ovars = o["events"]["vars"];
		for (p in ovars)
		{
			if (ovars.hasOwnProperty(p) && this.varsBySid.hasOwnProperty(p))
			{
				this.varsBySid[p].data = ovars[p];
			}
		}
		this.next_uid = rt["next_uid"];
		this.isLoadingState = false;
		this.system.loadFromJSON(o["system"]);
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				if (type.is_contained)
				{
					iid = inst.get_iid();
					inst.siblings.length = 0;
					for (k = 0, lenk = type.container.length; k < lenk; k++)
					{
						t = type.container[k];
						if (type === t)
							continue;
;
						inst.siblings.push(t.instances[iid]);
					}
				}
				if (inst.afterLoad)
					inst.afterLoad();
				if (inst.behavior_insts)
				{
					for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
					{
						binst = inst.behavior_insts[k];
						if (binst.afterLoad)
							binst.afterLoad();
					}
				}
			}
		}
		this.redraw = true;
	};
	Runtime.prototype.saveInstanceToJSON = function(inst, state_only)
	{
		var i, len, world, behinst, et;
		var type = inst.type;
		var plugin = type.plugin;
		var o = {};
		if (state_only)
			o["c2"] = true;		// mark as known json data from Construct 2
		else
			o["uid"] = inst.uid;
		if (cr.hasAnyOwnProperty(inst.extra))
			o["ex"] = CopyExtraObject(inst.extra);
		if (inst.instance_vars && inst.instance_vars.length)
		{
			o["ivs"] = {};
			for (i = 0, len = inst.instance_vars.length; i < len; i++)
			{
				o["ivs"][inst.type.instvar_sids[i].toString()] = inst.instance_vars[i];
			}
		}
		if (plugin.is_world)
		{
			world = {
				"x": inst.x,
				"y": inst.y,
				"w": inst.width,
				"h": inst.height,
				"l": inst.layer.sid,
				"zi": inst.get_zindex()
			};
			if (inst.angle !== 0)
				world["a"] = inst.angle;
			if (inst.opacity !== 1)
				world["o"] = inst.opacity;
			if (inst.hotspotX !== 0.5)
				world["hX"] = inst.hotspotX;
			if (inst.hotspotY !== 0.5)
				world["hY"] = inst.hotspotY;
			if (inst.blend_mode !== 0)
				world["bm"] = inst.blend_mode;
			if (!inst.visible)
				world["v"] = inst.visible;
			if (!inst.collisionsEnabled)
				world["ce"] = inst.collisionsEnabled;
			if (inst.my_timescale !== -1)
				world["mts"] = inst.my_timescale;
			if (type.effect_types.length)
			{
				world["fx"] = [];
				for (i = 0, len = type.effect_types.length; i < len; i++)
				{
					et = type.effect_types[i];
					world["fx"].push({"name": et.name,
									  "active": inst.active_effect_flags[et.index],
									  "params": inst.effect_params[et.index] });
				}
			}
			o["w"] = world;
		}
		if (inst.behavior_insts && inst.behavior_insts.length)
		{
			o["behs"] = {};
			for (i = 0, len = inst.behavior_insts.length; i < len; i++)
			{
				behinst = inst.behavior_insts[i];
				if (behinst.saveToJSON)
					o["behs"][behinst.type.sid.toString()] = behinst.saveToJSON();
			}
		}
		if (inst.saveToJSON)
			o["data"] = inst.saveToJSON();
		return o;
	};
	Runtime.prototype.getInstanceVarIndexBySid = function (type, sid_)
	{
		var i, len;
		for (i = 0, len = type.instvar_sids.length; i < len; i++)
		{
			if (type.instvar_sids[i] === sid_)
				return i;
		}
		return -1;
	};
	Runtime.prototype.getBehaviorIndexBySid = function (inst, sid_)
	{
		var i, len;
		for (i = 0, len = inst.behavior_insts.length; i < len; i++)
		{
			if (inst.behavior_insts[i].type.sid === sid_)
				return i;
		}
		return -1;
	};
	Runtime.prototype.loadInstanceFromJSON = function(inst, o, state_only)
	{
		var p, i, len, iv, oivs, world, fxindex, obehs, behindex;
		var oldlayer;
		var type = inst.type;
		var plugin = type.plugin;
		if (state_only)
		{
			if (!o["c2"])
				return;
		}
		else
			inst.uid = o["uid"];
		if (o["ex"])
			inst.extra = o["ex"];
		else
			cr.wipe(inst.extra);
		oivs = o["ivs"];
		if (oivs)
		{
			for (p in oivs)
			{
				if (oivs.hasOwnProperty(p))
				{
					iv = this.getInstanceVarIndexBySid(type, parseInt(p, 10));
					if (iv < 0 || iv >= inst.instance_vars.length)
						continue;		// must've gone missing
					inst.instance_vars[iv] = oivs[p];
				}
			}
		}
		if (plugin.is_world)
		{
			world = o["w"];
			if (inst.layer.sid !== world["l"])
			{
				oldlayer = inst.layer;
				inst.layer = this.running_layout.getLayerBySid(world["l"]);
				if (inst.layer)
				{
					inst.layer.instances.push(inst);
					inst.layer.zindices_stale = true;
					cr.arrayFindRemove(oldlayer.instances, inst);
					oldlayer.zindices_stale = true;
				}
				else
				{
					inst.layer = oldlayer;
					this.DestroyInstance(inst);
				}
			}
			inst.x = world["x"];
			inst.y = world["y"];
			inst.width = world["w"];
			inst.height = world["h"];
			inst.zindex = world["zi"];
			inst.angle = world.hasOwnProperty("a") ? world["a"] : 0;
			inst.opacity = world.hasOwnProperty("o") ? world["o"] : 1;
			inst.hotspotX = world.hasOwnProperty("hX") ? world["hX"] : 0.5;
			inst.hotspotY = world.hasOwnProperty("hY") ? world["hY"] : 0.5;
			inst.visible = world.hasOwnProperty("v") ? world["v"] : true;
			inst.collisionsEnabled = world.hasOwnProperty("ce") ? world["ce"] : true;
			inst.my_timescale = world.hasOwnProperty("mts") ? world["mts"] : -1;
			inst.blend_mode = world.hasOwnProperty("bm") ? world["bm"] : 0;;
			inst.compositeOp = cr.effectToCompositeOp(inst.blend_mode);
			if (this.gl)
				cr.setGLBlend(inst, inst.blend_mode, this.gl);
			inst.set_bbox_changed();
			if (world.hasOwnProperty("fx"))
			{
				for (i = 0, len = world["fx"].length; i < len; i++)
				{
					fxindex = type.getEffectIndexByName(world["fx"][i]["name"]);
					if (fxindex < 0)
						continue;		// must've gone missing
					inst.active_effect_flags[fxindex] = world["fx"][i]["active"];
					inst.effect_params[fxindex] = world["fx"][i]["params"];
				}
			}
			inst.updateActiveEffects();
		}
		obehs = o["behs"];
		if (obehs)
		{
			for (p in obehs)
			{
				if (obehs.hasOwnProperty(p))
				{
					behindex = this.getBehaviorIndexBySid(inst, parseInt(p, 10));
					if (behindex < 0)
						continue;		// must've gone missing
					inst.behavior_insts[behindex].loadFromJSON(obehs[p]);
				}
			}
		}
		if (o["data"])
			inst.loadFromJSON(o["data"]);
	};
	cr.runtime = Runtime;
	cr.createRuntime = function (canvasid)
	{
		return new Runtime(document.getElementById(canvasid));
	};
	cr.createDCRuntime = function (w, h)
	{
		return new Runtime({ "dc": true, "width": w, "height": h });
	};
	window["cr_createRuntime"] = cr.createRuntime;
	window["cr_createDCRuntime"] = cr.createDCRuntime;
	window["createCocoonJSRuntime"] = function ()
	{
		window["c2cocoonjs"] = true;
		var canvas = document.createElement("screencanvas") || document.createElement("canvas");
		canvas.screencanvas = true;
		document.body.appendChild(canvas);
		var rt = new Runtime(canvas);
		window["c2runtime"] = rt;
		window.addEventListener("orientationchange", function () {
			window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		});
		window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		return rt;
	};
	window["createEjectaRuntime"] = function ()
	{
		var canvas = document.getElementById("canvas");
		var rt = new Runtime(canvas);
		window["c2runtime"] = rt;
		window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		return rt;
	};
}());
window["cr_getC2Runtime"] = function()
{
	var canvas = document.getElementById("c2canvas");
	if (canvas)
		return canvas["c2runtime"];
	else if (window["c2runtime"])
		return window["c2runtime"];
	else
		return null;
}
window["cr_sizeCanvas"] = function(w, h)
{
	if (w === 0 || h === 0)
		return;
	var runtime = window["cr_getC2Runtime"]();
	if (runtime)
		runtime["setSize"](w, h);
}
window["cr_setSuspended"] = function(s)
{
	var runtime = window["cr_getC2Runtime"]();
	if (runtime)
		runtime["setSuspended"](s);
}
;
(function()
{
	function Layout(runtime, m)
	{
		this.runtime = runtime;
		this.event_sheet = null;
		this.scrollX = (this.runtime.original_width / 2);
		this.scrollY = (this.runtime.original_height / 2);
		this.scale = 1.0;
		this.angle = 0;
		this.first_visit = true;
		this.name = m[0];
		this.width = m[1];
		this.height = m[2];
		this.unbounded_scrolling = m[3];
		this.sheetname = m[4];
		this.sid = m[5];
		var lm = m[6];
		var i, len;
		this.layers = [];
		this.initial_types = [];
		for (i = 0, len = lm.length; i < len; i++)
		{
			var layer = new cr.layer(this, lm[i]);
			layer.number = i;
			cr.seal(layer);
			this.layers.push(layer);
		}
		var im = m[7];
		this.initial_nonworld = [];
		for (i = 0, len = im.length; i < len; i++)
		{
			var inst = im[i];
			var type = this.runtime.types_by_index[inst[1]];
;
			if (!type.default_instance)
				type.default_instance = inst;
			this.initial_nonworld.push(inst);
			if (this.initial_types.indexOf(type) === -1)
				this.initial_types.push(type);
		}
		this.effect_types = [];
		this.active_effect_types = [];
		this.effect_params = [];
		for (i = 0, len = m[8].length; i < len; i++)
		{
			this.effect_types.push({
				id: m[8][i][0],
				name: m[8][i][1],
				shaderindex: -1,
				active: true,
				index: i
			});
			this.effect_params.push(m[8][i][2].slice(0));
		}
		this.updateActiveEffects();
		this.rcTex = new cr.rect(0, 0, 1, 1);
		this.rcTex2 = new cr.rect(0, 0, 1, 1);
		this.persist_data = {};
	};
	Layout.prototype.saveObjectToPersist = function (inst)
	{
		var sidStr = inst.type.sid.toString();
		if (!this.persist_data.hasOwnProperty(sidStr))
			this.persist_data[sidStr] = [];
		var type_persist = this.persist_data[sidStr];
		type_persist.push(this.runtime.saveInstanceToJSON(inst));
	};
	Layout.prototype.hasOpaqueBottomLayer = function ()
	{
		var layer = this.layers[0];
		return !layer.transparent && layer.opacity === 1.0 && !layer.forceOwnTexture && layer.visible;
	};
	Layout.prototype.updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.active)
				this.active_effect_types.push(et);
		}
	};
	Layout.prototype.getEffectByName = function (name_)
	{
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.name === name_)
				return et;
		}
		return null;
	};
	var created_instances = [];
	Layout.prototype.startRunning = function ()
	{
		if (this.sheetname)
		{
			this.event_sheet = this.runtime.eventsheets[this.sheetname];
;
			this.event_sheet.updateDeepIncludes();
		}
		this.runtime.running_layout = this;
		this.scrollX = (this.runtime.original_width / 2);
		this.scrollY = (this.runtime.original_height / 2);
		var i, k, len, lenk, type, type_instances, inst, iid, t, s, p, q, type_data, layer;
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			type = this.runtime.types_by_index[i];
			if (type.is_family)
				continue;		// instances are only transferred for their real type
			type_instances = type.instances;
			for (k = 0, lenk = type_instances.length; k < lenk; k++)
			{
				inst = type_instances[k];
				if (inst.layer)
				{
					var num = inst.layer.number;
					if (num >= this.layers.length)
						num = this.layers.length - 1;
					inst.layer = this.layers[num];
					inst.layer.instances.push(inst);
					inst.layer.zindices_stale = true;
				}
			}
		}
		var layer;
		created_instances.length = 0;
		this.boundScrolling();
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			layer = this.layers[i];
			layer.createInitialInstances();		// fills created_instances
			layer.disableAngle = true;
			var px = layer.canvasToLayer(0, 0, true, true);
			var py = layer.canvasToLayer(0, 0, false, true);
			layer.disableAngle = false;
			if (this.runtime.pixel_rounding)
			{
				px = (px + 0.5) | 0;
				py = (py + 0.5) | 0;
			}
			layer.rotateViewport(px, py, null);
		}
		var uids_changed = false;
		if (!this.first_visit)
		{
			for (p in this.persist_data)
			{
				if (this.persist_data.hasOwnProperty(p))
				{
					type = this.runtime.getObjectTypeBySid(parseInt(p, 10));
					if (!type || type.is_family || !this.runtime.typeHasPersistBehavior(type))
						continue;
					type_data = this.persist_data[p];
					for (i = 0, len = type_data.length; i < len; i++)
					{
						layer = null;
						if (type.plugin.is_world)
						{
							layer = this.getLayerBySid(type_data[i]["w"]["l"]);
							if (!layer)
								continue;
						}
						inst = this.runtime.createInstanceFromInit(type.default_instance, layer, false, 0, 0, true);
						this.runtime.loadInstanceFromJSON(inst, type_data[i]);
						uids_changed = true;
						created_instances.push(inst);
					}
					type_data.length = 0;
				}
			}
			for (i = 0, len = this.layers.length; i < len; i++)
			{
				this.layers[i].instances.sort(sortInstanceByZIndex);
				this.layers[i].zindices_stale = true;		// in case of duplicates/holes
			}
		}
		if (uids_changed)
		{
			this.runtime.ClearDeathRow();
			this.runtime.refreshUidMap();
		}
		for (i = 0; i < created_instances.length; i++)
		{
			inst = created_instances[i];
			if (!inst.type.is_contained)
				continue;
			iid = inst.get_iid();
			for (k = 0, lenk = inst.type.container.length; k < lenk; k++)
			{
				t = inst.type.container[k];
				if (inst.type === t)
					continue;
				if (t.instances.length > iid)
					inst.siblings.push(t.instances[iid]);
				else
				{
					if (!t.default_instance)
					{
					}
					else
					{
						s = this.runtime.createInstanceFromInit(t.default_instance, inst.layer, true, inst.x, inst.y, true);
						this.runtime.ClearDeathRow();
						t.updateIIDs();
						inst.siblings.push(s);
						created_instances.push(s);		// come back around and link up its own instances too
					}
				}
			}
		}
		for (i = 0, len = this.initial_nonworld.length; i < len; i++)
		{
			inst = this.runtime.createInstanceFromInit(this.initial_nonworld[i], null, true);
;
		}
		this.runtime.changelayout = null;
		this.runtime.ClearDeathRow();
		if (this.runtime.ctx && !this.runtime.isDomFree)
		{
			for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
			{
				t = this.runtime.types_by_index[i];
				if (t.is_family || !t.instances.length || !t.preloadCanvas2D)
					continue;
				t.preloadCanvas2D(this.runtime.ctx);
			}
		}
		/*
		if (this.runtime.glwrap)
		{
			console.log("Estimated VRAM at layout start: " + this.runtime.glwrap.textureCount() + " textures, approx. " + Math.round(this.runtime.glwrap.estimateVRAM() / 1024) + " kb");
		}
		*/
		for (i = 0, len = created_instances.length; i < len; i++)
		{
			inst = created_instances[i];
			this.runtime.trigger(Object.getPrototypeOf(inst.type.plugin).cnds.OnCreated, inst);
		}
		created_instances.length = 0;
		this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutStart, null);
		this.first_visit = false;
	};
	Layout.prototype.createGlobalNonWorlds = function ()
	{
		var i, k, len, initial_inst, inst, type;
		for (i = 0, k = 0, len = this.initial_nonworld.length; i < len; i++)
		{
			initial_inst = this.initial_nonworld[i];
			type = this.runtime.types_by_index[initial_inst[1]];
			if (type.global)
				inst = this.runtime.createInstanceFromInit(initial_inst, null, true);
			else
			{
				this.initial_nonworld[k] = initial_inst;
				k++;
			}
		}
		this.initial_nonworld.length = k;
	};
	Layout.prototype.stopRunning = function ()
	{
;
		/*
		if (this.runtime.glwrap)
		{
			console.log("Estimated VRAM at layout end: " + this.runtime.glwrap.textureCount() + " textures, approx. " + Math.round(this.runtime.glwrap.estimateVRAM() / 1024) + " kb");
		}
		*/
		this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutEnd, null);
		this.runtime.system.waits.length = 0;
		var i, leni, j, lenj;
		var layer_instances, inst, type;
		for (i = 0, leni = this.layers.length; i < leni; i++)
		{
			layer_instances = this.layers[i].instances;
			for (j = 0, lenj = layer_instances.length; j < lenj; j++)
			{
				inst = layer_instances[j];
				if (!inst.type.global)
				{
					if (this.runtime.typeHasPersistBehavior(inst.type))
						this.saveObjectToPersist(inst);
					this.runtime.DestroyInstance(inst);
				}
			}
			this.runtime.ClearDeathRow();
			layer_instances.length = 0;
			this.layers[i].zindices_stale = true;
		}
		for (i = 0, leni = this.runtime.types_by_index.length; i < leni; i++)
		{
			type = this.runtime.types_by_index[i];
			if (type.global || type.plugin.is_world || type.plugin.singleglobal || type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
				this.runtime.DestroyInstance(type.instances[j]);
			this.runtime.ClearDeathRow();
		}
	};
	Layout.prototype.draw = function (ctx)
	{
		var layout_canvas;
		var layout_ctx = ctx;
		var ctx_changed = false;
		var render_offscreen = !this.runtime.fullscreenScalingQuality;
		if (render_offscreen)
		{
			if (!this.runtime.layout_canvas)
			{
				this.runtime.layout_canvas = document.createElement("canvas");
				layout_canvas = this.runtime.layout_canvas;
				layout_canvas.width = this.runtime.draw_width;
				layout_canvas.height = this.runtime.draw_height;
				this.runtime.layout_ctx = layout_canvas.getContext("2d");
				ctx_changed = true;
			}
			layout_canvas = this.runtime.layout_canvas;
			layout_ctx = this.runtime.layout_ctx;
			if (layout_canvas.width !== this.runtime.draw_width)
			{
				layout_canvas.width = this.runtime.draw_width;
				ctx_changed = true;
			}
			if (layout_canvas.height !== this.runtime.draw_height)
			{
				layout_canvas.height = this.runtime.draw_height;
				ctx_changed = true;
			}
			if (ctx_changed)
			{
				layout_ctx["webkitImageSmoothingEnabled"] = this.runtime.linearSampling;
				layout_ctx["mozImageSmoothingEnabled"] = this.runtime.linearSampling;
				layout_ctx["msImageSmoothingEnabled"] = this.runtime.linearSampling;
				layout_ctx["imageSmoothingEnabled"] = this.runtime.linearSampling;
			}
		}
		layout_ctx.globalAlpha = 1;
		layout_ctx.globalCompositeOperation = "source-over";
		if (this.runtime.alphaBackground && !this.hasOpaqueBottomLayer())
			layout_ctx.clearRect(0, 0, this.runtime.draw_width, this.runtime.draw_height);
		var i, len, l;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			l = this.layers[i];
			if (l.visible && l.opacity > 0 && l.blend_mode !== 11)
				l.draw(layout_ctx);
		}
		if (render_offscreen)
		{
			ctx.drawImage(layout_canvas, 0, 0, this.runtime.width, this.runtime.height);
		}
	};
	Layout.prototype.drawGL = function (glw)
	{
		var render_to_texture = (this.active_effect_types.length > 0 ||
								 this.runtime.uses_background_blending ||
								 !this.runtime.fullscreenScalingQuality);
		if (render_to_texture)
		{
			if (!this.runtime.layout_tex)
			{
				this.runtime.layout_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			if (this.runtime.layout_tex.c2width !== this.runtime.draw_width || this.runtime.layout_tex.c2height !== this.runtime.draw_height)
			{
				glw.deleteTexture(this.runtime.layout_tex);
				this.runtime.layout_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			glw.setRenderingToTexture(this.runtime.layout_tex);
			if (!this.runtime.fullscreenScalingQuality)
			{
				glw.setSize(this.runtime.draw_width, this.runtime.draw_height);
			}
		}
		else
		{
			if (this.runtime.layout_tex)
			{
				glw.setRenderingToTexture(null);
				glw.deleteTexture(this.runtime.layout_tex);
				this.runtime.layout_tex = null;
			}
		}
		if (this.runtime.alphaBackground && !this.hasOpaqueBottomLayer())
			glw.clear(0, 0, 0, 0);
		var i, len;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			if (this.layers[i].visible && this.layers[i].opacity > 0)
				this.layers[i].drawGL(glw);
		}
		if (render_to_texture)
		{
			if (this.active_effect_types.length === 0 ||
				(this.active_effect_types.length === 1 && this.runtime.fullscreenScalingQuality))
			{
				if (this.active_effect_types.length === 1)
				{
					var etindex = this.active_effect_types[0].index;
					glw.switchProgram(this.active_effect_types[0].shaderindex);
					glw.setProgramParameters(null,								// backTex
											 1.0 / this.runtime.draw_width,		// pixelWidth
											 1.0 / this.runtime.draw_height,	// pixelHeight
											 0.0, 0.0,							// destStart
											 1.0, 1.0,							// destEnd
											 this.scale,						// layerScale
											 this.angle,						// layerAngle
											 0.0, 0.0,							// viewOrigin
											 this.effect_params[etindex]);		// fx parameters
					if (glw.programIsAnimated(this.active_effect_types[0].shaderindex))
						this.runtime.redraw = true;
				}
				else
					glw.switchProgram(0);
				if (!this.runtime.fullscreenScalingQuality)
				{
					glw.setSize(this.runtime.width, this.runtime.height);
				}
				glw.setRenderingToTexture(null);				// to backbuffer
				glw.setOpacity(1);
				glw.setTexture(this.runtime.layout_tex);
				glw.setAlphaBlend();
				glw.resetModelView();
				glw.updateModelView();
				var halfw = this.runtime.width / 2;
				var halfh = this.runtime.height / 2;
				glw.quad(-halfw, halfh, halfw, halfh, halfw, -halfh, -halfw, -halfh);
				glw.setTexture(null);
			}
			else
			{
				this.renderEffectChain(glw, null, null, null);
			}
		}
	};
	Layout.prototype.getRenderTarget = function()
	{
		return (this.active_effect_types.length > 0 ||
				this.runtime.uses_background_blending ||
				!this.runtime.fullscreenScalingQuality) ? this.runtime.layout_tex : null;
	};
	Layout.prototype.getMinLayerScale = function ()
	{
		var m = this.layers[0].getScale();
		var i, len, l;
		for (i = 1, len = this.layers.length; i < len; i++)
		{
			l = this.layers[i];
			if (l.parallaxX === 0 && l.parallaxY === 0)
				continue;
			if (l.getScale() < m)
				m = l.getScale();
		}
		return m;
	};
	Layout.prototype.scrollToX = function (x)
	{
		if (!this.unbounded_scrolling)
		{
			var widthBoundary = (this.runtime.draw_width * (1 / this.getMinLayerScale()) / 2);
			if (x > this.width - widthBoundary)
				x = this.width - widthBoundary;
			if (x < widthBoundary)
				x = widthBoundary;
		}
		if (this.scrollX !== x)
		{
			this.scrollX = x;
			this.runtime.redraw = true;
		}
	};
	Layout.prototype.scrollToY = function (y)
	{
		if (!this.unbounded_scrolling)
		{
			var heightBoundary = (this.runtime.draw_height * (1 / this.getMinLayerScale()) / 2);
			if (y > this.height - heightBoundary)
				y = this.height - heightBoundary;
			if (y < heightBoundary)
				y = heightBoundary;
		}
		if (this.scrollY !== y)
		{
			this.scrollY = y;
			this.runtime.redraw = true;
		}
	};
	Layout.prototype.boundScrolling = function ()
	{
		this.scrollToX(this.scrollX);
		this.scrollToY(this.scrollY);
	};
	Layout.prototype.renderEffectChain = function (glw, layer, inst, rendertarget)
	{
		var active_effect_types = inst ?
							inst.active_effect_types :
							layer ?
								layer.active_effect_types :
								this.active_effect_types;
		var layerScale = 1, layerAngle = 0, viewOriginLeft = 0, viewOriginTop = 0;
		if (inst)
		{
			layerScale = inst.layer.getScale();
			layerAngle = inst.layer.getAngle();
			viewOriginLeft = inst.layer.viewLeft;
			viewOriginTop = inst.layer.viewTop;
		}
		else if (layer)
		{
			layerScale = layer.getScale();
			layerAngle = layer.getAngle();
			viewOriginLeft = layer.viewLeft;
			viewOriginTop = layer.viewTop;
		}
		var fx_tex = this.runtime.fx_tex;
		var i, len, last, temp, fx_index = 0, other_fx_index = 1;
		var y, h;
		var windowWidth = this.runtime.draw_width;
		var windowHeight = this.runtime.draw_height;
		var halfw = windowWidth / 2;
		var halfh = windowHeight / 2;
		var rcTex = layer ? layer.rcTex : this.rcTex;
		var rcTex2 = layer ? layer.rcTex2 : this.rcTex2;
		var screenleft = 0, clearleft = 0;
		var screentop = 0, cleartop = 0;
		var screenright = windowWidth, clearright = windowWidth;
		var screenbottom = windowHeight, clearbottom = windowHeight;
		var boxExtendHorizontal = 0;
		var boxExtendVertical = 0;
		var inst_layer_angle = inst ? inst.layer.getAngle() : 0;
		if (inst)
		{
			for (i = 0, len = active_effect_types.length; i < len; i++)
			{
				boxExtendHorizontal += glw.getProgramBoxExtendHorizontal(active_effect_types[i].shaderindex);
				boxExtendVertical += glw.getProgramBoxExtendVertical(active_effect_types[i].shaderindex);
			}
			var bbox = inst.bbox;
			screenleft = layer.layerToCanvas(bbox.left, bbox.top, true, true);
			screentop = layer.layerToCanvas(bbox.left, bbox.top, false, true);
			screenright = layer.layerToCanvas(bbox.right, bbox.bottom, true, true);
			screenbottom = layer.layerToCanvas(bbox.right, bbox.bottom, false, true);
			if (inst_layer_angle !== 0)
			{
				var screentrx = layer.layerToCanvas(bbox.right, bbox.top, true, true);
				var screentry = layer.layerToCanvas(bbox.right, bbox.top, false, true);
				var screenblx = layer.layerToCanvas(bbox.left, bbox.bottom, true, true);
				var screenbly = layer.layerToCanvas(bbox.left, bbox.bottom, false, true);
				temp = Math.min(screenleft, screenright, screentrx, screenblx);
				screenright = Math.max(screenleft, screenright, screentrx, screenblx);
				screenleft = temp;
				temp = Math.min(screentop, screenbottom, screentry, screenbly);
				screenbottom = Math.max(screentop, screenbottom, screentry, screenbly);
				screentop = temp;
			}
			screenleft -= boxExtendHorizontal;
			screentop -= boxExtendVertical;
			screenright += boxExtendHorizontal;
			screenbottom += boxExtendVertical;
			rcTex2.left = screenleft / windowWidth;
			rcTex2.top = 1 - screentop / windowHeight;
			rcTex2.right = screenright / windowWidth;
			rcTex2.bottom = 1 - screenbottom / windowHeight;
			clearleft = screenleft = cr.floor(screenleft);
			cleartop = screentop = cr.floor(screentop);
			clearright = screenright = cr.ceil(screenright);
			clearbottom = screenbottom = cr.ceil(screenbottom);
			clearleft -= boxExtendHorizontal;
			cleartop -= boxExtendVertical;
			clearright += boxExtendHorizontal;
			clearbottom += boxExtendVertical;
			if (screenleft < 0)					screenleft = 0;
			if (screentop < 0)					screentop = 0;
			if (screenright > windowWidth)		screenright = windowWidth;
			if (screenbottom > windowHeight)	screenbottom = windowHeight;
			if (clearleft < 0)					clearleft = 0;
			if (cleartop < 0)					cleartop = 0;
			if (clearright > windowWidth)		clearright = windowWidth;
			if (clearbottom > windowHeight)		clearbottom = windowHeight;
			rcTex.left = screenleft / windowWidth;
			rcTex.top = 1 - screentop / windowHeight;
			rcTex.right = screenright / windowWidth;
			rcTex.bottom = 1 - screenbottom / windowHeight;
		}
		else
		{
			rcTex.left = rcTex2.left = 0;
			rcTex.top = rcTex2.top = 0;
			rcTex.right = rcTex2.right = 1;
			rcTex.bottom = rcTex2.bottom = 1;
		}
		var pre_draw = (inst && (((inst.angle || inst_layer_angle) && glw.programUsesDest(active_effect_types[0].shaderindex)) || boxExtendHorizontal !== 0 || boxExtendVertical !== 0 || inst.opacity !== 1 || inst.type.plugin.must_predraw)) || (layer && !inst && layer.opacity !== 1);
		glw.setAlphaBlend();
		if (pre_draw)
		{
			if (!fx_tex[fx_index])
			{
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			if (fx_tex[fx_index].c2width !== windowWidth || fx_tex[fx_index].c2height !== windowHeight)
			{
				glw.deleteTexture(fx_tex[fx_index]);
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			glw.switchProgram(0);
			glw.setRenderingToTexture(fx_tex[fx_index]);
			h = clearbottom - cleartop;
			y = (windowHeight - cleartop) - h;
			glw.clearRect(clearleft, y, clearright - clearleft, h);
			if (inst)
			{
				inst.drawGL(glw);
			}
			else
			{
				glw.setTexture(this.runtime.layer_tex);
				glw.setOpacity(layer.opacity);
				glw.resetModelView();
				glw.translate(-halfw, -halfh);
				glw.updateModelView();
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
			}
			rcTex2.left = rcTex2.top = 0;
			rcTex2.right = rcTex2.bottom = 1;
			if (inst)
			{
				temp = rcTex.top;
				rcTex.top = rcTex.bottom;
				rcTex.bottom = temp;
			}
			fx_index = 1;
			other_fx_index = 0;
		}
		glw.setOpacity(1);
		var last = active_effect_types.length - 1;
		var post_draw = glw.programUsesCrossSampling(active_effect_types[last].shaderindex) ||
						(!layer && !inst && !this.runtime.fullscreenScalingQuality);
		var etindex = 0;
		for (i = 0, len = active_effect_types.length; i < len; i++)
		{
			if (!fx_tex[fx_index])
			{
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			if (fx_tex[fx_index].c2width !== windowWidth || fx_tex[fx_index].c2height !== windowHeight)
			{
				glw.deleteTexture(fx_tex[fx_index]);
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			glw.switchProgram(active_effect_types[i].shaderindex);
			etindex = active_effect_types[i].index;
			if (glw.programIsAnimated(active_effect_types[i].shaderindex))
				this.runtime.redraw = true;
			if (i == 0 && !pre_draw)
			{
				glw.setRenderingToTexture(fx_tex[fx_index]);
				h = clearbottom - cleartop;
				y = (windowHeight - cleartop) - h;
				glw.clearRect(clearleft, y, clearright - clearleft, h);
				if (inst)
				{
					glw.setProgramParameters(rendertarget,					// backTex
											 1.0 / inst.width,				// pixelWidth
											 1.0 / inst.height,				// pixelHeight
											 rcTex2.left, rcTex2.top,		// destStart
											 rcTex2.right, rcTex2.bottom,	// destEnd
											 layerScale,
											 layerAngle,
											 viewOriginLeft, viewOriginTop,
											 inst.effect_params[etindex]);	// fx params
					inst.drawGL(glw);
				}
				else
				{
					glw.setProgramParameters(rendertarget,					// backTex
											 1.0 / windowWidth,				// pixelWidth
											 1.0 / windowHeight,			// pixelHeight
											 0.0, 0.0,						// destStart
											 1.0, 1.0,						// destEnd
											 layerScale,
											 layerAngle,
											 viewOriginLeft, viewOriginTop,
											 layer ?						// fx params
												layer.effect_params[etindex] :
												this.effect_params[etindex]);
					glw.setTexture(layer ? this.runtime.layer_tex : this.runtime.layout_tex);
					glw.resetModelView();
					glw.translate(-halfw, -halfh);
					glw.updateModelView();
					glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
				}
				rcTex2.left = rcTex2.top = 0;
				rcTex2.right = rcTex2.bottom = 1;
				if (inst && !post_draw)
				{
					temp = screenbottom;
					screenbottom = screentop;
					screentop = temp;
				}
			}
			else
			{
				glw.setProgramParameters(rendertarget,						// backTex
										 1.0 / windowWidth,					// pixelWidth
										 1.0 / windowHeight,				// pixelHeight
										 rcTex2.left, rcTex2.top,			// destStart
										 rcTex2.right, rcTex2.bottom,		// destEnd
										 layerScale,
										 layerAngle,
										 viewOriginLeft, viewOriginTop,
										 inst ?								// fx params
											inst.effect_params[etindex] :
											layer ?
												layer.effect_params[etindex] :
												this.effect_params[etindex]);
				glw.setTexture(null);
				if (i === last && !post_draw)
				{
					if (inst)
						glw.setBlend(inst.srcBlend, inst.destBlend);
					else if (layer)
						glw.setBlend(layer.srcBlend, layer.destBlend);
					glw.setRenderingToTexture(rendertarget);
				}
				else
				{
					glw.setRenderingToTexture(fx_tex[fx_index]);
					h = clearbottom - cleartop;
					y = (windowHeight - cleartop) - h;
					glw.clearRect(clearleft, y, clearright - clearleft, h);
				}
				glw.setTexture(fx_tex[other_fx_index]);
				glw.resetModelView();
				glw.translate(-halfw, -halfh);
				glw.updateModelView();
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
				if (i === last && !post_draw)
					glw.setTexture(null);
			}
			fx_index = (fx_index === 0 ? 1 : 0);
			other_fx_index = (fx_index === 0 ? 1 : 0);		// will be opposite to fx_index since it was just assigned
		}
		if (post_draw)
		{
			glw.switchProgram(0);
			if (inst)
				glw.setBlend(inst.srcBlend, inst.destBlend);
			else if (layer)
				glw.setBlend(layer.srcBlend, layer.destBlend);
			else
			{
				if (!this.runtime.fullscreenScalingQuality)
				{
					glw.setSize(this.runtime.width, this.runtime.height);
					halfw = this.runtime.width / 2;
					halfh = this.runtime.height / 2;
					screenleft = 0;
					screentop = 0;
					screenright = this.runtime.width;
					screenbottom = this.runtime.height;
				}
			}
			glw.setRenderingToTexture(rendertarget);
			glw.setTexture(fx_tex[other_fx_index]);
			glw.resetModelView();
			glw.translate(-halfw, -halfh);
			glw.updateModelView();
			if (inst && active_effect_types.length === 1 && !pre_draw)
				glw.quadTex(screenleft, screentop, screenright, screentop, screenright, screenbottom, screenleft, screenbottom, rcTex);
			else
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
			glw.setTexture(null);
		}
	};
	Layout.prototype.getLayerBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			if (this.layers[i].sid === sid_)
				return this.layers[i];
		}
		return null;
	};
	Layout.prototype.saveToJSON = function ()
	{
		var i, len, layer, et;
		var o = {
			"sx": this.scrollX,
			"sy": this.scrollY,
			"s": this.scale,
			"a": this.angle,
			"w": this.width,
			"h": this.height,
			"fv": this.first_visit,			// added r127
			"persist": this.persist_data,
			"fx": [],
			"layers": {}
		};
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			o["fx"].push({"name": et.name, "active": et.active, "params": this.effect_params[et.index] });
		}
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			layer = this.layers[i];
			o["layers"][layer.sid.toString()] = layer.saveToJSON();
		}
		return o;
	};
	Layout.prototype.loadFromJSON = function (o)
	{
		var i, len, fx, p, layer;
		this.scrollX = o["sx"];
		this.scrollY = o["sy"];
		this.scale = o["s"];
		this.angle = o["a"];
		this.width = o["w"];
		this.height = o["h"];
		this.persist_data = o["persist"];
		if (typeof o["fv"] !== "undefined")
			this.first_visit = o["fv"];
		var ofx = o["fx"];
		for (i = 0, len = ofx.length; i < len; i++)
		{
			fx = this.getEffectByName(ofx[i]["name"]);
			if (!fx)
				continue;		// must've gone missing
			fx.active = ofx[i]["active"];
			this.effect_params[fx.index] = ofx[i]["params"];
		}
		this.updateActiveEffects();
		var olayers = o["layers"];
		for (p in olayers)
		{
			if (olayers.hasOwnProperty(p))
			{
				layer = this.getLayerBySid(parseInt(p, 10));
				if (!layer)
					continue;		// must've gone missing
				layer.loadFromJSON(olayers[p]);
			}
		}
	};
	cr.layout = Layout;
	function Layer(layout, m)
	{
		this.layout = layout;
		this.runtime = layout.runtime;
		this.instances = [];        // running instances
		this.scale = 1.0;
		this.angle = 0;
		this.disableAngle = false;
		this.tmprect = new cr.rect(0, 0, 0, 0);
		this.tmpquad = new cr.quad();
		this.viewLeft = 0;
		this.viewRight = 0;
		this.viewTop = 0;
		this.viewBottom = 0;
		this.zindices_stale = false;
		this.name = m[0];
		this.index = m[1];
		this.sid = m[2];
		this.visible = m[3];		// initially visible
		this.background_color = m[4];
		this.transparent = m[5];
		this.parallaxX = m[6];
		this.parallaxY = m[7];
		this.opacity = m[8];
		this.forceOwnTexture = m[9];
		this.zoomRate = m[10];
		this.blend_mode = m[11];
		this.effect_fallback = m[12];
		this.compositeOp = "source-over";
		this.srcBlend = 0;
		this.destBlend = 0;
		this.render_offscreen = false;
		var im = m[13];
		var i, len;
		this.initial_instances = [];
		for (i = 0, len = im.length; i < len; i++)
		{
			var inst = im[i];
			var type = this.runtime.types_by_index[inst[1]];
;
			if (!type.default_instance)
			{
				type.default_instance = inst;
				type.default_layerindex = this.index;
			}
			this.initial_instances.push(inst);
			if (this.layout.initial_types.indexOf(type) === -1)
				this.layout.initial_types.push(type);
		}
		this.effect_types = [];
		this.active_effect_types = [];
		this.effect_params = [];
		for (i = 0, len = m[14].length; i < len; i++)
		{
			this.effect_types.push({
				id: m[14][i][0],
				name: m[14][i][1],
				shaderindex: -1,
				active: true,
				index: i
			});
			this.effect_params.push(m[14][i][2].slice(0));
		}
		this.updateActiveEffects();
		this.rcTex = new cr.rect(0, 0, 1, 1);
		this.rcTex2 = new cr.rect(0, 0, 1, 1);
	};
	Layer.prototype.updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.active)
				this.active_effect_types.push(et);
		}
	};
	Layer.prototype.getEffectByName = function (name_)
	{
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.name === name_)
				return et;
		}
		return null;
	};
	Layer.prototype.createInitialInstances = function ()
	{
		var i, k, len, inst, initial_inst, type, keep, hasPersistBehavior;
		for (i = 0, k = 0, len = this.initial_instances.length; i < len; i++)
		{
			initial_inst = this.initial_instances[i];
			type = this.runtime.types_by_index[initial_inst[1]];
;
			hasPersistBehavior = this.runtime.typeHasPersistBehavior(type);
			keep = true;
			if (!hasPersistBehavior || this.layout.first_visit)
			{
				inst = this.runtime.createInstanceFromInit(initial_inst, this, true);
;
				created_instances.push(inst);
				if (inst.type.global)
					keep = false;
			}
			if (keep)
			{
				this.initial_instances[k] = this.initial_instances[i];
				k++;
			}
		}
		this.initial_instances.length = k;
		this.runtime.ClearDeathRow();		// flushes creation row so IIDs will be correct
		if (!this.runtime.glwrap && this.effect_types.length)	// no WebGL renderer and shaders used
			this.blend_mode = this.effect_fallback;				// use fallback blend mode
		this.compositeOp = cr.effectToCompositeOp(this.blend_mode);
		if (this.runtime.gl)
			cr.setGLBlend(this, this.blend_mode, this.runtime.gl);
	};
	Layer.prototype.updateZIndices = function ()
	{
		if (!this.zindices_stale)
			return;
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
;
;
			this.instances[i].zindex = i;
		}
		this.zindices_stale = false;
	};
	Layer.prototype.getScale = function (include_aspect)
	{
		return this.getNormalScale() * (this.runtime.fullscreenScalingQuality || include_aspect ? this.runtime.aspect_scale : 1);
	};
	Layer.prototype.getNormalScale = function ()
	{
		return ((this.scale * this.layout.scale) - 1) * this.zoomRate + 1;
	};
	Layer.prototype.getAngle = function ()
	{
		if (this.disableAngle)
			return 0;
		return cr.clamp_angle(this.layout.angle + this.angle);
	};
	Layer.prototype.draw = function (ctx)
	{
		this.render_offscreen = (this.forceOwnTexture || this.opacity !== 1.0 || this.blend_mode !== 0);
		var layer_canvas = this.runtime.canvas;
		var layer_ctx = ctx;
		var ctx_changed = false;
		if (this.render_offscreen)
		{
			if (!this.runtime.layer_canvas)
			{
				this.runtime.layer_canvas = document.createElement("canvas");
;
				layer_canvas = this.runtime.layer_canvas;
				layer_canvas.width = this.runtime.draw_width;
				layer_canvas.height = this.runtime.draw_height;
				this.runtime.layer_ctx = layer_canvas.getContext("2d");
;
				ctx_changed = true;
			}
			layer_canvas = this.runtime.layer_canvas;
			layer_ctx = this.runtime.layer_ctx;
			if (layer_canvas.width !== this.runtime.draw_width)
			{
				layer_canvas.width = this.runtime.draw_width;
				ctx_changed = true;
			}
			if (layer_canvas.height !== this.runtime.draw_height)
			{
				layer_canvas.height = this.runtime.draw_height;
				ctx_changed = true;
			}
			if (ctx_changed)
			{
				layer_ctx["webkitImageSmoothingEnabled"] = this.runtime.linearSampling;
				layer_ctx["mozImageSmoothingEnabled"] = this.runtime.linearSampling;
				layer_ctx["msImageSmoothingEnabled"] = this.runtime.linearSampling;
				layer_ctx["imageSmoothingEnabled"] = this.runtime.linearSampling;
			}
			if (this.transparent)
				layer_ctx.clearRect(0, 0, this.runtime.draw_width, this.runtime.draw_height);
		}
		layer_ctx.globalAlpha = 1;
		layer_ctx.globalCompositeOperation = "source-over";
		if (!this.transparent)
		{
			layer_ctx.fillStyle = "rgb(" + this.background_color[0] + "," + this.background_color[1] + "," + this.background_color[2] + ")";
			layer_ctx.fillRect(0, 0, this.runtime.draw_width, this.runtime.draw_height);
		}
		layer_ctx.save();
		this.disableAngle = true;
		var px = this.canvasToLayer(0, 0, true, true);
		var py = this.canvasToLayer(0, 0, false, true);
		this.disableAngle = false;
		if (this.runtime.pixel_rounding)
		{
			px = (px + 0.5) | 0;
			py = (py + 0.5) | 0;
		}
		this.rotateViewport(px, py, layer_ctx);
		var myscale = this.getScale();
		layer_ctx.scale(myscale, myscale);
		layer_ctx.translate(-px, -py);
		var i, len, inst, bbox;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			if (!inst.visible || inst.width === 0 || inst.height === 0)
				continue;
			inst.update_bbox();
			bbox = inst.bbox;
			if (bbox.right < this.viewLeft || bbox.bottom < this.viewTop || bbox.left > this.viewRight || bbox.top > this.viewBottom)
				continue;
			layer_ctx.globalCompositeOperation = inst.compositeOp;
			inst.draw(layer_ctx);
		}
		layer_ctx.restore();
		if (this.render_offscreen)
		{
			ctx.globalCompositeOperation = this.compositeOp;
			ctx.globalAlpha = this.opacity;
			ctx.drawImage(layer_canvas, 0, 0);
		}
	};
	Layer.prototype.rotateViewport = function (px, py, ctx)
	{
		var myscale = this.getScale();
		this.viewLeft = px;
		this.viewTop = py;
		this.viewRight = px + (this.runtime.draw_width * (1 / myscale));
		this.viewBottom = py + (this.runtime.draw_height * (1 / myscale));
		var myAngle = this.getAngle();
		if (myAngle !== 0)
		{
			if (ctx)
			{
				ctx.translate(this.runtime.draw_width / 2, this.runtime.draw_height / 2);
				ctx.rotate(-myAngle);
				ctx.translate(this.runtime.draw_width / -2, this.runtime.draw_height / -2);
			}
			this.tmprect.set(this.viewLeft, this.viewTop, this.viewRight, this.viewBottom);
			this.tmprect.offset((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
			this.tmpquad.set_from_rotated_rect(this.tmprect, myAngle);
			this.tmpquad.bounding_box(this.tmprect);
			this.tmprect.offset((this.viewLeft + this.viewRight) / 2, (this.viewTop + this.viewBottom) / 2);
			this.viewLeft = this.tmprect.left;
			this.viewTop = this.tmprect.top;
			this.viewRight = this.tmprect.right;
			this.viewBottom = this.tmprect.bottom;
		}
	}
	Layer.prototype.drawGL = function (glw)
	{
		var windowWidth = this.runtime.draw_width;
		var windowHeight = this.runtime.draw_height;
		var shaderindex = 0;
		var etindex = 0;
		this.render_offscreen = (this.forceOwnTexture || this.opacity !== 1.0 || this.active_effect_types.length > 0 || this.blend_mode !== 0);
		if (this.render_offscreen)
		{
			if (!this.runtime.layer_tex)
			{
				this.runtime.layer_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			if (this.runtime.layer_tex.c2width !== this.runtime.draw_width || this.runtime.layer_tex.c2height !== this.runtime.draw_height)
			{
				glw.deleteTexture(this.runtime.layer_tex);
				this.runtime.layer_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			glw.setRenderingToTexture(this.runtime.layer_tex);
			if (this.transparent)
				glw.clear(0, 0, 0, 0);
		}
		if (!this.transparent)
		{
			glw.clear(this.background_color[0] / 255, this.background_color[1] / 255, this.background_color[2] / 255, 1);
		}
		this.disableAngle = true;
		var px = this.canvasToLayer(0, 0, true, true);
		var py = this.canvasToLayer(0, 0, false, true);
		this.disableAngle = false;
		if (this.runtime.pixel_rounding)
		{
			px = (px + 0.5) | 0;
			py = (py + 0.5) | 0;
		}
		this.rotateViewport(px, py, null);
		var myscale = this.getScale();
		glw.resetModelView();
		glw.scale(myscale, myscale);
		glw.rotateZ(-this.getAngle());
		glw.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
		glw.updateModelView();
		var i, len, inst, bbox;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			if (!inst.visible || inst.width === 0 || inst.height === 0)
				continue;
			inst.update_bbox();
			bbox = inst.bbox;
			if (bbox.right < this.viewLeft || bbox.bottom < this.viewTop || bbox.left > this.viewRight || bbox.top > this.viewBottom)
				continue;
			if (inst.uses_shaders)
			{
				shaderindex = inst.active_effect_types[0].shaderindex;
				etindex = inst.active_effect_types[0].index;
				if (inst.active_effect_types.length === 1 && !glw.programUsesCrossSampling(shaderindex) &&
					!glw.programExtendsBox(shaderindex) && ((!inst.angle && !inst.layer.getAngle()) || !glw.programUsesDest(shaderindex)) &&
					inst.opacity === 1 && !inst.type.plugin.must_predraw)
				{
					glw.switchProgram(shaderindex);
					glw.setBlend(inst.srcBlend, inst.destBlend);
					if (glw.programIsAnimated(shaderindex))
						this.runtime.redraw = true;
					var destStartX = 0, destStartY = 0, destEndX = 0, destEndY = 0;
					if (glw.programUsesDest(shaderindex))
					{
						var bbox = inst.bbox;
						var screenleft = this.layerToCanvas(bbox.left, bbox.top, true, true);
						var screentop = this.layerToCanvas(bbox.left, bbox.top, false, true);
						var screenright = this.layerToCanvas(bbox.right, bbox.bottom, true, true);
						var screenbottom = this.layerToCanvas(bbox.right, bbox.bottom, false, true);
						destStartX = screenleft / windowWidth;
						destStartY = 1 - screentop / windowHeight;
						destEndX = screenright / windowWidth;
						destEndY = 1 - screenbottom / windowHeight;
					}
					glw.setProgramParameters(this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget(), // backTex
											 1.0 / inst.width,			// pixelWidth
											 1.0 / inst.height,			// pixelHeight
											 destStartX, destStartY,
											 destEndX, destEndY,
											 this.getScale(),
											 this.getAngle(),
											 this.viewLeft, this.viewTop,
											 inst.effect_params[etindex]);
					inst.drawGL(glw);
				}
				else
				{
					this.layout.renderEffectChain(glw, this, inst, this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget());
					glw.resetModelView();
					glw.scale(myscale, myscale);
					glw.rotateZ(-this.getAngle());
					glw.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
					glw.updateModelView();
				}
			}
			else
			{
				glw.switchProgram(0);		// un-set any previously set shader
				glw.setBlend(inst.srcBlend, inst.destBlend);
				inst.drawGL(glw);
			}
		}
		if (this.render_offscreen)
		{
			shaderindex = this.active_effect_types.length ? this.active_effect_types[0].shaderindex : 0;
			etindex = this.active_effect_types.length ? this.active_effect_types[0].index : 0;
			if (this.active_effect_types.length === 0 || (this.active_effect_types.length === 1 &&
				!glw.programUsesCrossSampling(shaderindex) && this.opacity === 1))
			{
				if (this.active_effect_types.length === 1)
				{
					glw.switchProgram(shaderindex);
					glw.setProgramParameters(this.layout.getRenderTarget(),		// backTex
											 1.0 / this.runtime.draw_width,		// pixelWidth
											 1.0 / this.runtime.draw_height,	// pixelHeight
											 0.0, 0.0,							// destStart
											 1.0, 1.0,							// destEnd
											 this.getScale(),					// layerScale
											 this.getAngle(),
											 this.viewLeft, this.viewTop,
											 this.effect_params[etindex]);		// fx parameters
					if (glw.programIsAnimated(shaderindex))
						this.runtime.redraw = true;
				}
				else
					glw.switchProgram(0);
				glw.setRenderingToTexture(this.layout.getRenderTarget());
				glw.setOpacity(this.opacity);
				glw.setTexture(this.runtime.layer_tex);
				glw.setBlend(this.srcBlend, this.destBlend);
				glw.resetModelView();
				glw.updateModelView();
				var halfw = this.runtime.draw_width / 2;
				var halfh = this.runtime.draw_height / 2;
				glw.quad(-halfw, halfh, halfw, halfh, halfw, -halfh, -halfw, -halfh);
				glw.setTexture(null);
			}
			else
			{
				this.layout.renderEffectChain(glw, this, null, this.layout.getRenderTarget());
			}
		}
	};
	Layer.prototype.canvasToLayer = function (ptx, pty, getx, using_draw_area)
	{
		var multiplier = this.runtime.devicePixelRatio;
		if (this.runtime.isRetina)
		{
			ptx *= multiplier;
			pty *= multiplier;
		}
		var ox = this.runtime.parallax_x_origin;
		var oy = this.runtime.parallax_y_origin;
		var x = ((this.layout.scrollX - ox) * this.parallaxX) + ox;
		var y = ((this.layout.scrollY - oy) * this.parallaxY) + oy;
		var invScale = 1 / this.getScale(!using_draw_area);
		if (using_draw_area)
		{
			x -= (this.runtime.draw_width * invScale) / 2;
			y -= (this.runtime.draw_height * invScale) / 2;
		}
		else
		{
			x -= (this.runtime.width * invScale) / 2;
			y -= (this.runtime.height * invScale) / 2;
		}
		x += ptx * invScale;
		y += pty * invScale;
		var a = this.getAngle();
		if (a !== 0)
		{
			x -= this.layout.scrollX;
			y -= this.layout.scrollY;
			var cosa = Math.cos(a);
			var sina = Math.sin(a);
			var x_temp = (x * cosa) - (y * sina);
			y = (y * cosa) + (x * sina);
			x = x_temp;
			x += this.layout.scrollX;
			y += this.layout.scrollY;
		}
		return getx ? x : y;
	};
	Layer.prototype.layerToCanvas = function (ptx, pty, getx, using_draw_area)
	{
		var a = this.getAngle();
		if (a !== 0)
		{
			ptx -= this.layout.scrollX;
			pty -= this.layout.scrollY;
			var cosa = Math.cos(-a);
			var sina = Math.sin(-a);
			var x_temp = (ptx * cosa) - (pty * sina);
			pty = (pty * cosa) + (ptx * sina);
			ptx = x_temp;
			ptx += this.layout.scrollX;
			pty += this.layout.scrollY;
		}
		var ox = this.runtime.parallax_x_origin;
		var oy = this.runtime.parallax_y_origin;
		var x = ((this.layout.scrollX - ox) * this.parallaxX) + ox;
		var y = ((this.layout.scrollY - oy) * this.parallaxY) + oy;
		var invScale = 1 / this.getScale(!using_draw_area);
		if (using_draw_area)
		{
			x -= (this.runtime.draw_width * invScale) / 2;
			y -= (this.runtime.draw_height * invScale) / 2;
		}
		else
		{
			x -= (this.runtime.width * invScale) / 2;
			y -= (this.runtime.height * invScale) / 2;
		}
		x = (ptx - x) / invScale;
		y = (pty - y) / invScale;
		var multiplier = this.runtime.devicePixelRatio;
		if (this.runtime.isRetina && !using_draw_area)
		{
			x /= multiplier;
			y /= multiplier;
		}
		return getx ? x : y;
	};
	Layer.prototype.rotatePt = function (x_, y_, getx)
	{
		if (this.getAngle() === 0)
			return getx ? x_ : y_;
		var nx = this.layerToCanvas(x_, y_, true);
		var ny = this.layerToCanvas(x_, y_, false);
		this.disableAngle = true;
		var px = this.canvasToLayer(nx, ny, true);
		var py = this.canvasToLayer(nx, ny, true);
		this.disableAngle = false;
		return getx ? px : py;
	};
	Layer.prototype.saveToJSON = function ()
	{
		var i, len, et;
		var o = {
			"s": this.scale,
			"a": this.angle,
			"vl": this.viewLeft,
			"vt": this.viewTop,
			"vr": this.viewRight,
			"vb": this.viewBottom,
			"v": this.visible,
			"bc": this.background_color,
			"t": this.transparent,
			"px": this.parallaxX,
			"py": this.parallaxY,
			"o": this.opacity,
			"zr": this.zoomRate,
			"fx": [],
			"instances": []
		};
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			o["fx"].push({"name": et.name, "active": et.active, "params": this.effect_params[et.index] });
		}
		return o;
	};
	function sortInstanceByZIndex(a, b)
	{
		return a.zindex - b.zindex;
	};
	Layer.prototype.loadFromJSON = function (o)
	{
		var i, len, p, inst, fx;
		this.scale = o["s"];
		this.angle = o["a"];
		this.viewLeft = o["vl"];
		this.viewTop = o["vt"];
		this.viewRight = o["vr"];
		this.viewBottom = o["vb"];
		this.visible = o["v"];
		this.background_color = o["bc"];
		this.transparent = o["t"];
		this.parallaxX = o["px"];
		this.parallaxY = o["py"];
		this.opacity = o["o"];
		this.zoomRate = o["zr"];
		var ofx = o["fx"];
		for (i = 0, len = ofx.length; i < len; i++)
		{
			fx = this.getEffectByName(ofx[i]["name"]);
			if (!fx)
				continue;		// must've gone missing
			fx.active = ofx[i]["active"];
			this.effect_params[fx.index] = ofx[i]["params"];
		}
		this.updateActiveEffects();
		this.instances.sort(sortInstanceByZIndex);
		this.zindices_stale = true;
	};
	cr.layer = Layer;
}());
;
(function()
{
	var allUniqueSolModifiers = [];
	function testSolsMatch(arr1, arr2)
	{
		var i, len = arr1.length;
		switch (len) {
		case 0:
			return true;
		case 1:
			return arr1[0] === arr2[0];
		case 2:
			return arr1[0] === arr2[0] && arr1[1] === arr2[1];
		default:
			for (i = 0; i < len; i++)
			{
				if (arr1[i] !== arr2[i])
					return false;
			}
			return true;
		}
	};
	function solArraySorter(t1, t2)
	{
		return t1.index - t2.index;
	};
	function findMatchingSolModifier(arr)
	{
		var i, len, u, temp, subarr;
		if (arr.length === 2)
		{
			if (arr[0].index > arr[1].index)
			{
				temp = arr[0];
				arr[0] = arr[1];
				arr[1] = temp;
			}
		}
		else if (arr.length > 2)
			arr.sort(solArraySorter);		// so testSolsMatch compares in same order
		if (arr.length >= allUniqueSolModifiers.length)
			allUniqueSolModifiers.length = arr.length + 1;
		if (!allUniqueSolModifiers[arr.length])
			allUniqueSolModifiers[arr.length] = [];
		subarr = allUniqueSolModifiers[arr.length];
		for (i = 0, len = subarr.length; i < len; i++)
		{
			u = subarr[i];
			if (testSolsMatch(arr, u))
				return u;
		}
		subarr.push(arr);
		return arr;
	};
	function EventSheet(runtime, m)
	{
		this.runtime = runtime;
		this.triggers = {};
		this.fasttriggers = {};
        this.hasRun = false;
        this.includes = new cr.ObjectSet(); 	// all event sheets included by this sheet, at first-level indirection only
		this.deep_includes = [];				// all includes from this sheet recursively, in trigger order
		this.already_included_sheets = [];		// used while building deep_includes
		this.name = m[0];
		var em = m[1];		// events model
		this.events = [];       // triggers won't make it to this array
		var i, len;
		for (i = 0, len = em.length; i < len; i++)
			this.init_event(em[i], null, this.events);
	};
    EventSheet.prototype.toString = function ()
    {
        return this.name;
    };
	EventSheet.prototype.init_event = function (m, parent, nontriggers)
	{
		switch (m[0]) {
		case 0:	// event block
		{
			var block = new cr.eventblock(this, parent, m);
			cr.seal(block);
			if (block.orblock)
			{
				nontriggers.push(block);
				var i, len;
				for (i = 0, len = block.conditions.length; i < len; i++)
				{
					if (block.conditions[i].trigger)
						this.init_trigger(block, i);
				}
			}
			else
			{
				if (block.is_trigger())
					this.init_trigger(block, 0);
				else
					nontriggers.push(block);
			}
			break;
		}
		case 1: // variable
		{
			var v = new cr.eventvariable(this, parent, m);
			cr.seal(v);
			nontriggers.push(v);
			break;
		}
        case 2:	// include
        {
            var inc = new cr.eventinclude(this, parent, m);
			cr.seal(inc);
            nontriggers.push(inc);
			break;
        }
		default:
;
		}
	};
	EventSheet.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.events.length; i < len; i++)
		{
			this.events[i].postInit(i < len - 1 && this.events[i + 1].is_else_block);
		}
	};
	EventSheet.prototype.updateDeepIncludes = function ()
	{
		this.deep_includes.length = 0;
		this.already_included_sheets.length = 0;
		this.addDeepIncludes(this);
		this.already_included_sheets.length = 0;
	};
	EventSheet.prototype.addDeepIncludes = function (root_sheet)
	{
		var i, len, inc, sheet;
		var deep_includes = root_sheet.deep_includes;
		var already_included_sheets = root_sheet.already_included_sheets;
		var arr = this.includes.valuesRef();
		for (i = 0, len = arr.length; i < len; ++i)
		{
			inc = arr[i];
			sheet = inc.include_sheet;
			if (!inc.isActive() || root_sheet === sheet || already_included_sheets.indexOf(sheet) > -1)
				continue;
			already_included_sheets.push(sheet);
			sheet.addDeepIncludes(root_sheet);
			deep_includes.push(sheet);
		}
	};
	EventSheet.prototype.run = function (from_include)
	{
		if (!this.runtime.resuming_breakpoint)
		{
			this.hasRun = true;
			if (!from_include)
				this.runtime.isRunningEvents = true;
		}
		var i, len;
		for (i = 0, len = this.events.length; i < len; i++)
		{
			var ev = this.events[i];
			ev.run();
				this.runtime.clearSol(ev.solModifiers);
				if (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length)
					this.runtime.ClearDeathRow();
		}
			if (!from_include)
				this.runtime.isRunningEvents = false;
	};
	function isPerformanceSensitiveTrigger(method)
	{
		if (cr.plugins_.Sprite && method === cr.plugins_.Sprite.prototype.cnds.OnFrameChanged)
		{
			return true;
		}
		return false;
	};
	EventSheet.prototype.init_trigger = function (trig, index)
	{
		if (!trig.orblock)
			this.runtime.triggers_to_postinit.push(trig);	// needs to be postInit'd later
		var i, len;
		var cnd = trig.conditions[index];
		var type_name;
		if (cnd.type)
			type_name = cnd.type.name;
		else
			type_name = "system";
		var fasttrigger = cnd.fasttrigger;
		var triggers = (fasttrigger ? this.fasttriggers : this.triggers);
		if (!triggers[type_name])
			triggers[type_name] = [];
		var obj_entry = triggers[type_name];
		var method = cnd.func;
		if (fasttrigger)
		{
			if (!cnd.parameters.length)				// no parameters
				return;
			var firstparam = cnd.parameters[0];
			if (firstparam.type !== 1 ||			// not a string param
				firstparam.expression.type !== 2)	// not a string literal node
			{
				return;
			}
			var fastevs;
			var firstvalue = firstparam.expression.value.toLowerCase();
			var i, len;
			for (i = 0, len = obj_entry.length; i < len; i++)
			{
				if (obj_entry[i].method == method)
				{
					fastevs = obj_entry[i].evs;
					if (!fastevs[firstvalue])
						fastevs[firstvalue] = [[trig, index]];
					else
						fastevs[firstvalue].push([trig, index]);
					return;
				}
			}
			fastevs = {};
			fastevs[firstvalue] = [[trig, index]];
			obj_entry.push({ method: method, evs: fastevs });
		}
		else
		{
			for (i = 0, len = obj_entry.length; i < len; i++)
			{
				if (obj_entry[i].method == method)
				{
					obj_entry[i].evs.push([trig, index]);
					return;
				}
			}
			if (isPerformanceSensitiveTrigger(method))
				obj_entry.unshift({ method: method, evs: [[trig, index]]});
			else
				obj_entry.push({ method: method, evs: [[trig, index]]});
		}
	};
	cr.eventsheet = EventSheet;
	function Selection(type)
	{
		this.type = type;
		this.instances = [];        // subset of picked instances
		this.else_instances = [];	// subset of unpicked instances
		this.select_all = true;
	};
	Selection.prototype.hasObjects = function ()
	{
		if (this.select_all)
			return this.type.instances.length;
		else
			return this.instances.length;
	};
	Selection.prototype.getObjects = function ()
	{
		if (this.select_all)
			return this.type.instances;
		else
			return this.instances;
	};
	/*
	Selection.prototype.ensure_picked = function (inst, skip_siblings)
	{
		var i, len;
		var orblock = inst.runtime.getCurrentEventStack().current_event.orblock;
		if (this.select_all)
		{
			this.select_all = false;
			if (orblock)
			{
				cr.shallowAssignArray(this.else_instances, inst.type.instances);
				cr.arrayFindRemove(this.else_instances, inst);
			}
			this.instances.length = 1;
			this.instances[0] = inst;
		}
		else
		{
			if (orblock)
			{
				i = this.else_instances.indexOf(inst);
				if (i !== -1)
				{
					this.instances.push(this.else_instances[i]);
					this.else_instances.splice(i, 1);
				}
			}
			else
			{
				if (this.instances.indexOf(inst) === -1)
					this.instances.push(inst);
			}
		}
		if (!skip_siblings)
		{
		}
	};
	*/
	Selection.prototype.pick_one = function (inst)
	{
		if (!inst)
			return;
		if (inst.runtime.getCurrentEventStack().current_event.orblock)
		{
			if (this.select_all)
			{
				this.instances.length = 0;
				cr.shallowAssignArray(this.else_instances, inst.type.instances);
				this.select_all = false;
			}
			var i = this.else_instances.indexOf(inst);
			if (i !== -1)
			{
				this.instances.push(this.else_instances[i]);
				this.else_instances.splice(i, 1);
			}
		}
		else
		{
			this.select_all = false;
			this.instances.length = 1;
			this.instances[0] = inst;
		}
	};
	cr.selection = Selection;
	function EventBlock(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.solModifiersIncludingParents = [];
		this.solWriterAfterCnds = false;	// block does not change SOL after running its conditions
		this.group = false;					// is group of events
		this.initially_activated = false;	// if a group, is active on startup
		this.toplevelevent = false;			// is an event block parented only by a top-level group
		this.toplevelgroup = false;			// is parented only by other groups or is top-level (i.e. not in a subevent)
		this.has_else_block = false;		// is followed by else
;
		this.conditions = [];
		this.actions = [];
		this.subevents = [];
		this.group_name = "";
		this.group = false;
		this.initially_activated = false;
		this.group_active = false;
		this.contained_includes = null;
        if (m[1])
        {
			this.group_name = m[1][1].toLowerCase();
			this.group = true;
			this.initially_activated = !!m[1][0];
			this.contained_includes = [];
			this.group_active = this.initially_activated;
			this.runtime.allGroups.push(this);
            this.runtime.groups_by_name[this.group_name] = this;
        }
		this.orblock = m[2];
		this.sid = m[4];
		if (!this.group)
			this.runtime.blocksBySid[this.sid.toString()] = this;
		var i, len;
		var cm = m[5];
		for (i = 0, len = cm.length; i < len; i++)
		{
			var cnd = new cr.condition(this, cm[i]);
			cnd.index = i;
			cr.seal(cnd);
			this.conditions.push(cnd);
			/*
			if (cnd.is_logical())
				this.is_logical = true;
			if (cnd.type && !cnd.type.plugin.singleglobal && this.cndReferences.indexOf(cnd.type) === -1)
				this.cndReferences.push(cnd.type);
			*/
			this.addSolModifier(cnd.type);
		}
		var am = m[6];
		for (i = 0, len = am.length; i < len; i++)
		{
			var act = new cr.action(this, am[i]);
			act.index = i;
			cr.seal(act);
			this.actions.push(act);
		}
		if (m.length === 8)
		{
			var em = m[7];
			for (i = 0, len = em.length; i < len; i++)
				this.sheet.init_event(em[i], this, this.subevents);
		}
		this.is_else_block = false;
		if (this.conditions.length)
		{
			this.is_else_block = (this.conditions[0].type == null && this.conditions[0].func == cr.system_object.prototype.cnds.Else);
		}
	};
	window["_c2hh_"] = "260C350D54AE07550B2690624EE86ED06E061DF1";
	EventBlock.prototype.postInit = function (hasElse/*, prevBlock_*/)
	{
		var i, len;
		var p = this.parent;
		if (this.group)
		{
			this.toplevelgroup = true;
			while (p)
			{
				if (!p.group)
				{
					this.toplevelgroup = false;
					break;
				}
				p = p.parent;
			}
		}
		this.toplevelevent = !this.is_trigger() && (!this.parent || (this.parent.group && this.parent.toplevelgroup));
		this.has_else_block = !!hasElse;
		this.solModifiersIncludingParents = this.solModifiers.slice(0);
		p = this.parent;
		while (p)
		{
			for (i = 0, len = p.solModifiers.length; i < len; i++)
				this.addParentSolModifier(p.solModifiers[i]);
			p = p.parent;
		}
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
		this.solModifiersIncludingParents = findMatchingSolModifier(this.solModifiersIncludingParents);
		var i, len/*, s*/;
		for (i = 0, len = this.conditions.length; i < len; i++)
			this.conditions[i].postInit();
		for (i = 0, len = this.actions.length; i < len; i++)
			this.actions[i].postInit();
		for (i = 0, len = this.subevents.length; i < len; i++)
		{
			this.subevents[i].postInit(i < len - 1 && this.subevents[i + 1].is_else_block);
		}
		/*
		if (this.is_else_block && this.prev_block)
		{
			for (i = 0, len = this.prev_block.solModifiers.length; i < len; i++)
			{
				s = this.prev_block.solModifiers[i];
				if (this.solModifiers.indexOf(s) === -1)
					this.solModifiers.push(s);
			}
		}
		*/
	};
	EventBlock.prototype.setGroupActive = function (a)
	{
		if (this.group_active === !!a)
			return;		// same state
		this.group_active = !!a;
		var i, len;
		for (i = 0, len = this.contained_includes.length; i < len; ++i)
		{
			this.contained_includes[i].updateActive();
		}
		if (len > 0 && this.runtime.running_layout.event_sheet)
			this.runtime.running_layout.event_sheet.updateDeepIncludes();
	};
	function addSolModifierToList(type, arr)
	{
		var i, len, t;
		if (!type)
			return;
		if (arr.indexOf(type) === -1)
			arr.push(type);
		if (type.is_contained)
		{
			for (i = 0, len = type.container.length; i < len; i++)
			{
				t = type.container[i];
				if (type === t)
					continue;		// already handled
				if (arr.indexOf(t) === -1)
					arr.push(t);
			}
		}
	};
	EventBlock.prototype.addSolModifier = function (type)
	{
		addSolModifierToList(type, this.solModifiers);
	};
	EventBlock.prototype.addParentSolModifier = function (type)
	{
		addSolModifierToList(type, this.solModifiersIncludingParents);
	};
	EventBlock.prototype.setSolWriterAfterCnds = function ()
	{
		this.solWriterAfterCnds = true;
		if (this.parent)
			this.parent.setSolWriterAfterCnds();
	};
	EventBlock.prototype.is_trigger = function ()
	{
		if (!this.conditions.length)    // no conditions
			return false;
		else
			return this.conditions[0].trigger;
	};
	EventBlock.prototype.run = function ()
	{
		var i, len, any_true = false, cnd_result;
		var runtime = this.runtime;
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		var conditions = this.conditions;
			if (!this.is_else_block)
				evinfo.else_branch_ran = false;
		if (this.orblock)
		{
			if (conditions.length === 0)
				any_true = true;		// be sure to run if empty block
				evinfo.cndindex = 0
			for (len = conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (conditions[evinfo.cndindex].trigger)		// skip triggers when running OR block
					continue;
				cnd_result = conditions[evinfo.cndindex].run();
				if (cnd_result)			// make sure all conditions run and run if any were true
					any_true = true;
			}
			evinfo.last_event_true = any_true;
			if (any_true)
				this.run_actions_and_subevents();
		}
		else
		{
				evinfo.cndindex = 0
			for (len = conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				cnd_result = conditions[evinfo.cndindex].run();
				if (!cnd_result)    // condition failed
				{
					evinfo.last_event_true = false;
					if (this.toplevelevent && (!runtime.deathRow.isEmpty() || runtime.createRow.length))
						runtime.ClearDeathRow();
					return;		// bail out now
				}
			}
			evinfo.last_event_true = true;
			this.run_actions_and_subevents();
		}
		this.end_run(evinfo);
	};
	EventBlock.prototype.end_run = function (evinfo)
	{
		if (evinfo.last_event_true && this.has_else_block)
			evinfo.else_branch_ran = true;
		if (this.toplevelevent && (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length))
			this.runtime.ClearDeathRow();
	};
	EventBlock.prototype.run_orblocktrigger = function (index)
	{
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		if (this.conditions[index].run())
		{
			this.run_actions_and_subevents();
			this.runtime.getCurrentEventStack().last_event_true = true;
		}
	};
	EventBlock.prototype.run_actions_and_subevents = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		var len;
		for (evinfo.actindex = 0, len = this.actions.length; evinfo.actindex < len; evinfo.actindex++)
		{
			if (this.actions[evinfo.actindex].run())
				return;
		}
		this.run_subevents();
	};
	EventBlock.prototype.resume_actions_and_subevents = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		var len;
		for (len = this.actions.length; evinfo.actindex < len; evinfo.actindex++)
		{
			if (this.actions[evinfo.actindex].run())
				return;
		}
		this.run_subevents();
	};
	EventBlock.prototype.run_subevents = function ()
	{
		if (!this.subevents.length)
			return;
		var i, len, subev, pushpop/*, skipped_pop = false, pop_modifiers = null*/;
		var last = this.subevents.length - 1;
			this.runtime.pushEventStack(this);
		if (this.solWriterAfterCnds)
		{
			for (i = 0, len = this.subevents.length; i < len; i++)
			{
				subev = this.subevents[i];
					pushpop = (!this.toplevelgroup || (!this.group && i < last));
					if (pushpop)
						this.runtime.pushCopySol(subev.solModifiers);
				subev.run();
					if (pushpop)
						this.runtime.popSol(subev.solModifiers);
					else
						this.runtime.clearSol(subev.solModifiers);
			}
		}
		else
		{
			for (i = 0, len = this.subevents.length; i < len; i++)
			{
				this.subevents[i].run();
			}
		}
			this.runtime.popEventStack();
	};
	EventBlock.prototype.run_pretrigger = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		var any_true = false;
		var i, len;
		for (evinfo.cndindex = 0, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
		{
;
			if (this.conditions[evinfo.cndindex].run())
				any_true = true;
			else if (!this.orblock)			// condition failed (let OR blocks run all conditions anyway)
				return false;               // bail out
		}
		return this.orblock ? any_true : true;
	};
	EventBlock.prototype.retrigger = function ()
	{
		this.runtime.execcount++;
		var prevcndindex = this.runtime.getCurrentEventStack().cndindex;
		var len;
		var evinfo = this.runtime.pushEventStack(this);
		if (!this.orblock)
		{
			for (evinfo.cndindex = prevcndindex + 1, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (!this.conditions[evinfo.cndindex].run())    // condition failed
				{
					this.runtime.popEventStack();               // moving up level of recursion
					return false;                               // bail out
				}
			}
		}
		this.run_actions_and_subevents();
		this.runtime.popEventStack();
		return true;		// ran an iteration
	};
	EventBlock.prototype.isFirstConditionOfType = function (cnd)
	{
		var cndindex = cnd.index;
		if (cndindex === 0)
			return true;
		--cndindex;
		for ( ; cndindex >= 0; --cndindex)
		{
			if (this.conditions[cndindex].type === cnd.type)
				return false;
		}
		return true;
	};
	cr.eventblock = EventBlock;
	function Condition(block, m)
	{
		this.block = block;
		this.sheet = block.sheet;
		this.runtime = block.runtime;
		this.parameters = [];
		this.results = [];
		this.extra = {};		// for plugins to stow away some custom info
		this.index = -1;
		this.anyParamVariesPerInstance = false;
		this.func = m[1];
;
		this.trigger = (m[3] > 0);
		this.fasttrigger = (m[3] === 2);
		this.looping = m[4];
		this.inverted = m[5];
		this.isstatic = m[6];
		this.sid = m[7];
		this.runtime.cndsBySid[this.sid.toString()] = this;
		if (m[0] === -1)		// system object
		{
			this.type = null;
			this.run = this.run_system;
			this.behaviortype = null;
			this.beh_index = -1;
		}
		else
		{
			this.type = this.runtime.types_by_index[m[0]];
;
			if (this.isstatic)
				this.run = this.run_static;
			else
				this.run = this.run_object;
			if (m[2])
			{
				this.behaviortype = this.type.getBehaviorByName(m[2]);
;
				this.beh_index = this.type.getBehaviorIndexByName(m[2]);
;
			}
			else
			{
				this.behaviortype = null;
				this.beh_index = -1;
			}
			if (this.block.parent)
				this.block.parent.setSolWriterAfterCnds();
		}
		if (this.fasttrigger)
			this.run = this.run_true;
		if (m.length === 10)
		{
			var i, len;
			var em = m[9];
			for (i = 0, len = em.length; i < len; i++)
			{
				var param = new cr.parameter(this, em[i]);
				cr.seal(param);
				this.parameters.push(param);
			}
			this.results.length = em.length;
		}
	};
	Condition.prototype.postInit = function ()
	{
		var i, len, p;
		for (i = 0, len = this.parameters.length; i < len; i++)
		{
			p = this.parameters[i];
			p.postInit();
			if (p.variesPerInstance)
				this.anyParamVariesPerInstance = true;
		}
	};
	/*
	Condition.prototype.is_logical = function ()
	{
		return !this.type || this.type.plugin.singleglobal;
	};
	*/
	Condition.prototype.run_true = function ()
	{
		return true;
	};
	Condition.prototype.run_system = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		return cr.xor(this.func.apply(this.runtime.system, this.results), this.inverted);
	};
	Condition.prototype.run_static = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		var ret = this.func.apply(this.behaviortype ? this.behaviortype : this.type, this.results);
		this.type.applySolToContainer();
		return ret;
	};
	Condition.prototype.run_object = function ()
	{
		var i, j, k, leni, lenj, p, ret, met, inst, s, sol2;
		var type = this.type;
		var sol = type.getCurrentSol();
		var is_orblock = this.block.orblock && !this.trigger;		// triggers in OR blocks need to work normally
		var offset = 0;
		var is_contained = type.is_contained;
		var is_family = type.is_family;
		var family_index = type.family_index;
		var beh_index = this.beh_index;
		var is_beh = (beh_index > -1);
		var params_vary = this.anyParamVariesPerInstance;
		var parameters = this.parameters;
		var results = this.results;
		var inverted = this.inverted;
		var func = this.func;
		var arr, container;
		if (params_vary)
		{
			for (j = 0, lenj = parameters.length; j < lenj; ++j)
			{
				p = parameters[j];
				if (!p.variesPerInstance)
					results[j] = p.get(0);
			}
		}
		else
		{
			for (j = 0, lenj = parameters.length; j < lenj; ++j)
				results[j] = parameters[j].get(0);
		}
		if (sol.select_all) {
			sol.instances.length = 0;       // clear contents
			sol.else_instances.length = 0;
			arr = type.instances;
			for (i = 0, leni = arr.length; i < leni; ++i)
			{
				inst = arr[i];
;
				if (params_vary)
				{
					for (j = 0, lenj = parameters.length; j < lenj; ++j)
					{
						p = parameters[j];
						if (p.variesPerInstance)
							results[j] = p.get(i);        // default SOL index is current object
					}
				}
				if (is_beh)
				{
					offset = 0;
					if (is_family)
					{
						offset = inst.type.family_beh_map[family_index];
					}
					ret = func.apply(inst.behavior_insts[beh_index + offset], results);
				}
				else
					ret = func.apply(inst, results);
				met = cr.xor(ret, inverted);
				if (met)
					sol.instances.push(inst);
				else if (is_orblock)					// in OR blocks, keep the instances not meeting the condition for subsequent testing
					sol.else_instances.push(inst);
			}
			if (type.finish)
				type.finish(true);
			sol.select_all = false;
			type.applySolToContainer();
			return sol.hasObjects();
		}
		else {
			k = 0;
			var using_else_instances = (is_orblock && !this.block.isFirstConditionOfType(this));
			arr = (using_else_instances ? sol.else_instances : sol.instances);
			var any_true = false;
			for (i = 0, leni = arr.length; i < leni; ++i)
			{
				inst = arr[i];
;
				if (params_vary)
				{
					for (j = 0, lenj = parameters.length; j < lenj; ++j)
					{
						p = parameters[j];
						if (p.variesPerInstance)
							results[j] = p.get(i);        // default SOL index is current object
					}
				}
				if (is_beh)
				{
					offset = 0;
					if (is_family)
					{
						offset = inst.type.family_beh_map[family_index];
					}
					ret = func.apply(inst.behavior_insts[beh_index + offset], results);
				}
				else
					ret = func.apply(inst, results);
				if (cr.xor(ret, inverted))
				{
					any_true = true;
					if (using_else_instances)
					{
						sol.instances.push(inst);
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().instances.push(s);
							}
						}
					}
					else
					{
						arr[k] = inst;
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().instances[k] = s;
							}
						}
						k++;
					}
				}
				else
				{
					if (using_else_instances)
					{
						arr[k] = inst;
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().else_instances[k] = s;
							}
						}
						k++;
					}
					else if (is_orblock)
					{
						sol.else_instances.push(inst);
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().else_instances.push(s);
							}
						}
					}
				}
			}
			arr.length = k;
			if (is_contained)
			{
				container = type.container;
				for (i = 0, leni = container.length; i < leni; i++)
				{
					sol2 = container[i].getCurrentSol();
					if (using_else_instances)
						sol2.else_instances.length = k;
					else
						sol2.instances.length = k;
				}
			}
			var pick_in_finish = any_true;		// don't pick in finish() if we're only doing the logic test below
			if (using_else_instances && !any_true)
			{
				for (i = 0, leni = sol.instances.length; i < leni; i++)
				{
					inst = sol.instances[i];
					if (params_vary)
					{
						for (j = 0, lenj = parameters.length; j < lenj; j++)
						{
							p = parameters[j];
							if (p.variesPerInstance)
								results[j] = p.get(i);
						}
					}
					if (is_beh)
						ret = func.apply(inst.behavior_insts[beh_index], results);
					else
						ret = func.apply(inst, results);
					if (cr.xor(ret, inverted))
					{
						any_true = true;
						break;		// got our flag, don't need to test any more
					}
				}
			}
			if (type.finish)
				type.finish(pick_in_finish || is_orblock);
			return is_orblock ? any_true : sol.hasObjects();
		}
	};
	cr.condition = Condition;
	function Action(block, m)
	{
		this.block = block;
		this.sheet = block.sheet;
		this.runtime = block.runtime;
		this.parameters = [];
		this.results = [];
		this.extra = {};		// for plugins to stow away some custom info
		this.index = -1;
		this.anyParamVariesPerInstance = false;
		this.func = m[1];
;
		if (m[0] === -1)	// system
		{
			this.type = null;
			this.run = this.run_system;
			this.behaviortype = null;
			this.beh_index = -1;
		}
		else
		{
			this.type = this.runtime.types_by_index[m[0]];
;
			this.run = this.run_object;
			if (m[2])
			{
				this.behaviortype = this.type.getBehaviorByName(m[2]);
;
				this.beh_index = this.type.getBehaviorIndexByName(m[2]);
;
			}
			else
			{
				this.behaviortype = null;
				this.beh_index = -1;
			}
		}
		this.sid = m[3];
		this.runtime.actsBySid[this.sid.toString()] = this;
		if (m.length === 6)
		{
			var i, len;
			var em = m[5];
			for (i = 0, len = em.length; i < len; i++)
			{
				var param = new cr.parameter(this, em[i]);
				cr.seal(param);
				this.parameters.push(param);
			}
			this.results.length = em.length;
		}
	};
	Action.prototype.postInit = function ()
	{
		var i, len, p;
		for (i = 0, len = this.parameters.length; i < len; i++)
		{
			p = this.parameters[i];
			p.postInit();
			if (p.variesPerInstance)
				this.anyParamVariesPerInstance = true;
		}
	};
	Action.prototype.run_system = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		return this.func.apply(this.runtime.system, this.results);
	};
	Action.prototype.run_object = function ()
	{
		var instances = this.type.getCurrentSol().getObjects();
		var is_family = this.type.is_family;
		var family_index = this.type.family_index;
		var beh_index = this.beh_index;
		var is_beh = (beh_index > -1);
		var params_vary = this.anyParamVariesPerInstance;
		var parameters = this.parameters;
		var results = this.results;
		var func = this.func;
		var i, j, leni, lenj, p, inst, offset;
		if (params_vary)
		{
			for (j = 0, lenj = parameters.length; j < lenj; ++j)
			{
				p = parameters[j];
				if (!p.variesPerInstance)
					results[j] = p.get(0);
			}
		}
		else
		{
			for (j = 0, lenj = parameters.length; j < lenj; ++j)
				results[j] = parameters[j].get(0);
		}
		for (i = 0, leni = instances.length; i < leni; ++i)
		{
			inst = instances[i];
			if (params_vary)
			{
				for (j = 0, lenj = parameters.length; j < lenj; ++j)
				{
					p = parameters[j];
					if (p.variesPerInstance)
						results[j] = p.get(i);    // pass i to use as default SOL index
				}
			}
			if (is_beh)
			{
				offset = 0;
				if (is_family)
				{
					offset = inst.type.family_beh_map[family_index];
				}
				func.apply(inst.behavior_insts[beh_index + offset], results);
			}
			else
				func.apply(inst, results);
		}
		return false;
	};
	cr.action = Action;
	var tempValues = [];
	var tempValuesPtr = -1;
	function Parameter(owner, m)
	{
		this.owner = owner;
		this.block = owner.block;
		this.sheet = owner.sheet;
		this.runtime = owner.runtime;
		this.type = m[0];
		this.expression = null;
		this.solindex = 0;
		this.get = null;
		this.combosel = 0;
		this.layout = null;
		this.key = 0;
		this.object = null;
		this.index = 0;
		this.varname = null;
		this.eventvar = null;
		this.fileinfo = null;
		this.subparams = null;
		this.variadicret = null;
		this.subparams = null;
		this.variadicret = null;
		this.variesPerInstance = false;
		var i, len, param;
		switch (m[0])
		{
			case 0:		// number
			case 7:		// any
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_exp;
				break;
			case 1:		// string
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_exp_str;
				break;
			case 5:		// layer
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_layer;
				break;
			case 3:		// combo
			case 8:		// cmp
				this.combosel = m[1];
				this.get = this.get_combosel;
				break;
			case 6:		// layout
				this.layout = this.runtime.layouts[m[1]];
;
				this.get = this.get_layout;
				break;
			case 9:		// keyb
				this.key = m[1];
				this.get = this.get_key;
				break;
			case 4:		// object
				this.object = this.runtime.types_by_index[m[1]];
;
				this.get = this.get_object;
				this.block.addSolModifier(this.object);
				if (this.owner instanceof cr.action)
					this.block.setSolWriterAfterCnds();
				else if (this.block.parent)
					this.block.parent.setSolWriterAfterCnds();
				break;
			case 10:	// instvar
				this.index = m[1];
				if (owner.type.is_family)
				{
					this.get = this.get_familyvar;
					this.variesPerInstance = true;
				}
				else
					this.get = this.get_instvar;
				break;
			case 11:	// eventvar
				this.varname = m[1];
				this.eventvar = null;
				this.get = this.get_eventvar;
				break;
			case 2:		// audiofile	["name", ismusic]
			case 12:	// fileinfo		"name"
				this.fileinfo = m[1];
				this.get = this.get_audiofile;
				break;
			case 13:	// variadic
				this.get = this.get_variadic;
				this.subparams = [];
				this.variadicret = [];
				for (i = 1, len = m.length; i < len; i++)
				{
					param = new cr.parameter(this.owner, m[i]);
					cr.seal(param);
					this.subparams.push(param);
					this.variadicret.push(0);
				}
				break;
			default:
;
		}
	};
	Parameter.prototype.postInit = function ()
	{
		var i, len;
		if (this.type === 11)		// eventvar
		{
			this.eventvar = this.runtime.getEventVariableByName(this.varname, this.block.parent);
;
		}
		else if (this.type === 13)	// variadic, postInit all sub-params
		{
			for (i = 0, len = this.subparams.length; i < len; i++)
				this.subparams[i].postInit();
		}
		if (this.expression)
			this.expression.postInit();
	};
	Parameter.prototype.maybeVaryForType = function (t)
	{
		if (this.variesPerInstance)
			return;				// already varies per instance, no need to check again
		if (!t)
			return;				// never vary for system type
		if (!t.plugin.singleglobal)
		{
			this.variesPerInstance = true;
			return;
		}
	};
	Parameter.prototype.setVaries = function ()
	{
		this.variesPerInstance = true;
	};
	Parameter.prototype.pushTempValue = function ()
	{
		tempValuesPtr++;
		if (tempValues.length === tempValuesPtr)
			tempValues.push(new cr.expvalue());
		return tempValues[tempValuesPtr];
	};
	Parameter.prototype.popTempValue = function ()
	{
		tempValuesPtr--;
	};
	Parameter.prototype.get_exp = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		return temp.data;      			// return actual JS value, not expvalue
	};
	Parameter.prototype.get_exp_str = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		if (cr.is_string(temp.data))
			return temp.data;
		else
			return "";
	};
	Parameter.prototype.get_object = function ()
	{
		return this.object;
	};
	Parameter.prototype.get_combosel = function ()
	{
		return this.combosel;
	};
	Parameter.prototype.get_layer = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		if (temp.is_number())
			return this.runtime.getLayerByNumber(temp.data);
		else
			return this.runtime.getLayerByName(temp.data);
	}
	Parameter.prototype.get_layout = function ()
	{
		return this.layout;
	};
	Parameter.prototype.get_key = function ()
	{
		return this.key;
	};
	Parameter.prototype.get_instvar = function ()
	{
		return this.index;
	};
	Parameter.prototype.get_familyvar = function (solindex_)
	{
		var solindex = solindex_ || 0;
		var familytype = this.owner.type;
		var realtype = null;
		var sol = familytype.getCurrentSol();
		var objs = sol.getObjects();
		if (objs.length)
			realtype = objs[solindex % objs.length].type;
		else if (sol.else_instances.length)
			realtype = sol.else_instances[solindex % sol.else_instances.length].type;
		else if (familytype.instances.length)
			realtype = familytype.instances[solindex % familytype.instances.length].type;
		else
			return 0;
		return this.index + realtype.family_var_map[familytype.family_index];
	};
	Parameter.prototype.get_eventvar = function ()
	{
		return this.eventvar;
	};
	Parameter.prototype.get_audiofile = function ()
	{
		return this.fileinfo;
	};
	Parameter.prototype.get_variadic = function ()
	{
		var i, len;
		for (i = 0, len = this.subparams.length; i < len; i++)
		{
			this.variadicret[i] = this.subparams[i].get();
		}
		return this.variadicret;
	};
	cr.parameter = Parameter;
	function EventVariable(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.name = m[1];
		this.vartype = m[2];
		this.initial = m[3];
		this.is_static = !!m[4];
		this.is_constant = !!m[5];
		this.sid = m[6];
		this.runtime.varsBySid[this.sid.toString()] = this;
		this.data = this.initial;	// note: also stored in event stack frame for local nonstatic nonconst vars
		if (this.parent)			// local var
		{
			if (this.is_static || this.is_constant)
				this.localIndex = -1;
			else
				this.localIndex = this.runtime.stackLocalCount++;
			this.runtime.all_local_vars.push(this);
		}
		else						// global var
		{
			this.localIndex = -1;
			this.runtime.all_global_vars.push(this);
		}
	};
	EventVariable.prototype.postInit = function ()
	{
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
	};
	EventVariable.prototype.setValue = function (x)
	{
;
		var lvs = this.runtime.getCurrentLocalVarStack();
		if (!this.parent || this.is_static || !lvs)
			this.data = x;
		else	// local nonstatic variable: use event stack to keep value at this level of recursion
		{
			if (this.localIndex >= lvs.length)
				lvs.length = this.localIndex + 1;
			lvs[this.localIndex] = x;
		}
	};
	EventVariable.prototype.getValue = function ()
	{
		var lvs = this.runtime.getCurrentLocalVarStack();
		if (!this.parent || this.is_static || !lvs || this.is_constant)
			return this.data;
		else	// local nonstatic variable
		{
			if (this.localIndex >= lvs.length)
			{
;
				return this.initial;
			}
			if (typeof lvs[this.localIndex] === "undefined")
			{
;
				return this.initial;
			}
			return lvs[this.localIndex];
		}
	};
	EventVariable.prototype.run = function ()
	{
			if (this.parent && !this.is_static && !this.is_constant)
				this.setValue(this.initial);
	};
	cr.eventvariable = EventVariable;
	function EventInclude(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.include_sheet = null;		// determined in postInit
		this.include_sheet_name = m[1];
		this.active = true;
	};
	EventInclude.prototype.toString = function ()
	{
		return "include:" + this.include_sheet.toString();
	};
	EventInclude.prototype.postInit = function ()
	{
        this.include_sheet = this.runtime.eventsheets[this.include_sheet_name];
;
;
        this.sheet.includes.add(this);
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
		var p = this.parent;
		while (p)
		{
			if (p.group)
				p.contained_includes.push(this);
			p = p.parent;
		}
		this.updateActive();
	};
	EventInclude.prototype.run = function ()
	{
			if (this.parent)
				this.runtime.pushCleanSol(this.runtime.types_by_index);
        if (!this.include_sheet.hasRun)
            this.include_sheet.run(true);			// from include
			if (this.parent)
				this.runtime.popSol(this.runtime.types_by_index);
	};
	EventInclude.prototype.updateActive = function ()
	{
		var p = this.parent;
		while (p)
		{
			if (p.group && !p.group_active)
			{
				this.active = false;
				return;
			}
			p = p.parent;
		}
		this.active = true;
	};
	EventInclude.prototype.isActive = function ()
	{
		return this.active;
	};
	cr.eventinclude = EventInclude;
	function EventStackFrame()
	{
		this.temp_parents_arr = [];
		this.reset(null);
		cr.seal(this);
	};
	EventStackFrame.prototype.reset = function (cur_event)
	{
		this.current_event = cur_event;
		this.cndindex = 0;
		this.actindex = 0;
		this.temp_parents_arr.length = 0;
		this.last_event_true = false;
		this.else_branch_ran = false;
		this.any_true_state = false;
	};
	EventStackFrame.prototype.isModifierAfterCnds = function ()
	{
		if (this.current_event.solWriterAfterCnds)
			return true;
		if (this.cndindex < this.current_event.conditions.length - 1)
			return !!this.current_event.solModifiers.length;
		return false;
	};
	cr.eventStackFrame = EventStackFrame;
}());
(function()
{
	function ExpNode(owner_, m)
	{
		this.owner = owner_;
		this.runtime = owner_.runtime;
		this.type = m[0];
;
		this.get = [this.eval_int,
					this.eval_float,
					this.eval_string,
					this.eval_unaryminus,
					this.eval_add,
					this.eval_subtract,
					this.eval_multiply,
					this.eval_divide,
					this.eval_mod,
					this.eval_power,
					this.eval_and,
					this.eval_or,
					this.eval_equal,
					this.eval_notequal,
					this.eval_less,
					this.eval_lessequal,
					this.eval_greater,
					this.eval_greaterequal,
					this.eval_conditional,
					this.eval_system_exp,
					this.eval_object_behavior_exp,
					this.eval_instvar_exp,
					this.eval_object_behavior_exp,
					this.eval_eventvar_exp][this.type];
		var paramsModel = null;
		this.value = null;
		this.first = null;
		this.second = null;
		this.third = null;
		this.func = null;
		this.results = null;
		this.parameters = null;
		this.object_type = null;
		this.beh_index = -1;
		this.instance_expr = null;
		this.varindex = -1;
		this.behavior_type = null;
		this.varname = null;
		this.eventvar = null;
		this.return_string = false;
		switch (this.type) {
		case 0:		// int
		case 1:		// float
		case 2:		// string
			this.value = m[1];
			break;
		case 3:		// unaryminus
			this.first = new cr.expNode(owner_, m[1]);
			break;
		case 18:	// conditional
			this.first = new cr.expNode(owner_, m[1]);
			this.second = new cr.expNode(owner_, m[2]);
			this.third = new cr.expNode(owner_, m[3]);
			break;
		case 19:	// system_exp
			this.func = m[1];
;
			if (this.func === cr.system_object.prototype.exps.random
			 || this.func === cr.system_object.prototype.exps.choose)
			{
				this.owner.setVaries();
			}
			this.results = [];
			this.parameters = [];
			if (m.length === 3)
			{
				paramsModel = m[2];
				this.results.length = paramsModel.length + 1;	// must also fit 'ret'
			}
			else
				this.results.length = 1;      // to fit 'ret'
			break;
		case 20:	// object_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.beh_index = -1;
			this.func = m[2];
			this.return_string = m[3];
			if (cr.plugins_.Function && this.func === cr.plugins_.Function.prototype.exps.Call)
			{
				this.owner.setVaries();
			}
			if (m[4])
				this.instance_expr = new cr.expNode(owner_, m[4]);
			else
				this.instance_expr = null;
			this.results = [];
			this.parameters = [];
			if (m.length === 6)
			{
				paramsModel = m[5];
				this.results.length = paramsModel.length + 1;
			}
			else
				this.results.length = 1;	// to fit 'ret'
			break;
		case 21:		// instvar_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.return_string = m[2];
			if (m[3])
				this.instance_expr = new cr.expNode(owner_, m[3]);
			else
				this.instance_expr = null;
			this.varindex = m[4];
			break;
		case 22:		// behavior_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.behavior_type = this.object_type.getBehaviorByName(m[2]);
;
			this.beh_index = this.object_type.getBehaviorIndexByName(m[2]);
			this.func = m[3];
			this.return_string = m[4];
			if (m[5])
				this.instance_expr = new cr.expNode(owner_, m[5]);
			else
				this.instance_expr = null;
			this.results = [];
			this.parameters = [];
			if (m.length === 7)
			{
				paramsModel = m[6];
				this.results.length = paramsModel.length + 1;
			}
			else
				this.results.length = 1;	// to fit 'ret'
			break;
		case 23:		// eventvar_exp
			this.varname = m[1];
			this.eventvar = null;	// assigned in postInit
			break;
		}
		this.owner.maybeVaryForType(this.object_type);
		if (this.type >= 4 && this.type <= 17)
		{
			this.first = new cr.expNode(owner_, m[1]);
			this.second = new cr.expNode(owner_, m[2]);
		}
		if (paramsModel)
		{
			var i, len;
			for (i = 0, len = paramsModel.length; i < len; i++)
				this.parameters.push(new cr.expNode(owner_, paramsModel[i]));
		}
		cr.seal(this);
	};
	ExpNode.prototype.postInit = function ()
	{
		if (this.type === 23)	// eventvar_exp
		{
			this.eventvar = this.owner.runtime.getEventVariableByName(this.varname, this.owner.block.parent);
;
		}
		if (this.first)
			this.first.postInit();
		if (this.second)
			this.second.postInit();
		if (this.third)
			this.third.postInit();
		if (this.instance_expr)
			this.instance_expr.postInit();
		if (this.parameters)
		{
			var i, len;
			for (i = 0, len = this.parameters.length; i < len; i++)
				this.parameters[i].postInit();
		}
	};
	ExpNode.prototype.eval_system_exp = function (ret)
	{
		this.results[0] = ret;
		var temp = this.owner.pushTempValue();
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
		{
			this.parameters[i].get(temp);
			this.results[i + 1] = temp.data;   // passing actual javascript value as argument instead of expvalue
		}
		this.owner.popTempValue();
		this.func.apply(this.runtime.system, this.results);
	};
	ExpNode.prototype.eval_object_behavior_exp = function (ret)
	{
		var sol = this.object_type.getCurrentSol();
		var instances = sol.getObjects();
		if (!instances.length)
		{
			if (sol.else_instances.length)
				instances = sol.else_instances;
			else
			{
				if (this.return_string)
					ret.set_string("");
				else
					ret.set_int(0);
				return;
			}
		}
		this.results[0] = ret;
		ret.object_class = this.object_type;		// so expression can access family type if need be
		var temp = this.owner.pushTempValue();
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++) {
			this.parameters[i].get(temp);
			this.results[i + 1] = temp.data;   // passing actual javascript value as argument instead of expvalue
		}
		var index = this.owner.solindex;
		if (this.instance_expr) {
			this.instance_expr.get(temp);
			if (temp.is_number()) {
				index = temp.data;
				instances = this.object_type.instances;    // pick from all instances, not SOL
			}
		}
		this.owner.popTempValue();
		index %= instances.length;      // wraparound
		if (index < 0)
			index += instances.length;
		var returned_val;
		var inst = instances[index];
		if (this.beh_index > -1)
		{
			var offset = 0;
			if (this.object_type.is_family)
			{
				offset = inst.type.family_beh_map[this.object_type.family_index];
			}
			returned_val = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
		}
		else
			returned_val = this.func.apply(inst, this.results);
;
	};
	ExpNode.prototype.eval_instvar_exp = function (ret)
	{
		var sol = this.object_type.getCurrentSol();
		var instances = sol.getObjects();
		if (!instances.length)
		{
			if (sol.else_instances.length)
				instances = sol.else_instances;
			else
			{
				if (this.return_string)
					ret.set_string("");
				else
					ret.set_int(0);
				return;
			}
		}
		var index = this.owner.solindex;
		if (this.instance_expr)
		{
			var temp = this.owner.pushTempValue();
			this.instance_expr.get(temp);
			if (temp.is_number())
			{
				index = temp.data;
				var type_instances = this.object_type.instances;
				index %= type_instances.length;     // wraparound
				if (index < 0)                      // offset
					index += type_instances.length;
				var to_ret = type_instances[index].instance_vars[this.varindex];
				if (cr.is_string(to_ret))
					ret.set_string(to_ret);
				else
					ret.set_float(to_ret);
				this.owner.popTempValue();
				return;         // done
			}
			this.owner.popTempValue();
		}
		index %= instances.length;      // wraparound
		if (index < 0)
			index += instances.length;
		var inst = instances[index];
		var offset = 0;
		if (this.object_type.is_family)
		{
			offset = inst.type.family_var_map[this.object_type.family_index];
		}
		var to_ret = inst.instance_vars[this.varindex + offset];
		if (cr.is_string(to_ret))
			ret.set_string(to_ret);
		else
			ret.set_float(to_ret);
	};
	ExpNode.prototype.eval_int = function (ret)
	{
		ret.type = cr.exptype.Integer;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_float = function (ret)
	{
		ret.type = cr.exptype.Float;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_string = function (ret)
	{
		ret.type = cr.exptype.String;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_unaryminus = function (ret)
	{
		this.first.get(ret);                // retrieve operand
		if (ret.is_number())
			ret.data = -ret.data;
	};
	ExpNode.prototype.eval_add = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data += temp.data;          // both operands numbers: add
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_subtract = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data -= temp.data;          // both operands numbers: subtract
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_multiply = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data *= temp.data;          // both operands numbers: multiply
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_divide = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data /= temp.data;          // both operands numbers: divide
			ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_mod = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data %= temp.data;          // both operands numbers: modulo
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_power = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data = Math.pow(ret.data, temp.data);   // both operands numbers: raise to power
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_and = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number())
		{
			if (temp.is_string())
			{
				ret.set_string(ret.data.toString() + temp.data);
			}
			else
			{
				if (ret.data && temp.data)
					ret.set_int(1);
				else
					ret.set_int(0);
			}
		}
		else if (ret.is_string())
		{
			if (temp.is_string())
				ret.data += temp.data;
			else
			{
				ret.data += (Math.round(temp.data * 1e10) / 1e10).toString();
			}
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_or = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			if (ret.data || temp.data)
				ret.set_int(1);
			else
				ret.set_int(0);
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_conditional = function (ret)
	{
		this.first.get(ret);                // condition operand
		if (ret.data)                       // is true
			this.second.get(ret);           // evaluate second operand to ret
		else
			this.third.get(ret);            // evaluate third operand to ret
	};
	ExpNode.prototype.eval_equal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data === temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_notequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data !== temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_less = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data < temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_lessequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data <= temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_greater = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data > temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_greaterequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data >= temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_eventvar_exp = function (ret)
	{
		var val = this.eventvar.getValue();
		if (cr.is_number(val))
			ret.set_float(val);
		else
			ret.set_string(val);
	};
	cr.expNode = ExpNode;
	function ExpValue(type, data)
	{
		this.type = type || cr.exptype.Integer;
		this.data = data || 0;
		this.object_class = null;
;
;
;
		if (this.type == cr.exptype.Integer)
			this.data = Math.floor(this.data);
		cr.seal(this);
	};
	ExpValue.prototype.is_int = function ()
	{
		return this.type === cr.exptype.Integer;
	};
	ExpValue.prototype.is_float = function ()
	{
		return this.type === cr.exptype.Float;
	};
	ExpValue.prototype.is_number = function ()
	{
		return this.type === cr.exptype.Integer || this.type === cr.exptype.Float;
	};
	ExpValue.prototype.is_string = function ()
	{
		return this.type === cr.exptype.String;
	};
	ExpValue.prototype.make_int = function ()
	{
		if (!this.is_int())
		{
			if (this.is_float())
				this.data = Math.floor(this.data);      // truncate float
			else if (this.is_string())
				this.data = parseInt(this.data, 10);
			this.type = cr.exptype.Integer;
		}
	};
	ExpValue.prototype.make_float = function ()
	{
		if (!this.is_float())
		{
			if (this.is_string())
				this.data = parseFloat(this.data);
			this.type = cr.exptype.Float;
		}
	};
	ExpValue.prototype.make_string = function ()
	{
		if (!this.is_string())
		{
			this.data = this.data.toString();
			this.type = cr.exptype.String;
		}
	};
	ExpValue.prototype.set_int = function (val)
	{
;
		this.type = cr.exptype.Integer;
		this.data = Math.floor(val);
	};
	ExpValue.prototype.set_float = function (val)
	{
;
		this.type = cr.exptype.Float;
		this.data = val;
	};
	ExpValue.prototype.set_string = function (val)
	{
;
		this.type = cr.exptype.String;
		this.data = val;
	};
	ExpValue.prototype.set_any = function (val)
	{
		if (cr.is_number(val))
		{
			this.type = cr.exptype.Float;
			this.data = val;
		}
		else if (cr.is_string(val))
		{
			this.type = cr.exptype.String;
			this.data = val.toString();
		}
		else
		{
			this.type = cr.exptype.Integer;
			this.data = 0;
		}
	};
	cr.expvalue = ExpValue;
	cr.exptype = {
		Integer: 0,     // emulated; no native integer support in javascript
		Float: 1,
		String: 2
	};
}());
;
cr.system_object = function (runtime)
{
    this.runtime = runtime;
	this.waits = [];
};
cr.system_object.prototype.saveToJSON = function ()
{
	var o = {};
	var i, len, j, lenj, p, w, t, sobj;
	o["waits"] = [];
	var owaits = o["waits"];
	var waitobj;
	for (i = 0, len = this.waits.length; i < len; i++)
	{
		w = this.waits[i];
		waitobj = {
			"t": w.time,
			"ev": w.ev.sid,
			"sm": [],
			"sols": {}
		};
		if (w.ev.actions[w.actindex])
			waitobj["act"] = w.ev.actions[w.actindex].sid;
		for (j = 0, lenj = w.solModifiers.length; j < lenj; j++)
			waitobj["sm"].push(w.solModifiers[j].sid);
		for (p in w.sols)
		{
			if (w.sols.hasOwnProperty(p))
			{
				t = this.runtime.types_by_index[parseInt(p, 10)];
;
				sobj = {
					"sa": w.sols[p].sa,
					"insts": []
				};
				for (j = 0, lenj = w.sols[p].insts.length; j < lenj; j++)
					sobj["insts"].push(w.sols[p].insts[j].uid);
				waitobj["sols"][t.sid.toString()] = sobj;
			}
		}
		owaits.push(waitobj);
	}
	return o;
};
cr.system_object.prototype.loadFromJSON = function (o)
{
	var owaits = o["waits"];
	var i, len, j, lenj, p, w, addWait, e, aindex, t, savedsol, nusol, inst;
	this.waits.length = 0;
	for (i = 0, len = owaits.length; i < len; i++)
	{
		w = owaits[i];
		e = this.runtime.blocksBySid[w["ev"].toString()];
		if (!e)
			continue;	// event must've gone missing
		aindex = -1;
		for (j = 0, lenj = e.actions.length; j < lenj; j++)
		{
			if (e.actions[j].sid === w["act"])
			{
				aindex = j;
				break;
			}
		}
		if (aindex === -1)
			continue;	// action must've gone missing
		addWait = {};
		addWait.sols = {};
		addWait.solModifiers = [];
		addWait.deleteme = false;
		addWait.time = w["t"];
		addWait.ev = e;
		addWait.actindex = aindex;
		for (j = 0, lenj = w["sm"].length; j < lenj; j++)
		{
			t = this.runtime.getObjectTypeBySid(w["sm"][j]);
			if (t)
				addWait.solModifiers.push(t);
		}
		for (p in w["sols"])
		{
			if (w["sols"].hasOwnProperty(p))
			{
				t = this.runtime.getObjectTypeBySid(parseInt(p, 10));
				if (!t)
					continue;		// type must've been deleted
				savedsol = w["sols"][p];
				nusol = {
					sa: savedsol["sa"],
					insts: []
				};
				for (j = 0, lenj = savedsol["insts"].length; j < lenj; j++)
				{
					inst = this.runtime.getObjectByUID(savedsol["insts"][j]);
					if (inst)
						nusol.insts.push(inst);
				}
				addWait.sols[t.index.toString()] = nusol;
			}
		}
		this.waits.push(addWait);
	}
};
(function ()
{
	var sysProto = cr.system_object.prototype;
	function SysCnds() {};
    SysCnds.prototype.EveryTick = function()
    {
        return true;
    };
    SysCnds.prototype.OnLayoutStart = function()
    {
        return true;
    };
    SysCnds.prototype.OnLayoutEnd = function()
    {
        return true;
    };
    SysCnds.prototype.Compare = function(x, cmp, y)
    {
        return cr.do_cmp(x, cmp, y);
    };
    SysCnds.prototype.CompareTime = function (cmp, t)
    {
        var elapsed = this.runtime.kahanTime.sum;
        if (cmp === 0)
        {
            var cnd = this.runtime.getCurrentCondition();
            if (!cnd.extra.CompareTime_executed)
            {
                if (elapsed >= t)
                {
                    cnd.extra.CompareTime_executed = true;
                    return true;
                }
            }
            return false;
        }
        return cr.do_cmp(elapsed, cmp, t);
    };
    SysCnds.prototype.LayerVisible = function (layer)
    {
        if (!layer)
            return false;
        else
            return layer.visible;
    };
	SysCnds.prototype.LayerCmpOpacity = function (layer, cmp, opacity_)
	{
		if (!layer)
			return false;
		return cr.do_cmp(layer.opacity * 100, cmp, opacity_);
	};
    SysCnds.prototype.Repeat = function (count)
    {
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i;
		if (solModifierAfterCnds)
		{
			for (i = 0; i < count && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			for (i = 0; i < count && !current_loop.stopped; i++)
			{
				current_loop.index = i;
				current_event.retrigger();
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
	SysCnds.prototype.While = function (count)
    {
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i;
		if (solModifierAfterCnds)
		{
			for (i = 0; !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				current_loop.index = i;
				if (!current_event.retrigger())		// one of the other conditions returned false
					current_loop.stopped = true;	// break
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			for (i = 0; !current_loop.stopped; i++)
			{
				current_loop.index = i;
				if (!current_event.retrigger())
					current_loop.stopped = true;
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
    SysCnds.prototype.For = function (name, start, end)
    {
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack(name);
        var i;
		if (end < start)
		{
			if (solModifierAfterCnds)
			{
				for (i = start; i >= end && !current_loop.stopped; --i)  // inclusive to end
				{
					this.runtime.pushCopySol(current_event.solModifiers);
					current_loop.index = i;
					current_event.retrigger();
					this.runtime.popSol(current_event.solModifiers);
				}
			}
			else
			{
				for (i = start; i >= end && !current_loop.stopped; --i)  // inclusive to end
				{
					current_loop.index = i;
					current_event.retrigger();
				}
			}
		}
		else
		{
			if (solModifierAfterCnds)
			{
				for (i = start; i <= end && !current_loop.stopped; ++i)  // inclusive to end
				{
					this.runtime.pushCopySol(current_event.solModifiers);
					current_loop.index = i;
					current_event.retrigger();
					this.runtime.popSol(current_event.solModifiers);
				}
			}
			else
			{
				for (i = start; i <= end && !current_loop.stopped; ++i)  // inclusive to end
				{
					current_loop.index = i;
					current_event.retrigger();
				}
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
	var foreach_instancestack = [];
	var foreach_instanceptr = -1;
    SysCnds.prototype.ForEach = function (obj)
    {
        var sol = obj.getCurrentSol();
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var instances = foreach_instancestack[foreach_instanceptr];
		cr.shallowAssignArray(instances, sol.getObjects());
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i, len, j, lenj, inst, s, sol2;
		var is_contained = obj.is_contained;
		if (solModifierAfterCnds)
		{
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				inst = instances[i];
				sol = obj.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			sol.select_all = false;
			sol.instances.length = 1;
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				inst = instances[i];
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
			}
		}
		instances.length = 0;
        this.runtime.popLoopStack();
		foreach_instanceptr--;
		return false;
    };
	function foreach_sortinstances(a, b)
	{
		var va = a.extra.c2_foreachordered_val;
		var vb = b.extra.c2_foreachordered_val;
		if (cr.is_number(va) && cr.is_number(vb))
			return va - vb;
		else
		{
			va = "" + va;
			vb = "" + vb;
			if (va < vb)
				return -1;
			else if (va > vb)
				return 1;
			else
				return 0;
		}
	};
	SysCnds.prototype.ForEachOrdered = function (obj, exp, order)
    {
        var sol = obj.getCurrentSol();
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var instances = foreach_instancestack[foreach_instanceptr];
		cr.shallowAssignArray(instances, sol.getObjects());
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var current_condition = this.runtime.getCurrentCondition();
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
		var i, len, j, lenj, inst, s, sol2;
		for (i = 0, len = instances.length; i < len; i++)
		{
			instances[i].extra.c2_foreachordered_val = current_condition.parameters[1].get(i);
		}
		instances.sort(foreach_sortinstances);
		if (order === 1)
			instances.reverse();
		var is_contained = obj.is_contained;
		if (solModifierAfterCnds)
		{
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				inst = instances[i];
				sol = obj.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			sol.select_all = false;
			sol.instances.length = 1;
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				inst = instances[i];
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
			}
		}
		instances.length = 0;
        this.runtime.popLoopStack();
		foreach_instanceptr--;
		return false;
    };
	SysCnds.prototype.PickByComparison = function (obj_, exp_, cmp_, val_)
	{
		var i, len, k, inst;
		if (!obj_)
			return;
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var tmp_instances = foreach_instancestack[foreach_instanceptr];
		var sol = obj_.getCurrentSol();
		cr.shallowAssignArray(tmp_instances, sol.getObjects());
		if (sol.select_all)
			sol.else_instances.length = 0;
		var current_condition = this.runtime.getCurrentCondition();
		for (i = 0, k = 0, len = tmp_instances.length; i < len; i++)
		{
			inst = tmp_instances[i];
			tmp_instances[k] = inst;
			exp_ = current_condition.parameters[1].get(i);
			val_ = current_condition.parameters[3].get(i);
			if (cr.do_cmp(exp_, cmp_, val_))
			{
				k++;
			}
			else
			{
				sol.else_instances.push(inst);
			}
		}
		tmp_instances.length = k;
		sol.select_all = false;
		cr.shallowAssignArray(sol.instances, tmp_instances);
		tmp_instances.length = 0;
		foreach_instanceptr--;
		obj_.applySolToContainer();
		return !!sol.instances.length;
	};
	SysCnds.prototype.PickByEvaluate = function (obj_, exp_)
	{
		var i, len, k, inst;
		if (!obj_)
			return;
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var tmp_instances = foreach_instancestack[foreach_instanceptr];
		var sol = obj_.getCurrentSol();
		cr.shallowAssignArray(tmp_instances, sol.getObjects());
		if (sol.select_all)
			sol.else_instances.length = 0;
		var current_condition = this.runtime.getCurrentCondition();
		for (i = 0, k = 0, len = tmp_instances.length; i < len; i++)
		{
			inst = tmp_instances[i];
			tmp_instances[k] = inst;
			exp_ = current_condition.parameters[1].get(i);
			if (exp_)
			{
				k++;
			}
			else
			{
				sol.else_instances.push(inst);
			}
		}
		tmp_instances.length = k;
		sol.select_all = false;
		cr.shallowAssignArray(sol.instances, tmp_instances);
		tmp_instances.length = 0;
		foreach_instanceptr--;
		obj_.applySolToContainer();
		return !!sol.instances.length;
	};
    SysCnds.prototype.TriggerOnce = function ()
    {
        var cndextra = this.runtime.getCurrentCondition().extra;
		if (typeof cndextra.TriggerOnce_lastTick === "undefined")
			cndextra.TriggerOnce_lastTick = -1;
        var last_tick = cndextra.TriggerOnce_lastTick;
        var cur_tick = this.runtime.tickcount;
        cndextra.TriggerOnce_lastTick = cur_tick;
        return this.runtime.layout_first_tick || last_tick !== cur_tick - 1;
    };
    SysCnds.prototype.Every = function (seconds)
    {
        var cnd = this.runtime.getCurrentCondition();
        var last_time = cnd.extra.Every_lastTime || 0;
        var cur_time = this.runtime.kahanTime.sum;
		if (typeof cnd.extra.Every_seconds === "undefined")
			cnd.extra.Every_seconds = seconds;
		var this_seconds = cnd.extra.Every_seconds;
        if (cur_time >= last_time + this_seconds)
        {
            cnd.extra.Every_lastTime = last_time + this_seconds;
			if (cur_time >= cnd.extra.Every_lastTime + 0.04)
			{
				cnd.extra.Every_lastTime = cur_time;
			}
			cnd.extra.Every_seconds = seconds;
            return true;
        }
		else if (cur_time < last_time - 0.1)
		{
			cnd.extra.Every_lastTime = cur_time;
		}
		return false;
    };
    SysCnds.prototype.PickNth = function (obj, index)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
		index = cr.floor(index);
        if (index < 0 || index >= instances.length)
            return false;
		var inst = instances[index];
        sol.pick_one(inst);
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.PickRandom = function (obj)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
		var index = cr.floor(Math.random() * instances.length);
        if (index >= instances.length)
            return false;
		var inst = instances[index];
        sol.pick_one(inst);
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.CompareVar = function (v, cmp, val)
    {
        return cr.do_cmp(v.getValue(), cmp, val);
    };
    SysCnds.prototype.IsGroupActive = function (group)
    {
		var g = this.runtime.groups_by_name[group.toLowerCase()];
        return g && g.group_active;
    };
	SysCnds.prototype.IsPreview = function ()
	{
		return typeof cr_is_preview !== "undefined";
	};
	SysCnds.prototype.PickAll = function (obj)
    {
        if (!obj)
            return false;
		if (!obj.instances.length)
			return false;
        var sol = obj.getCurrentSol();
        sol.select_all = true;
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.IsMobile = function ()
	{
		return this.runtime.isMobile;
	};
	SysCnds.prototype.CompareBetween = function (x, a, b)
	{
		return x >= a && x <= b;
	};
	SysCnds.prototype.Else = function ()
	{
		var current_frame = this.runtime.getCurrentEventStack();
		if (current_frame.else_branch_ran)
			return false;		// another event in this else-if chain has run
		else
			return !current_frame.last_event_true;
		/*
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var prev_event = current_event.prev_block;
		if (!prev_event)
			return false;
		if (prev_event.is_logical)
			return !this.runtime.last_event_true;
		var i, len, j, lenj, s, sol, temp, inst, any_picked = false;
		for (i = 0, len = prev_event.cndReferences.length; i < len; i++)
		{
			s = prev_event.cndReferences[i];
			sol = s.getCurrentSol();
			if (sol.select_all || sol.instances.length === s.instances.length)
			{
				sol.select_all = false;
				sol.instances.length = 0;
			}
			else
			{
				if (sol.instances.length === 1 && sol.else_instances.length === 0 && s.instances.length >= 2)
				{
					inst = sol.instances[0];
					sol.instances.length = 0;
					for (j = 0, lenj = s.instances.length; j < lenj; j++)
					{
						if (s.instances[j] != inst)
							sol.instances.push(s.instances[j]);
					}
					any_picked = true;
				}
				else
				{
					temp = sol.instances;
					sol.instances = sol.else_instances;
					sol.else_instances = temp;
					any_picked = true;
				}
			}
		}
		return any_picked;
		*/
	};
	SysCnds.prototype.OnLoadFinished = function ()
	{
		return true;
	};
	SysCnds.prototype.OnCanvasSnapshot = function ()
	{
		return true;
	};
	SysCnds.prototype.EffectsSupported = function ()
	{
		return !!this.runtime.glwrap;
	};
	SysCnds.prototype.OnSaveComplete = function ()
	{
		return true;
	};
	SysCnds.prototype.OnLoadComplete = function ()
	{
		return true;
	};
	SysCnds.prototype.OnLoadFailed = function ()
	{
		return true;
	};
	SysCnds.prototype.ObjectUIDExists = function (u)
	{
		return !!this.runtime.getObjectByUID(u);
	};
	SysCnds.prototype.IsOnPlatform = function (p)
	{
		var rt = this.runtime;
		switch (p) {
		case 0:		// HTML5 website
			return !rt.isDomFree && !rt.isNodeWebkit && !rt.isPhoneGap && !rt.isCrosswalk && !rt.isWinJS && !rt.isWindowsPhone8 && !rt.isBlackberry10 && !rt.isAmazonWebApp;
		case 1:		// iOS
			return rt.isiOS;
		case 2:		// Android
			return rt.isAndroid;
		case 3:		// Windows 8
			return rt.isWindows8App;
		case 4:		// Windows Phone 8
			return rt.isWindowsPhone8;
		case 5:		// Blackberry 10
			return rt.isBlackberry10;
		case 6:		// Tizen
			return rt.isTizen;
		case 7:		// CocoonJS
			return rt.isCocoonJs;
		case 8:		// PhoneGap
			return rt.isPhoneGap;
		case 9:	// Scirra Arcade
			return rt.isArcade;
		case 10:	// node-webkit
			return rt.isNodeWebkit;
		case 11:	// crosswalk
			return rt.isCrosswalk;
		case 12:	// amazon webapp
			return rt.isAmazonWebApp;
		default:	// should not be possible
			return false;
		}
	};
	var cacheRegex = null;
	var lastRegex = "";
	var lastFlags = "";
	function getRegex(regex_, flags_)
	{
		if (!cacheRegex || regex_ !== lastRegex || flags_ !== lastFlags)
		{
			cacheRegex = new RegExp(regex_, flags_);
			lastRegex = regex_;
			lastFlags = flags_;
		}
		cacheRegex.lastIndex = 0;		// reset
		return cacheRegex;
	};
	SysCnds.prototype.RegexTest = function (str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		return regex.test(str_);
	};
	var tmp_arr = [];
	SysCnds.prototype.PickOverlappingPoint = function (obj_, x_, y_)
	{
		if (!obj_)
            return false;
        var sol = obj_.getCurrentSol();
        var instances = sol.getObjects();
		var current_event = this.runtime.getCurrentEventStack().current_event;
		var orblock = current_event.orblock;
		var cnd = this.runtime.getCurrentCondition();
		var i, len, inst, pick;
		if (sol.select_all)
		{
			cr.shallowAssignArray(tmp_arr, instances);
			sol.else_instances.length = 0;
			sol.select_all = false;
			sol.instances.length = 0;
		}
		else
		{
			if (orblock)
			{
				cr.shallowAssignArray(tmp_arr, sol.else_instances);
				sol.else_instances.length = 0;
			}
			else
			{
				cr.shallowAssignArray(tmp_arr, instances);
				sol.instances.length = 0;
			}
		}
		for (i = 0, len = tmp_arr.length; i < len; ++i)
		{
			inst = tmp_arr[i];
			inst.update_bbox();
			pick = cr.xor(inst.contains_pt(x_, y_), cnd.inverted);
			if (pick)
				sol.instances.push(inst);
			else
				sol.else_instances.push(inst);
		}
		obj_.applySolToContainer();
		return cr.xor(!!sol.instances.length, cnd.inverted);
	};
	sysProto.cnds = new SysCnds();
    function SysActs() {};
    SysActs.prototype.GoToLayout = function(to)
    {
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
;
        this.runtime.changelayout = to;
    };
    SysActs.prototype.CreateObject = function (obj, layer, x, y)
    {
        if (!layer || !obj)
            return;
        var inst = this.runtime.createInstance(obj, layer, x, y);
		if (!inst)
			return;
		this.runtime.isInOnDestroy++;
		var i, len, s;
		this.runtime.trigger(Object.getPrototypeOf(obj.plugin).cnds.OnCreated, inst);
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				this.runtime.trigger(Object.getPrototypeOf(s.type.plugin).cnds.OnCreated, s);
			}
		}
		this.runtime.isInOnDestroy--;
        var sol = obj.getCurrentSol();
        sol.select_all = false;
		sol.instances.length = 1;
		sol.instances[0] = inst;
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				sol = s.type.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = s;
			}
		}
    };
    SysActs.prototype.SetLayerVisible = function (layer, visible_)
    {
        if (!layer)
            return;
		if (layer.visible !== visible_)
		{
			layer.visible = visible_;
			this.runtime.redraw = true;
		}
    };
	SysActs.prototype.SetLayerOpacity = function (layer, opacity_)
	{
		if (!layer)
			return;
		opacity_ = cr.clamp(opacity_ / 100, 0, 1);
		if (layer.opacity !== opacity_)
		{
			layer.opacity = opacity_;
			this.runtime.redraw = true;
		}
	};
	SysActs.prototype.SetLayerScaleRate = function (layer, sr)
	{
		if (!layer)
			return;
		if (layer.zoomRate !== sr)
		{
			layer.zoomRate = sr;
			this.runtime.redraw = true;
		}
	};
	SysActs.prototype.SetLayoutScale = function (s)
	{
		if (!this.runtime.running_layout)
			return;
		if (this.runtime.running_layout.scale !== s)
		{
			this.runtime.running_layout.scale = s;
			this.runtime.running_layout.boundScrolling();
			this.runtime.redraw = true;
		}
	};
    SysActs.prototype.ScrollX = function(x)
    {
        this.runtime.running_layout.scrollToX(x);
    };
    SysActs.prototype.ScrollY = function(y)
    {
        this.runtime.running_layout.scrollToY(y);
    };
    SysActs.prototype.Scroll = function(x, y)
    {
        this.runtime.running_layout.scrollToX(x);
        this.runtime.running_layout.scrollToY(y);
    };
    SysActs.prototype.ScrollToObject = function(obj)
    {
        var inst = obj.getFirstPicked();
        if (inst)
        {
            this.runtime.running_layout.scrollToX(inst.x);
            this.runtime.running_layout.scrollToY(inst.y);
        }
    };
	SysActs.prototype.SetVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(x);
			else
				v.setValue(parseFloat(x));
		}
		else if (v.vartype === 1)
			v.setValue(x.toString());
	};
	SysActs.prototype.AddVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(v.getValue() + x);
			else
				v.setValue(v.getValue() + parseFloat(x));
		}
		else if (v.vartype === 1)
			v.setValue(v.getValue() + x.toString());
	};
	SysActs.prototype.SubVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(v.getValue() - x);
			else
				v.setValue(v.getValue() - parseFloat(x));
		}
	};
    SysActs.prototype.SetGroupActive = function (group, active)
    {
		var g = this.runtime.groups_by_name[group.toLowerCase()];
		if (!g)
			return;
		switch (active) {
		case 0:
			g.setGroupActive(false);
			break;
		case 1:
			g.setGroupActive(true);
			break;
		case 2:
			g.setGroupActive(!g.group_active);
			break;
		}
    };
    SysActs.prototype.SetTimescale = function (ts_)
    {
        var ts = ts_;
        if (ts < 0)
            ts = 0;
        this.runtime.timescale = ts;
    };
    SysActs.prototype.SetObjectTimescale = function (obj, ts_)
    {
        var ts = ts_;
        if (ts < 0)
            ts = 0;
        if (!obj)
            return;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
        var i, len;
        for (i = 0, len = instances.length; i < len; i++)
        {
            instances[i].my_timescale = ts;
        }
    };
    SysActs.prototype.RestoreObjectTimescale = function (obj)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
        var i, len;
        for (i = 0, len = instances.length; i < len; i++)
        {
            instances[i].my_timescale = -1.0;
        }
    };
	var waitobjrecycle = [];
	function allocWaitObject()
	{
		var w;
		if (waitobjrecycle.length)
			w = waitobjrecycle.pop();
		else
		{
			w = {};
			w.sols = {};
			w.solModifiers = [];
		}
		w.deleteme = false;
		return w;
	};
	function freeWaitObject(w)
	{
		cr.wipe(w.sols);
		w.solModifiers.length = 0;
		waitobjrecycle.push(w);
	};
	var solstateobjects = [];
	function allocSolStateObject()
	{
		var s;
		if (solstateobjects.length)
			s = solstateobjects.pop();
		else
		{
			s = {};
			s.insts = [];
		}
		s.sa = false;
		return s;
	};
	function freeSolStateObject(s)
	{
		s.insts.length = 0;
		solstateobjects.push(s);
	};
	SysActs.prototype.Wait = function (seconds)
	{
		if (seconds < 0)
			return;
		var i, len, s, t, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		var waitobj = allocWaitObject();
		waitobj.time = this.runtime.kahanTime.sum + seconds;
		waitobj.ev = evinfo.current_event;
		waitobj.actindex = evinfo.actindex + 1;	// pointing at next action
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			t = this.runtime.types_by_index[i];
			s = t.getCurrentSol();
			if (s.select_all && evinfo.current_event.solModifiers.indexOf(t) === -1)
				continue;
			waitobj.solModifiers.push(t);
			ss = allocSolStateObject();
			ss.sa = s.select_all;
			cr.shallowAssignArray(ss.insts, s.instances);
			waitobj.sols[i.toString()] = ss;
		}
		this.waits.push(waitobj);
		return true;
	};
	SysActs.prototype.SetLayerScale = function (layer, scale)
    {
        if (!layer)
            return;
		if (layer.scale === scale)
			return;
        layer.scale = scale;
        this.runtime.redraw = true;
    };
	SysActs.prototype.ResetGlobals = function ()
	{
		var i, len, g;
		for (i = 0, len = this.runtime.all_global_vars.length; i < len; i++)
		{
			g = this.runtime.all_global_vars[i];
			g.data = g.initial;
		}
	};
	SysActs.prototype.SetLayoutAngle = function (a)
	{
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (this.runtime.running_layout)
		{
			if (this.runtime.running_layout.angle !== a)
			{
				this.runtime.running_layout.angle = a;
				this.runtime.redraw = true;
			}
		}
	};
	SysActs.prototype.SetLayerAngle = function (layer, a)
    {
        if (!layer)
            return;
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (layer.angle === a)
			return;
        layer.angle = a;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerParallax = function (layer, px, py)
    {
        if (!layer)
            return;
		if (layer.parallaxX === px / 100 && layer.parallaxY === py / 100)
			return;
        layer.parallaxX = px / 100;
		layer.parallaxY = py / 100;
		if (layer.parallaxX !== 1 || layer.parallaxY !== 1)
		{
			var i, len, instances = layer.instances;
			for (i = 0, len = instances.length; i < len; ++i)
			{
				instances[i].type.any_instance_parallaxed = true;
			}
		}
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerBackground = function (layer, c)
    {
        if (!layer)
            return;
		var r = cr.GetRValue(c);
		var g = cr.GetGValue(c);
		var b = cr.GetBValue(c);
		if (layer.background_color[0] === r && layer.background_color[1] === g && layer.background_color[2] === b)
			return;
        layer.background_color[0] = r;
		layer.background_color[1] = g;
		layer.background_color[2] = b;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerTransparent = function (layer, t)
    {
        if (!layer)
            return;
		if (!!t === !!layer.transparent)
			return;
		layer.transparent = !!t;
        this.runtime.redraw = true;
    };
	SysActs.prototype.StopLoop = function ()
	{
		if (this.runtime.loop_stack_index < 0)
			return;		// no loop currently running
		this.runtime.getCurrentLoop().stopped = true;
	};
	SysActs.prototype.GoToLayoutByName = function (layoutname)
	{
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to different layout
;
		var l;
		for (l in this.runtime.layouts)
		{
			if (this.runtime.layouts.hasOwnProperty(l) && cr.equals_nocase(l, layoutname))
			{
				this.runtime.changelayout = this.runtime.layouts[l];
				return;
			}
		}
	};
	SysActs.prototype.RestartLayout = function (layoutname)
	{
		if (this.runtime.isloading)
			return;		// cannot restart loader layouts
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
;
		if (!this.runtime.running_layout)
			return;
		this.runtime.changelayout = this.runtime.running_layout;
		var i, len, g;
		for (i = 0, len = this.runtime.allGroups.length; i < len; i++)
		{
			g = this.runtime.allGroups[i];
			g.setGroupActive(g.initially_activated);
		}
	};
	SysActs.prototype.SnapshotCanvas = function (format_, quality_)
	{
		this.runtime.snapshotCanvas = [format_ === 0 ? "image/png" : "image/jpeg", quality_ / 100];
		this.runtime.redraw = true;		// force redraw so snapshot is always taken
	};
	SysActs.prototype.SetCanvasSize = function (w, h)
	{
		if (w <= 0 || h <= 0)
			return;
		var mode = this.runtime.fullscreen_mode;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"] || this.runtime.isNodeFullscreen);
		if (isfullscreen && this.runtime.fullscreen_scaling > 0)
			mode = this.runtime.fullscreen_scaling;
		if (mode === 0)
		{
			this.runtime["setSize"](w, h, true);
		}
		else
		{
			this.runtime.original_width = w;
			this.runtime.original_height = h;
			this.runtime["setSize"](this.runtime.lastWindowWidth, this.runtime.lastWindowHeight, true);
		}
	};
	SysActs.prototype.SetLayoutEffectEnabled = function (enable_, effectname_)
	{
		if (!this.runtime.running_layout || !this.runtime.glwrap)
			return;
		var et = this.runtime.running_layout.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var enable = (enable_ === 1);
		if (et.active == enable)
			return;		// no change
		et.active = enable;
		this.runtime.running_layout.updateActiveEffects();
		this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayerEffectEnabled = function (layer, enable_, effectname_)
	{
		if (!layer || !this.runtime.glwrap)
			return;
		var et = layer.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var enable = (enable_ === 1);
		if (et.active == enable)
			return;		// no change
		et.active = enable;
		layer.updateActiveEffects();
		this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayoutEffectParam = function (effectname_, index_, value_)
	{
		if (!this.runtime.running_layout || !this.runtime.glwrap)
			return;
		var et = this.runtime.running_layout.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var params = this.runtime.running_layout.effect_params[et.index];
		index_ = Math.floor(index_);
		if (index_ < 0 || index_ >= params.length)
			return;		// effect index out of bounds
		if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
			value_ /= 100.0;
		if (params[index_] === value_)
			return;		// no change
		params[index_] = value_;
		if (et.active)
			this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayerEffectParam = function (layer, effectname_, index_, value_)
	{
		if (!layer || !this.runtime.glwrap)
			return;
		var et = layer.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var params = layer.effect_params[et.index];
		index_ = Math.floor(index_);
		if (index_ < 0 || index_ >= params.length)
			return;		// effect index out of bounds
		if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
			value_ /= 100.0;
		if (params[index_] === value_)
			return;		// no change
		params[index_] = value_;
		if (et.active)
			this.runtime.redraw = true;
	};
	SysActs.prototype.SaveState = function (slot_)
	{
		this.runtime.saveToSlot = slot_;
	};
	SysActs.prototype.LoadState = function (slot_)
	{
		this.runtime.loadFromSlot = slot_;
	};
	SysActs.prototype.LoadStateJSON = function (jsonstr_)
	{
		this.runtime.loadFromJson = jsonstr_;
	};
	SysActs.prototype.SetHalfFramerateMode = function (set_)
	{
		this.runtime.halfFramerateMode = (set_ !== 0);
	};
	SysActs.prototype.SetFullscreenQuality = function (q)
	{
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"] || this.isNodeFullscreen);
		if (!isfullscreen && this.runtime.fullscreen_mode === 0)
			return;
		this.runtime.wantFullscreenScalingQuality = (q !== 0);
		this.runtime["setSize"](this.runtime.lastWindowWidth, this.runtime.lastWindowHeight, true);
	};
	sysProto.acts = new SysActs();
    function SysExps() {};
    SysExps.prototype["int"] = function(ret, x)
    {
        if (cr.is_string(x))
        {
            ret.set_int(parseInt(x, 10));
            if (isNaN(ret.data))
                ret.data = 0;
        }
        else
            ret.set_int(x);
    };
    SysExps.prototype["float"] = function(ret, x)
    {
        if (cr.is_string(x))
        {
            ret.set_float(parseFloat(x));
            if (isNaN(ret.data))
                ret.data = 0;
        }
        else
            ret.set_float(x);
    };
    SysExps.prototype.str = function(ret, x)
    {
        if (cr.is_string(x))
            ret.set_string(x);
        else
            ret.set_string(x.toString());
    };
    SysExps.prototype.len = function(ret, x)
    {
        ret.set_int(x.length || 0);
    };
    SysExps.prototype.random = function (ret, a, b)
    {
        if (b === undefined)
        {
            ret.set_float(Math.random() * a);
        }
        else
        {
            ret.set_float(Math.random() * (b - a) + a);
        }
    };
    SysExps.prototype.sqrt = function(ret, x)
    {
        ret.set_float(Math.sqrt(x));
    };
    SysExps.prototype.abs = function(ret, x)
    {
        ret.set_float(Math.abs(x));
    };
    SysExps.prototype.round = function(ret, x)
    {
        ret.set_int(Math.round(x));
    };
    SysExps.prototype.floor = function(ret, x)
    {
        ret.set_int(Math.floor(x));
    };
    SysExps.prototype.ceil = function(ret, x)
    {
        ret.set_int(Math.ceil(x));
    };
    SysExps.prototype.sin = function(ret, x)
    {
        ret.set_float(Math.sin(cr.to_radians(x)));
    };
    SysExps.prototype.cos = function(ret, x)
    {
        ret.set_float(Math.cos(cr.to_radians(x)));
    };
    SysExps.prototype.tan = function(ret, x)
    {
        ret.set_float(Math.tan(cr.to_radians(x)));
    };
    SysExps.prototype.asin = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.asin(x)));
    };
    SysExps.prototype.acos = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.acos(x)));
    };
    SysExps.prototype.atan = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.atan(x)));
    };
    SysExps.prototype.exp = function(ret, x)
    {
        ret.set_float(Math.exp(x));
    };
    SysExps.prototype.ln = function(ret, x)
    {
        ret.set_float(Math.log(x));
    };
    SysExps.prototype.log10 = function(ret, x)
    {
        ret.set_float(Math.log(x) / Math.LN10);
    };
    SysExps.prototype.max = function(ret)
    {
		var max_ = arguments[1];
		var i, len;
		for (i = 2, len = arguments.length; i < len; i++)
		{
			if (max_ < arguments[i])
				max_ = arguments[i];
		}
		ret.set_float(max_);
    };
    SysExps.prototype.min = function(ret)
    {
        var min_ = arguments[1];
		var i, len;
		for (i = 2, len = arguments.length; i < len; i++)
		{
			if (min_ > arguments[i])
				min_ = arguments[i];
		}
		ret.set_float(min_);
    };
    SysExps.prototype.dt = function(ret)
    {
        ret.set_float(this.runtime.dt);
    };
    SysExps.prototype.timescale = function(ret)
    {
        ret.set_float(this.runtime.timescale);
    };
    SysExps.prototype.wallclocktime = function(ret)
    {
        ret.set_float((Date.now() - this.runtime.start_time) / 1000.0);
    };
    SysExps.prototype.time = function(ret)
    {
        ret.set_float(this.runtime.kahanTime.sum);
    };
    SysExps.prototype.tickcount = function(ret)
    {
        ret.set_int(this.runtime.tickcount);
    };
    SysExps.prototype.objectcount = function(ret)
    {
        ret.set_int(this.runtime.objectcount);
    };
    SysExps.prototype.fps = function(ret)
    {
        ret.set_int(this.runtime.fps);
    };
    SysExps.prototype.loopindex = function(ret, name_)
    {
		var loop, i, len;
        if (!this.runtime.loop_stack.length)
        {
            ret.set_int(0);
            return;
        }
        if (name_)
        {
            for (i = 0, len = this.runtime.loop_stack.length; i < len; i++)
            {
                loop = this.runtime.loop_stack[i];
                if (loop.name === name_)
                {
                    ret.set_int(loop.index);
                    return;
                }
            }
            ret.set_int(0);
        }
        else
        {
			loop = this.runtime.getCurrentLoop();
			ret.set_int(loop ? loop.index : -1);
        }
    };
    SysExps.prototype.distance = function(ret, x1, y1, x2, y2)
    {
        ret.set_float(cr.distanceTo(x1, y1, x2, y2));
    };
    SysExps.prototype.angle = function(ret, x1, y1, x2, y2)
    {
        ret.set_float(cr.to_degrees(cr.angleTo(x1, y1, x2, y2)));
    };
    SysExps.prototype.scrollx = function(ret)
    {
        ret.set_float(this.runtime.running_layout.scrollX);
    };
    SysExps.prototype.scrolly = function(ret)
    {
        ret.set_float(this.runtime.running_layout.scrollY);
    };
    SysExps.prototype.newline = function(ret)
    {
        ret.set_string("\n");
    };
    SysExps.prototype.lerp = function(ret, a, b, x)
    {
        ret.set_float(cr.lerp(a, b, x));
    };
	SysExps.prototype.qarp = function(ret, a, b, c, x)
    {
        ret.set_float(cr.qarp(a, b, c, x));
    };
	SysExps.prototype.cubic = function(ret, a, b, c, d, x)
    {
        ret.set_float(cr.cubic(a, b, c, d, x));
    };
	SysExps.prototype.cosp = function(ret, a, b, x)
    {
        ret.set_float(cr.cosp(a, b, x));
    };
    SysExps.prototype.windowwidth = function(ret)
    {
        ret.set_int(this.runtime.width);
    };
    SysExps.prototype.windowheight = function(ret)
    {
        ret.set_int(this.runtime.height);
    };
	SysExps.prototype.uppercase = function(ret, str)
	{
		ret.set_string(cr.is_string(str) ? str.toUpperCase() : "");
	};
	SysExps.prototype.lowercase = function(ret, str)
	{
		ret.set_string(cr.is_string(str) ? str.toLowerCase() : "");
	};
	SysExps.prototype.clamp = function(ret, x, l, u)
	{
		if (x < l)
			ret.set_float(l);
		else if (x > u)
			ret.set_float(u);
		else
			ret.set_float(x);
	};
	SysExps.prototype.layerscale = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.scale);
	};
	SysExps.prototype.layeropacity = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.opacity * 100);
	};
	SysExps.prototype.layerscalerate = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.zoomRate);
	};
	SysExps.prototype.layerparallaxx = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.parallaxX * 100);
	};
	SysExps.prototype.layerparallaxy = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.parallaxY * 100);
	};
	SysExps.prototype.layoutscale = function (ret)
	{
		if (this.runtime.running_layout)
			ret.set_float(this.runtime.running_layout.scale);
		else
			ret.set_float(0);
	};
	SysExps.prototype.layoutangle = function (ret)
	{
		ret.set_float(cr.to_degrees(this.runtime.running_layout.angle));
	};
	SysExps.prototype.layerangle = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(cr.to_degrees(layer.angle));
	};
	SysExps.prototype.layoutwidth = function (ret)
	{
		ret.set_int(this.runtime.running_layout.width);
	};
	SysExps.prototype.layoutheight = function (ret)
	{
		ret.set_int(this.runtime.running_layout.height);
	};
	SysExps.prototype.find = function (ret, text, searchstr)
	{
		if (cr.is_string(text) && cr.is_string(searchstr))
			ret.set_int(text.search(new RegExp(cr.regexp_escape(searchstr), "i")));
		else
			ret.set_int(-1);
	};
	SysExps.prototype.left = function (ret, text, n)
	{
		ret.set_string(cr.is_string(text) ? text.substr(0, n) : "");
	};
	SysExps.prototype.right = function (ret, text, n)
	{
		ret.set_string(cr.is_string(text) ? text.substr(text.length - n) : "");
	};
	SysExps.prototype.mid = function (ret, text, index_, length_)
	{
		ret.set_string(cr.is_string(text) ? text.substr(index_, length_) : "");
	};
	SysExps.prototype.tokenat = function (ret, text, index_, sep)
	{
		if (cr.is_string(text) && cr.is_string(sep))
		{
			var arr = text.split(sep);
			var i = cr.floor(index_);
			if (i < 0 || i >= arr.length)
				ret.set_string("");
			else
				ret.set_string(arr[i]);
		}
		else
			ret.set_string("");
	};
	SysExps.prototype.tokencount = function (ret, text, sep)
	{
		if (cr.is_string(text) && text.length)
			ret.set_int(text.split(sep).length);
		else
			ret.set_int(0);
	};
	SysExps.prototype.replace = function (ret, text, find_, replace_)
	{
		if (cr.is_string(text) && cr.is_string(find_) && cr.is_string(replace_))
			ret.set_string(text.replace(new RegExp(cr.regexp_escape(find_), "gi"), replace_));
		else
			ret.set_string(cr.is_string(text) ? text : "");
	};
	SysExps.prototype.trim = function (ret, text)
	{
		ret.set_string(cr.is_string(text) ? text.trim() : "");
	};
	SysExps.prototype.pi = function (ret)
	{
		ret.set_float(cr.PI);
	};
	SysExps.prototype.layoutname = function (ret)
	{
		if (this.runtime.running_layout)
			ret.set_string(this.runtime.running_layout.name);
		else
			ret.set_string("");
	};
	SysExps.prototype.renderer = function (ret)
	{
		ret.set_string(this.runtime.gl ? "webgl" : "canvas2d");
	};
	SysExps.prototype.anglediff = function (ret, a, b)
	{
		ret.set_float(cr.to_degrees(cr.angleDiff(cr.to_radians(a), cr.to_radians(b))));
	};
	SysExps.prototype.choose = function (ret)
	{
		var index = cr.floor(Math.random() * (arguments.length - 1));
		ret.set_any(arguments[index + 1]);
	};
	SysExps.prototype.rgb = function (ret, r, g, b)
	{
		ret.set_int(cr.RGB(r, g, b));
	};
	SysExps.prototype.projectversion = function (ret)
	{
		ret.set_string(this.runtime.versionstr);
	};
	SysExps.prototype.anglelerp = function (ret, a, b, x)
	{
		a = cr.to_radians(a);
		b = cr.to_radians(b);
		var diff = cr.angleDiff(a, b);
		if (cr.angleClockwise(b, a))
		{
			ret.set_float(cr.to_clamped_degrees(a + diff * x));
		}
		else
		{
			ret.set_float(cr.to_clamped_degrees(a - diff * x));
		}
	};
	SysExps.prototype.anglerotate = function (ret, a, b, c)
	{
		a = cr.to_radians(a);
		b = cr.to_radians(b);
		c = cr.to_radians(c);
		ret.set_float(cr.to_clamped_degrees(cr.angleRotate(a, b, c)));
	};
	SysExps.prototype.zeropad = function (ret, n, d)
	{
		var s = (n < 0 ? "-" : "");
		if (n < 0) n = -n;
		var zeroes = d - n.toString().length;
		for (var i = 0; i < zeroes; i++)
			s += "0";
		ret.set_string(s + n.toString());
	};
	SysExps.prototype.cpuutilisation = function (ret)
	{
		ret.set_float(this.runtime.cpuutilisation / 1000);
	};
	SysExps.prototype.viewportleft = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewLeft : 0);
	};
	SysExps.prototype.viewporttop = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewTop : 0);
	};
	SysExps.prototype.viewportright = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewRight : 0);
	};
	SysExps.prototype.viewportbottom = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewBottom : 0);
	};
	SysExps.prototype.loadingprogress = function (ret)
	{
		ret.set_float(this.runtime.loadingprogress);
	};
	SysExps.prototype.unlerp = function(ret, a, b, y)
    {
        ret.set_float(cr.unlerp(a, b, y));
    };
	SysExps.prototype.canvassnapshot = function (ret)
	{
		ret.set_string(this.runtime.snapshotData);
	};
	SysExps.prototype.urlencode = function (ret, s)
	{
		ret.set_string(encodeURIComponent(s));
	};
	SysExps.prototype.urldecode = function (ret, s)
	{
		ret.set_string(decodeURIComponent(s));
	};
	SysExps.prototype.canvastolayerx = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.canvasToLayer(x, y, true) : 0);
	};
	SysExps.prototype.canvastolayery = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.canvasToLayer(x, y, false) : 0);
	};
	SysExps.prototype.layertocanvasx = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.layerToCanvas(x, y, true) : 0);
	};
	SysExps.prototype.layertocanvasy = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.layerToCanvas(x, y, false) : 0);
	};
	SysExps.prototype.savestatejson = function (ret)
	{
		ret.set_string(this.runtime.lastSaveJson);
	};
	SysExps.prototype.imagememoryusage = function (ret)
	{
		if (this.runtime.glwrap)
			ret.set_float(Math.round(100 * this.runtime.glwrap.estimateVRAM() / (1024 * 1024)) / 100);
		else
			ret.set_float(0);
	};
	SysExps.prototype.regexsearch = function (ret, str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		ret.set_int(str_ ? str_.search(regex) : -1);
	};
	SysExps.prototype.regexreplace = function (ret, str_, regex_, flags_, replace_)
	{
		var regex = getRegex(regex_, flags_);
		ret.set_string(str_ ? str_.replace(regex, replace_) : "");
	};
	var regexMatches = [];
	var lastMatchesStr = "";
	var lastMatchesRegex = "";
	var lastMatchesFlags = "";
	function updateRegexMatches(str_, regex_, flags_)
	{
		if (str_ === lastMatchesStr && regex_ === lastMatchesRegex && flags_ === lastMatchesFlags)
			return;
		var regex = getRegex(regex_, flags_);
		regexMatches = str_.match(regex);
		lastMatchesStr = str_;
		lastMatchesRegex = regex_;
		lastMatchesFlags = flags_;
	};
	SysExps.prototype.regexmatchcount = function (ret, str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		updateRegexMatches(str_, regex_, flags_);
		ret.set_int(regexMatches ? regexMatches.length : 0);
	};
	SysExps.prototype.regexmatchat = function (ret, str_, regex_, flags_, index_)
	{
		index_ = Math.floor(index_);
		var regex = getRegex(regex_, flags_);
		updateRegexMatches(str_, regex_, flags_);
		if (!regexMatches || index_ < 0 || index_ >= regexMatches.length)
			ret.set_string("");
		else
			ret.set_string(regexMatches[index_]);
	};
	SysExps.prototype.infinity = function (ret)
	{
		ret.set_float(Infinity);
	};
	SysExps.prototype.setbit = function (ret, n, b, v)
	{
		n = n | 0;
		b = b | 0;
		v = (v !== 0 ? 1 : 0);
		ret.set_int((n & ~(1 << b)) | (v << b));
	};
	SysExps.prototype.togglebit = function (ret, n, b)
	{
		n = n | 0;
		b = b | 0;
		ret.set_int(n ^ (1 << b));
	};
	SysExps.prototype.getbit = function (ret, n, b)
	{
		n = n | 0;
		b = b | 0;
		ret.set_int((n & (1 << b)) ? 1 : 0);
	};
	sysProto.exps = new SysExps();
	sysProto.runWaits = function ()
	{
		var i, j, len, w, k, s, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		for (i = 0, len = this.waits.length; i < len; i++)
		{
			w = this.waits[i];
			if (w.time > this.runtime.kahanTime.sum)
				continue;
			evinfo.current_event = w.ev;
			evinfo.actindex = w.actindex;
			evinfo.cndindex = 0;
			for (k in w.sols)
			{
				if (w.sols.hasOwnProperty(k))
				{
					s = this.runtime.types_by_index[parseInt(k, 10)].getCurrentSol();
					ss = w.sols[k];
					s.select_all = ss.sa;
					cr.shallowAssignArray(s.instances, ss.insts);
					freeSolStateObject(ss);
				}
			}
			w.ev.resume_actions_and_subevents();
			this.runtime.clearSol(w.solModifiers);
			w.deleteme = true;
		}
		for (i = 0, j = 0, len = this.waits.length; i < len; i++)
		{
			w = this.waits[i];
			this.waits[j] = w;
			if (w.deleteme)
				freeWaitObject(w);
			else
				j++;
		}
		this.waits.length = j;
	};
}());
;
(function () {
	cr.add_common_aces = function (m)
	{
		var pluginProto = m[0].prototype;
		var singleglobal_ = m[1];
		var position_aces = m[3];
		var size_aces = m[4];
		var angle_aces = m[5];
		var appearance_aces = m[6];
		var zorder_aces = m[7];
		var effects_aces = m[8];
		if (!pluginProto.cnds)
			pluginProto.cnds = {};
		if (!pluginProto.acts)
			pluginProto.acts = {};
		if (!pluginProto.exps)
			pluginProto.exps = {};
		var cnds = pluginProto.cnds;
		var acts = pluginProto.acts;
		var exps = pluginProto.exps;
		if (position_aces)
		{
			cnds.CompareX = function (cmp, x)
			{
				return cr.do_cmp(this.x, cmp, x);
			};
			cnds.CompareY = function (cmp, y)
			{
				return cr.do_cmp(this.y, cmp, y);
			};
			cnds.IsOnScreen = function ()
			{
				var layer = this.layer;
				this.update_bbox();
				var bbox = this.bbox;
				return !(bbox.right < layer.viewLeft || bbox.bottom < layer.viewTop || bbox.left > layer.viewRight || bbox.top > layer.viewBottom);
			};
			cnds.IsOutsideLayout = function ()
			{
				this.update_bbox();
				var bbox = this.bbox;
				var layout = this.runtime.running_layout;
				return (bbox.right < 0 || bbox.bottom < 0 || bbox.left > layout.width || bbox.top > layout.height);
			};
			cnds.PickDistance = function (which, x, y)
			{
				var sol = this.getCurrentSol();
				var instances = sol.getObjects();
				if (!instances.length)
					return false;
				var inst = instances[0];
				var pickme = inst;
				var dist = cr.distanceTo(inst.x, inst.y, x, y);
				var i, len, d;
				for (i = 1, len = instances.length; i < len; i++)
				{
					inst = instances[i];
					d = cr.distanceTo(inst.x, inst.y, x, y);
					if ((which === 0 && d < dist) || (which === 1 && d > dist))
					{
						dist = d;
						pickme = inst;
					}
				}
				sol.pick_one(pickme);
				return true;
			};
			acts.SetX = function (x)
			{
				if (this.x !== x)
				{
					this.x = x;
					this.set_bbox_changed();
				}
			};
			acts.SetY = function (y)
			{
				if (this.y !== y)
				{
					this.y = y;
					this.set_bbox_changed();
				}
			};
			acts.SetPos = function (x, y)
			{
				if (this.x !== x || this.y !== y)
				{
					this.x = x;
					this.y = y;
					this.set_bbox_changed();
				}
			};
			acts.SetPosToObject = function (obj, imgpt)
			{
				var inst = obj.getPairedInstance(this);
				if (!inst)
					return;
				var newx, newy;
				if (inst.getImagePoint)
				{
					newx = inst.getImagePoint(imgpt, true);
					newy = inst.getImagePoint(imgpt, false);
				}
				else
				{
					newx = inst.x;
					newy = inst.y;
				}
				if (this.x !== newx || this.y !== newy)
				{
					this.x = newx;
					this.y = newy;
					this.set_bbox_changed();
				}
			};
			acts.MoveForward = function (dist)
			{
				if (dist !== 0)
				{
					this.x += Math.cos(this.angle) * dist;
					this.y += Math.sin(this.angle) * dist;
					this.set_bbox_changed();
				}
			};
			acts.MoveAtAngle = function (a, dist)
			{
				if (dist !== 0)
				{
					this.x += Math.cos(cr.to_radians(a)) * dist;
					this.y += Math.sin(cr.to_radians(a)) * dist;
					this.set_bbox_changed();
				}
			};
			exps.X = function (ret)
			{
				ret.set_float(this.x);
			};
			exps.Y = function (ret)
			{
				ret.set_float(this.y);
			};
			exps.dt = function (ret)
			{
				ret.set_float(this.runtime.getDt(this));
			};
		}
		if (size_aces)
		{
			cnds.CompareWidth = function (cmp, w)
			{
				return cr.do_cmp(this.width, cmp, w);
			};
			cnds.CompareHeight = function (cmp, h)
			{
				return cr.do_cmp(this.height, cmp, h);
			};
			acts.SetWidth = function (w)
			{
				if (this.width !== w)
				{
					this.width = w;
					this.set_bbox_changed();
				}
			};
			acts.SetHeight = function (h)
			{
				if (this.height !== h)
				{
					this.height = h;
					this.set_bbox_changed();
				}
			};
			acts.SetSize = function (w, h)
			{
				if (this.width !== w || this.height !== h)
				{
					this.width = w;
					this.height = h;
					this.set_bbox_changed();
				}
			};
			exps.Width = function (ret)
			{
				ret.set_float(this.width);
			};
			exps.Height = function (ret)
			{
				ret.set_float(this.height);
			};
			exps.BBoxLeft = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.left);
			};
			exps.BBoxTop = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.top);
			};
			exps.BBoxRight = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.right);
			};
			exps.BBoxBottom = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.bottom);
			};
		}
		if (angle_aces)
		{
			cnds.AngleWithin = function (within, a)
			{
				return cr.angleDiff(this.angle, cr.to_radians(a)) <= cr.to_radians(within);
			};
			cnds.IsClockwiseFrom = function (a)
			{
				return cr.angleClockwise(this.angle, cr.to_radians(a));
			};
			cnds.IsBetweenAngles = function (a, b)
			{
				var lower = cr.to_clamped_radians(a);
				var upper = cr.to_clamped_radians(b);
				var angle = cr.clamp_angle(this.angle);
				var obtuse = (!cr.angleClockwise(upper, lower));
				if (obtuse)
					return !(!cr.angleClockwise(angle, lower) && cr.angleClockwise(angle, upper));
				else
					return cr.angleClockwise(angle, lower) && !cr.angleClockwise(angle, upper);
			};
			acts.SetAngle = function (a)
			{
				var newangle = cr.to_radians(cr.clamp_angle_degrees(a));
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			acts.RotateClockwise = function (a)
			{
				if (a !== 0 && !isNaN(a))
				{
					this.angle += cr.to_radians(a);
					this.angle = cr.clamp_angle(this.angle);
					this.set_bbox_changed();
				}
			};
			acts.RotateCounterclockwise = function (a)
			{
				if (a !== 0 && !isNaN(a))
				{
					this.angle -= cr.to_radians(a);
					this.angle = cr.clamp_angle(this.angle);
					this.set_bbox_changed();
				}
			};
			acts.RotateTowardAngle = function (amt, target)
			{
				var newangle = cr.angleRotate(this.angle, cr.to_radians(target), cr.to_radians(amt));
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			acts.RotateTowardPosition = function (amt, x, y)
			{
				var dx = x - this.x;
				var dy = y - this.y;
				var target = Math.atan2(dy, dx);
				var newangle = cr.angleRotate(this.angle, target, cr.to_radians(amt));
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			acts.SetTowardPosition = function (x, y)
			{
				var dx = x - this.x;
				var dy = y - this.y;
				var newangle = Math.atan2(dy, dx);
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			exps.Angle = function (ret)
			{
				ret.set_float(cr.to_clamped_degrees(this.angle));
			};
		}
		if (!singleglobal_)
		{
			cnds.CompareInstanceVar = function (iv, cmp, val)
			{
				return cr.do_cmp(this.instance_vars[iv], cmp, val);
			};
			cnds.IsBoolInstanceVarSet = function (iv)
			{
				return this.instance_vars[iv];
			};
			cnds.PickInstVarHiLow = function (which, iv)
			{
				var sol = this.getCurrentSol();
				var instances = sol.getObjects();
				if (!instances.length)
					return false;
				var inst = instances[0];
				var pickme = inst;
				var val = inst.instance_vars[iv];
				var i, len, v;
				for (i = 1, len = instances.length; i < len; i++)
				{
					inst = instances[i];
					v = inst.instance_vars[iv];
					if ((which === 0 && v < val) || (which === 1 && v > val))
					{
						val = v;
						pickme = inst;
					}
				}
				sol.pick_one(pickme);
				return true;
			};
			cnds.PickByUID = function (u)
			{
				var i, len, j, inst, families, instances, sol;
				var cnd = this.runtime.getCurrentCondition();
				if (cnd.inverted)
				{
					sol = this.getCurrentSol();
					if (sol.select_all)
					{
						sol.select_all = false;
						sol.instances.length = 0;
						sol.else_instances.length = 0;
						instances = this.instances;
						for (i = 0, len = instances.length; i < len; i++)
						{
							inst = instances[i];
							if (inst.uid === u)
								sol.else_instances.push(inst);
							else
								sol.instances.push(inst);
						}
						this.applySolToContainer();
						return !!sol.instances.length;
					}
					else
					{
						for (i = 0, j = 0, len = sol.instances.length; i < len; i++)
						{
							inst = sol.instances[i];
							sol.instances[j] = inst;
							if (inst.uid === u)
							{
								sol.else_instances.push(inst);
							}
							else
								j++;
						}
						sol.instances.length = j;
						this.applySolToContainer();
						return !!sol.instances.length;
					}
				}
				else
				{
					inst = this.runtime.getObjectByUID(u);
					if (!inst)
						return false;
					sol = this.getCurrentSol();
					if (!sol.select_all && sol.instances.indexOf(inst) === -1)
						return false;		// not picked
					if (this.is_family)
					{
						families = inst.type.families;
						for (i = 0, len = families.length; i < len; i++)
						{
							if (families[i] === this)
							{
								sol.pick_one(inst);
								this.applySolToContainer();
								return true;
							}
						}
					}
					else if (inst.type === this)
					{
						sol.pick_one(inst);
						this.applySolToContainer();
						return true;
					}
					return false;
				}
			};
			cnds.OnCreated = function ()
			{
				return true;
			};
			cnds.OnDestroyed = function ()
			{
				return true;
			};
			acts.SetInstanceVar = function (iv, val)
			{
				var myinstvars = this.instance_vars;
				if (cr.is_number(myinstvars[iv]))
				{
					if (cr.is_number(val))
						myinstvars[iv] = val;
					else
						myinstvars[iv] = parseFloat(val);
				}
				else if (cr.is_string(myinstvars[iv]))
				{
					if (cr.is_string(val))
						myinstvars[iv] = val;
					else
						myinstvars[iv] = val.toString();
				}
				else
;
			};
			acts.AddInstanceVar = function (iv, val)
			{
				var myinstvars = this.instance_vars;
				if (cr.is_number(myinstvars[iv]))
				{
					if (cr.is_number(val))
						myinstvars[iv] += val;
					else
						myinstvars[iv] += parseFloat(val);
				}
				else if (cr.is_string(myinstvars[iv]))
				{
					if (cr.is_string(val))
						myinstvars[iv] += val;
					else
						myinstvars[iv] += val.toString();
				}
				else
;
			};
			acts.SubInstanceVar = function (iv, val)
			{
				var myinstvars = this.instance_vars;
				if (cr.is_number(myinstvars[iv]))
				{
					if (cr.is_number(val))
						myinstvars[iv] -= val;
					else
						myinstvars[iv] -= parseFloat(val);
				}
				else
;
			};
			acts.SetBoolInstanceVar = function (iv, val)
			{
				this.instance_vars[iv] = val ? 1 : 0;
			};
			acts.ToggleBoolInstanceVar = function (iv)
			{
				this.instance_vars[iv] = 1 - this.instance_vars[iv];
			};
			acts.Destroy = function ()
			{
				this.runtime.DestroyInstance(this);
			};
			if (!acts.LoadFromJsonString)
			{
				acts.LoadFromJsonString = function (str_)
				{
					var o, i, len, binst;
					try {
						o = JSON.parse(str_);
					}
					catch (e) {
						return;
					}
					this.runtime.loadInstanceFromJSON(this, o, true);
					if (this.afterLoad)
						this.afterLoad();
					if (this.behavior_insts)
					{
						for (i = 0, len = this.behavior_insts.length; i < len; ++i)
						{
							binst = this.behavior_insts[i];
							if (binst.afterLoad)
								binst.afterLoad();
						}
					}
				};
			}
			exps.Count = function (ret)
			{
				var count = ret.object_class.instances.length;
				var i, len, inst;
				for (i = 0, len = this.runtime.createRow.length; i < len; i++)
				{
					inst = this.runtime.createRow[i];
					if (ret.object_class.is_family)
					{
						if (inst.type.families.indexOf(ret.object_class) >= 0)
							count++;
					}
					else
					{
						if (inst.type === ret.object_class)
							count++;
					}
				}
				ret.set_int(count);
			};
			exps.PickedCount = function (ret)
			{
				ret.set_int(ret.object_class.getCurrentSol().getObjects().length);
			};
			exps.UID = function (ret)
			{
				ret.set_int(this.uid);
			};
			exps.IID = function (ret)
			{
				ret.set_int(this.get_iid());
			};
			if (!exps.AsJSON)
			{
				exps.AsJSON = function (ret)
				{
					ret.set_string(JSON.stringify(this.runtime.saveInstanceToJSON(this, true)));
				};
			}
		}
		if (appearance_aces)
		{
			cnds.IsVisible = function ()
			{
				return this.visible;
			};
			acts.SetVisible = function (v)
			{
				if (!v !== !this.visible)
				{
					this.visible = v;
					this.runtime.redraw = true;
				}
			};
			cnds.CompareOpacity = function (cmp, x)
			{
				return cr.do_cmp(cr.round6dp(this.opacity * 100), cmp, x);
			};
			acts.SetOpacity = function (x)
			{
				var new_opacity = x / 100.0;
				if (new_opacity < 0)
					new_opacity = 0;
				else if (new_opacity > 1)
					new_opacity = 1;
				if (new_opacity !== this.opacity)
				{
					this.opacity = new_opacity;
					this.runtime.redraw = true;
				}
			};
			exps.Opacity = function (ret)
			{
				ret.set_float(cr.round6dp(this.opacity * 100.0));
			};
		}
		if (zorder_aces)
		{
			cnds.IsOnLayer = function (layer_)
			{
				if (!layer_)
					return false;
				return this.layer === layer_;
			};
			cnds.PickTopBottom = function (which_)
			{
				var sol = this.getCurrentSol();
				var instances = sol.getObjects();
				if (!instances.length)
					return false;
				var inst = instances[0];
				var pickme = inst;
				var i, len;
				for (i = 1, len = instances.length; i < len; i++)
				{
					inst = instances[i];
					if (which_ === 0)
					{
						if (inst.layer.index > pickme.layer.index || (inst.layer.index === pickme.layer.index && inst.get_zindex() > pickme.get_zindex()))
						{
							pickme = inst;
						}
					}
					else
					{
						if (inst.layer.index < pickme.layer.index || (inst.layer.index === pickme.layer.index && inst.get_zindex() < pickme.get_zindex()))
						{
							pickme = inst;
						}
					}
				}
				sol.pick_one(pickme);
				return true;
			};
			acts.MoveToTop = function ()
			{
				var zindex = this.get_zindex();
				if (zindex === this.layer.instances.length - 1)
					return;
				cr.arrayRemove(this.layer.instances, zindex);
				this.layer.instances.push(this);
				this.runtime.redraw = true;
				this.layer.zindices_stale = true;
			};
			acts.MoveToBottom = function ()
			{
				var zindex = this.get_zindex();
				if (zindex === 0)
					return;
				cr.arrayRemove(this.layer.instances, zindex);
				this.layer.instances.unshift(this);
				this.runtime.redraw = true;
				this.layer.zindices_stale = true;
			};
			acts.MoveToLayer = function (layerMove)
			{
				if (!layerMove || layerMove == this.layer)
					return;
				cr.arrayRemove(this.layer.instances, this.get_zindex());
				this.layer.zindices_stale = true;
				this.layer = layerMove;
				this.zindex = layerMove.instances.length;
				layerMove.instances.push(this);
				this.runtime.redraw = true;
			};
			acts.ZMoveToObject = function (where_, obj_)
			{
				var isafter = (where_ === 0);
				if (!obj_)
					return;
				var other = obj_.getFirstPicked(this);
				if (!other || other.uid === this.uid)
					return;
				if (this.layer.index !== other.layer.index)
				{
					cr.arrayRemove(this.layer.instances, this.get_zindex());
					this.layer.zindices_stale = true;
					this.layer = other.layer;
					this.zindex = other.layer.instances.length;
					other.layer.instances.push(this);
				}
				var myZ = this.get_zindex();
				var insertZ = other.get_zindex();
				cr.arrayRemove(this.layer.instances, myZ);
				if (myZ < insertZ)
					insertZ--;
				if (isafter)
					insertZ++;
				if (insertZ === this.layer.instances.length)
					this.layer.instances.push(this);
				else
					this.layer.instances.splice(insertZ, 0, this);
				this.layer.zindices_stale = true;
				this.runtime.redraw = true;
			};
			exps.LayerNumber = function (ret)
			{
				ret.set_int(this.layer.number);
			};
			exps.LayerName = function (ret)
			{
				ret.set_string(this.layer.name);
			};
			exps.ZIndex = function (ret)
			{
				ret.set_int(this.get_zindex());
			};
		}
		if (effects_aces)
		{
			acts.SetEffectEnabled = function (enable_, effectname_)
			{
				if (!this.runtime.glwrap)
					return;
				var i = this.type.getEffectIndexByName(effectname_);
				if (i < 0)
					return;		// effect name not found
				var enable = (enable_ === 1);
				if (this.active_effect_flags[i] === enable)
					return;		// no change
				this.active_effect_flags[i] = enable;
				this.updateActiveEffects();
				this.runtime.redraw = true;
			};
			acts.SetEffectParam = function (effectname_, index_, value_)
			{
				if (!this.runtime.glwrap)
					return;
				var i = this.type.getEffectIndexByName(effectname_);
				if (i < 0)
					return;		// effect name not found
				var et = this.type.effect_types[i];
				var params = this.effect_params[i];
				index_ = Math.floor(index_);
				if (index_ < 0 || index_ >= params.length)
					return;		// effect index out of bounds
				if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
					value_ /= 100.0;
				if (params[index_] === value_)
					return;		// no change
				params[index_] = value_;
				if (et.active)
					this.runtime.redraw = true;
			};
		}
	};
	cr.set_bbox_changed = function ()
	{
		this.bbox_changed = true;      		// will recreate next time box requested
		this.cell_changed = true;
		this.type.any_cell_changed = true;	// avoid unnecessary updateAllBBox() calls
		this.runtime.redraw = true;     	// assume runtime needs to redraw
		var i, len, callbacks = this.bbox_changed_callbacks;
		for (i = 0, len = callbacks.length; i < len; ++i)
		{
			callbacks[i](this);
		}
	};
	cr.add_bbox_changed_callback = function (f)
	{
		if (f)
		{
			this.bbox_changed_callbacks.push(f);
		}
	};
	cr.update_bbox = function ()
	{
		if (!this.bbox_changed)
			return;                 // bounding box not changed
		var bbox = this.bbox;
		var bquad = this.bquad;
		bbox.set(this.x, this.y, this.x + this.width, this.y + this.height);
		bbox.offset(-this.hotspotX * this.width, -this.hotspotY * this.height);
		if (!this.angle)
		{
			bquad.set_from_rect(bbox);    // make bounding quad from box
		}
		else
		{
			bbox.offset(-this.x, -this.y);       			// translate to origin
			bquad.set_from_rotated_rect(bbox, this.angle);	// rotate around origin
			bquad.offset(this.x, this.y);      				// translate back to original position
			bquad.bounding_box(bbox);
		}
		bbox.normalize();
		this.bbox_changed = false;  // bounding box up to date
	};
	var tmprc = new cr.rect(0, 0, 0, 0);
	cr.update_collision_cell = function ()
	{
		if (!this.cell_changed || !this.collisionsEnabled)
			return;
		this.update_bbox();
		var mygrid = this.type.collision_grid;
		var collcells = this.collcells;
		var bbox = this.bbox;
		tmprc.set(mygrid.XToCell(bbox.left), mygrid.YToCell(bbox.top), mygrid.XToCell(bbox.right), mygrid.YToCell(bbox.bottom));
		if (collcells.equals(tmprc))
			return;
		if (collcells.right < collcells.left)
			mygrid.update(this, null, tmprc);		// first insertion with invalid rect: don't provide old range
		else
			mygrid.update(this, collcells, tmprc);
		collcells.copy(tmprc);
		this.cell_changed = false;
	};
	cr.inst_contains_pt = function (x, y)
	{
		if (!this.bbox.contains_pt(x, y))
			return false;
		if (!this.bquad.contains_pt(x, y))
			return false;
		if (this.collision_poly && !this.collision_poly.is_empty())
		{
			this.collision_poly.cache_poly(this.width, this.height, this.angle);
			return this.collision_poly.contains_pt(x - this.x, y - this.y);
		}
		else
			return true;
	};
	cr.inst_get_iid = function ()
	{
		this.type.updateIIDs();
		return this.iid;
	};
	cr.inst_get_zindex = function ()
	{
		this.layer.updateZIndices();
		return this.zindex;
	};
	cr.inst_updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et, inst;
		for (i = 0, len = this.active_effect_flags.length; i < len; i++)
		{
			if (this.active_effect_flags[i])
				this.active_effect_types.push(this.type.effect_types[i]);
		}
		this.uses_shaders = !!this.active_effect_types.length;
	};
	cr.inst_toString = function ()
	{
		return "Inst" + this.puid;
	};
	cr.type_getFirstPicked = function (frominst)
	{
		if (frominst && frominst.is_contained && frominst.type != this)
		{
			var i, len, s;
			for (i = 0, len = frominst.siblings.length; i < len; i++)
			{
				s = frominst.siblings[i];
				if (s.type == this)
					return s;
			}
		}
		var instances = this.getCurrentSol().getObjects();
		if (instances.length)
			return instances[0];
		else
			return null;
	};
	cr.type_getPairedInstance = function (inst)
	{
		var instances = this.getCurrentSol().getObjects();
		if (instances.length)
			return instances[inst.get_iid() % instances.length];
		else
			return null;
	};
	cr.type_updateIIDs = function ()
	{
		if (!this.stale_iids || this.is_family)
			return;		// up to date or is family - don't want family to overwrite IIDs
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
			this.instances[i].iid = i;
		var next_iid = i;
		var createRow = this.runtime.createRow;
		for (i = 0, len = createRow.length; i < len; ++i)
		{
			if (createRow[i].type === this)
				createRow[i].iid = next_iid++;
		}
		this.stale_iids = false;
	};
	cr.type_getInstanceByIID = function (i)
	{
		if (i < this.instances.length)
			return this.instances[i];
		i -= this.instances.length;
		var createRow = this.runtime.createRow;
		var j, lenj;
		for (j = 0, lenj = createRow.length; j < lenj; ++j)
		{
			if (createRow[j].type === this)
			{
				if (i === 0)
					return createRow[j];
				--i;
			}
		}
;
		return null;
	};
	cr.type_getCurrentSol = function ()
	{
		return this.solstack[this.cur_sol];
	};
	cr.type_pushCleanSol = function ()
	{
		this.cur_sol++;
		if (this.cur_sol === this.solstack.length)
			this.solstack.push(new cr.selection(this));
		else
			this.solstack[this.cur_sol].select_all = true;  // else clear next SOL
	};
	cr.type_pushCopySol = function ()
	{
		this.cur_sol++;
		if (this.cur_sol === this.solstack.length)
			this.solstack.push(new cr.selection(this));
		var clonesol = this.solstack[this.cur_sol];
		var prevsol = this.solstack[this.cur_sol - 1];
		if (prevsol.select_all)
			clonesol.select_all = true;
		else
		{
			clonesol.select_all = false;
			cr.shallowAssignArray(clonesol.instances, prevsol.instances);
			cr.shallowAssignArray(clonesol.else_instances, prevsol.else_instances);
		}
	};
	cr.type_popSol = function ()
	{
;
		this.cur_sol--;
	};
	cr.type_getBehaviorByName = function (behname)
	{
		var i, len, j, lenj, f, index = 0;
		if (!this.is_family)
		{
			for (i = 0, len = this.families.length; i < len; i++)
			{
				f = this.families[i];
				for (j = 0, lenj = f.behaviors.length; j < lenj; j++)
				{
					if (behname === f.behaviors[j].name)
					{
						this.extra.lastBehIndex = index;
						return f.behaviors[j];
					}
					index++;
				}
			}
		}
		for (i = 0, len = this.behaviors.length; i < len; i++) {
			if (behname === this.behaviors[i].name)
			{
				this.extra.lastBehIndex = index;
				return this.behaviors[i];
			}
			index++;
		}
		return null;
	};
	cr.type_getBehaviorIndexByName = function (behname)
	{
		var b = this.getBehaviorByName(behname);
		if (b)
			return this.extra.lastBehIndex;
		else
			return -1;
	};
	cr.type_getEffectIndexByName = function (name_)
	{
		var i, len;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			if (this.effect_types[i].name === name_)
				return i;
		}
		return -1;
	};
	cr.type_applySolToContainer = function ()
	{
		if (!this.is_contained || this.is_family)
			return;
		var i, len, j, lenj, t, sol, sol2;
		this.updateIIDs();
		sol = this.getCurrentSol();
		var select_all = sol.select_all;
		var es = this.runtime.getCurrentEventStack();
		var orblock = es && es.current_event && es.current_event.orblock;
		for (i = 0, len = this.container.length; i < len; i++)
		{
			t = this.container[i];
			if (t === this)
				continue;
			t.updateIIDs();
			sol2 = t.getCurrentSol();
			sol2.select_all = select_all;
			if (!select_all)
			{
				sol2.instances.length = sol.instances.length;
				for (j = 0, lenj = sol.instances.length; j < lenj; j++)
					sol2.instances[j] = t.getInstanceByIID(sol.instances[j].iid);
				if (orblock)
				{
					sol2.else_instances.length = sol.else_instances.length;
					for (j = 0, lenj = sol.else_instances.length; j < lenj; j++)
						sol2.else_instances[j] = t.getInstanceByIID(sol.else_instances[j].iid);
				}
			}
		}
	};
	cr.type_toString = function ()
	{
		return "Type" + this.sid;
	};
	cr.do_cmp = function (x, cmp, y)
	{
		if (typeof x === "undefined" || typeof y === "undefined")
			return false;
		switch (cmp)
		{
			case 0:     // equal
				return x === y;
			case 1:     // not equal
				return x !== y;
			case 2:     // less
				return x < y;
			case 3:     // less/equal
				return x <= y;
			case 4:     // greater
				return x > y;
			case 5:     // greater/equal
				return x >= y;
			default:
;
				return false;
		}
	};
})();
cr.shaders = {};
cr.shaders["gamma"] = {src: ["varying mediump vec2 vTex;",
"uniform lowp sampler2D samplerFront;",
"uniform mediump float gamma;",
"void main(void)",
"{",
"lowp vec4 front = texture2D(samplerFront, vTex);",
"gl_FragColor = vec4(pow(front.rgb, vec3(gamma)), front.a);",
"}"
].join("\n"),
	extendBoxHorizontal: 0,
	extendBoxVertical: 0,
	crossSampling: false,
	animated: false,
	parameters: [["gamma", 0, 0]] }
cr.shaders["setcolor"] = {src: ["varying mediump vec2 vTex;",
"uniform lowp sampler2D samplerFront;",
"uniform lowp float red;",
"uniform lowp float green;",
"uniform lowp float blue;",
"void main(void)",
"{",
"lowp float a = texture2D(samplerFront, vTex).a;",
"gl_FragColor = vec4(vec3(red, green, blue) * a, a);",
"}"
].join("\n"),
	extendBoxHorizontal: 0,
	extendBoxVertical: 0,
	crossSampling: false,
	animated: false,
	parameters: [["red", 0, 1], ["green", 0, 1], ["blue", 0, 1]] }
;
;
cr.plugins_.Audio = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Audio.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	var audRuntime = null;
	var audInst = null;
	var audTag = "";
	var appPath = "";			// for PhoneGap only
	var API_HTML5 = 0;
	var API_WEBAUDIO = 1;
	var API_PHONEGAP = 2;
	var API_APPMOBI = 3;
	var api = API_HTML5;
	var context = null;
	var audioBuffers = [];		// cache of buffers
	var audioInstances = [];	// cache of instances
	var lastAudio = null;
	var useOgg = false;			// determined at create time
	var timescale_mode = 0;
	var silent = false;
	var masterVolume = 1;
	var listenerX = 0;
	var listenerY = 0;
	var panningModel = 1;		// HRTF
	var distanceModel = 1;		// Inverse
	var refDistance = 10;
	var maxDistance = 10000;
	var rolloffFactor = 1;
	var micSource = null;
	var micTag = "";
	var isMusicWorkaround = false;
	var musicPlayNextTouch = [];
	function dbToLinear(x)
	{
		var v = dbToLinear_nocap(x);
		if (v < 0)
			v = 0;
		if (v > 1)
			v = 1;
		return v;
	};
	function linearToDb(x)
	{
		if (x < 0)
			x = 0;
		if (x > 1)
			x = 1;
		return linearToDb_nocap(x);
	};
	function dbToLinear_nocap(x)
	{
		return Math.pow(10, x / 20);
	};
	function linearToDb_nocap(x)
	{
		return (Math.log(x) / Math.log(10)) * 20;
	};
	var effects = {};
	function getDestinationForTag(tag)
	{
		tag = tag.toLowerCase();
		if (effects.hasOwnProperty(tag))
		{
			if (effects[tag].length)
				return effects[tag][0].getInputNode();
		}
		return context["destination"];
	};
	function createGain()
	{
		if (context["createGain"])
			return context["createGain"]();
		else
			return context["createGainNode"]();
	};
	function createDelay(d)
	{
		if (context["createDelay"])
			return context["createDelay"](d);
		else
			return context["createDelayNode"](d);
	};
	function startSource(s)
	{
		if (s["start"])
			s["start"](0);
		else
			s["noteOn"](0);
	};
	function startSourceAt(s, x, d)
	{
		if (s["start"])
			s["start"](0, x);
		else
			s["noteGrainOn"](0, x, d - x);
	};
	function stopSource(s)
	{
		try {
			if (s["stop"])
				s["stop"](0);
			else
				s["noteOff"](0);
		}
		catch (e) {}
	};
	function setAudioParam(ap, value, ramp, time)
	{
		if (!ap)
			return;		// iOS is missing some parameters
		ap["cancelScheduledValues"](0);
		if (time === 0)
		{
			ap["value"] = value;
			return;
		}
		var curTime = context["currentTime"];
		time += curTime;
		switch (ramp) {
		case 0:		// step
			ap["setValueAtTime"](value, time);
			break;
		case 1:		// linear
			ap["setValueAtTime"](ap["value"], curTime);		// to set what to ramp from
			ap["linearRampToValueAtTime"](value, time);
			break;
		case 2:		// exponential
			ap["setValueAtTime"](ap["value"], curTime);		// to set what to ramp from
			ap["exponentialRampToValueAtTime"](value, time);
			break;
		}
	};
	var filterTypes = ["lowpass", "highpass", "bandpass", "lowshelf", "highshelf", "peaking", "notch", "allpass"];
	function FilterEffect(type, freq, detune, q, gain, mix)
	{
		this.type = "filter";
		this.params = [type, freq, detune, q, gain, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.filterNode = context["createBiquadFilter"]();
		if (typeof this.filterNode["type"] === "number")
			this.filterNode["type"] = type;
		else
			this.filterNode["type"] = filterTypes[type];
		this.filterNode["frequency"]["value"] = freq;
		if (this.filterNode["detune"])		// iOS 6 doesn't have detune yet
			this.filterNode["detune"]["value"] = detune;
		this.filterNode["Q"]["value"] = q;
		this.filterNode["gain"]["value"] = gain;
		this.inputNode["connect"](this.filterNode);
		this.inputNode["connect"](this.dryNode);
		this.filterNode["connect"](this.wetNode);
	};
	FilterEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	FilterEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.filterNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	FilterEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	FilterEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[5] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 1:		// filter frequency
			this.params[1] = value;
			setAudioParam(this.filterNode["frequency"], value, ramp, time);
			break;
		case 2:		// filter detune
			this.params[2] = value;
			setAudioParam(this.filterNode["detune"], value, ramp, time);
			break;
		case 3:		// filter Q
			this.params[3] = value;
			setAudioParam(this.filterNode["Q"], value, ramp, time);
			break;
		case 4:		// filter/delay gain (note value is in dB here)
			this.params[4] = value;
			setAudioParam(this.filterNode["gain"], value, ramp, time);
			break;
		}
	};
	function DelayEffect(delayTime, delayGain, mix)
	{
		this.type = "delay";
		this.params = [delayTime, delayGain, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.mainNode = createGain();
		this.delayNode = createDelay(delayTime);
		this.delayNode["delayTime"]["value"] = delayTime;
		this.delayGainNode = createGain();
		this.delayGainNode["gain"]["value"] = delayGain;
		this.inputNode["connect"](this.mainNode);
		this.inputNode["connect"](this.dryNode);
		this.mainNode["connect"](this.wetNode);
		this.mainNode["connect"](this.delayNode);
		this.delayNode["connect"](this.delayGainNode);
		this.delayGainNode["connect"](this.mainNode);
	};
	DelayEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	DelayEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.mainNode["disconnect"]();
		this.delayNode["disconnect"]();
		this.delayGainNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	DelayEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	DelayEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[2] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 4:		// filter/delay gain (note value is passed in dB but needs to be linear here)
			this.params[1] = dbToLinear(value);
			setAudioParam(this.delayGainNode["gain"], dbToLinear(value), ramp, time);
			break;
		case 5:		// delay time
			this.params[0] = value;
			setAudioParam(this.delayNode["delayTime"], value, ramp, time);
			break;
		}
	};
	function ConvolveEffect(buffer, normalize, mix, src)
	{
		this.type = "convolve";
		this.params = [normalize, mix, src];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.convolveNode = context["createConvolver"]();
		if (buffer)
		{
			this.convolveNode["normalize"] = normalize;
			this.convolveNode["buffer"] = buffer;
		}
		this.inputNode["connect"](this.convolveNode);
		this.inputNode["connect"](this.dryNode);
		this.convolveNode["connect"](this.wetNode);
	};
	ConvolveEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	ConvolveEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.convolveNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	ConvolveEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	ConvolveEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		}
	};
	function FlangerEffect(delay, modulation, freq, feedback, mix)
	{
		this.type = "flanger";
		this.params = [delay, modulation, freq, feedback, mix];
		this.inputNode = createGain();
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - (mix / 2);
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix / 2;
		this.feedbackNode = createGain();
		this.feedbackNode["gain"]["value"] = feedback;
		this.delayNode = createDelay(delay + modulation);
		this.delayNode["delayTime"]["value"] = delay;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = modulation;
		this.inputNode["connect"](this.delayNode);
		this.inputNode["connect"](this.dryNode);
		this.delayNode["connect"](this.wetNode);
		this.delayNode["connect"](this.feedbackNode);
		this.feedbackNode["connect"](this.delayNode);
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.delayNode["delayTime"]);
		startSource(this.oscNode);
	};
	FlangerEffect.prototype.connectTo = function (node)
	{
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
	};
	FlangerEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.delayNode["disconnect"]();
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.dryNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.feedbackNode["disconnect"]();
	};
	FlangerEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	FlangerEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[4] = value;
			setAudioParam(this.wetNode["gain"], value / 2, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - (value / 2), ramp, time);
			break;
		case 6:		// modulation
			this.params[1] = value / 1000;
			setAudioParam(this.oscGainNode["gain"], value / 1000, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[2] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		case 8:		// feedback
			this.params[3] = value / 100;
			setAudioParam(this.feedbackNode["gain"], value / 100, ramp, time);
			break;
		}
	};
	function PhaserEffect(freq, detune, q, modulation, modfreq, mix)
	{
		this.type = "phaser";
		this.params = [freq, detune, q, modulation, modfreq, mix];
		this.inputNode = createGain();
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - (mix / 2);
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix / 2;
		this.filterNode = context["createBiquadFilter"]();
		if (typeof this.filterNode["type"] === "number")
			this.filterNode["type"] = 7;	// all-pass
		else
			this.filterNode["type"] = "allpass";
		this.filterNode["frequency"]["value"] = freq;
		if (this.filterNode["detune"])		// iOS 6 doesn't have detune yet
			this.filterNode["detune"]["value"] = detune;
		this.filterNode["Q"]["value"] = q;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = modfreq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = modulation;
		this.inputNode["connect"](this.filterNode);
		this.inputNode["connect"](this.dryNode);
		this.filterNode["connect"](this.wetNode);
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.filterNode["frequency"]);
		startSource(this.oscNode);
	};
	PhaserEffect.prototype.connectTo = function (node)
	{
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
	};
	PhaserEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.filterNode["disconnect"]();
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.dryNode["disconnect"]();
		this.wetNode["disconnect"]();
	};
	PhaserEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	PhaserEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[5] = value;
			setAudioParam(this.wetNode["gain"], value / 2, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - (value / 2), ramp, time);
			break;
		case 1:		// filter frequency
			this.params[0] = value;
			setAudioParam(this.filterNode["frequency"], value, ramp, time);
			break;
		case 2:		// filter detune
			this.params[1] = value;
			setAudioParam(this.filterNode["detune"], value, ramp, time);
			break;
		case 3:		// filter Q
			this.params[2] = value;
			setAudioParam(this.filterNode["Q"], value, ramp, time);
			break;
		case 6:		// modulation
			this.params[3] = value;
			setAudioParam(this.oscGainNode["gain"], value, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[4] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function GainEffect(g)
	{
		this.type = "gain";
		this.params = [g];
		this.node = createGain();
		this.node["gain"]["value"] = g;
	};
	GainEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	GainEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	GainEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	GainEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 4:		// gain
			this.params[0] = dbToLinear(value);
			setAudioParam(this.node["gain"], dbToLinear(value), ramp, time);
			break;
		}
	};
	function TremoloEffect(freq, mix)
	{
		this.type = "tremolo";
		this.params = [freq, mix];
		this.node = createGain();
		this.node["gain"]["value"] = 1 - (mix / 2);
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = mix / 2;
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.node["gain"]);
		startSource(this.oscNode);
	};
	TremoloEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	TremoloEffect.prototype.remove = function ()
	{
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.node["disconnect"]();
	};
	TremoloEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	TremoloEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.node["gain"]["value"], 1 - (value / 2), ramp, time);
			setAudioParam(this.oscGainNode["gain"]["value"], value / 2, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[0] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function RingModulatorEffect(freq, mix)
	{
		this.type = "ringmod";
		this.params = [freq, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.ringNode = createGain();
		this.ringNode["gain"]["value"] = 0;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscNode["connect"](this.ringNode["gain"]);
		startSource(this.oscNode);
		this.inputNode["connect"](this.ringNode);
		this.inputNode["connect"](this.dryNode);
		this.ringNode["connect"](this.wetNode);
	};
	RingModulatorEffect.prototype.connectTo = function (node_)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node_);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node_);
	};
	RingModulatorEffect.prototype.remove = function ()
	{
		this.oscNode["disconnect"]();
		this.ringNode["disconnect"]();
		this.inputNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	RingModulatorEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	RingModulatorEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[0] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function DistortionEffect(threshold, headroom, drive, makeupgain, mix)
	{
		this.type = "distortion";
		this.params = [threshold, headroom, drive, makeupgain, mix];
		this.inputNode = createGain();
		this.preGain = createGain();
		this.postGain = createGain();
		this.setDrive(drive, dbToLinear_nocap(makeupgain));
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.waveShaper = context["createWaveShaper"]();
		this.curve = new Float32Array(65536);
		this.generateColortouchCurve(threshold, headroom);
		this.waveShaper.curve = this.curve;
		this.inputNode["connect"](this.preGain);
		this.inputNode["connect"](this.dryNode);
		this.preGain["connect"](this.waveShaper);
		this.waveShaper["connect"](this.postGain);
		this.postGain["connect"](this.wetNode);
	};
	DistortionEffect.prototype.setDrive = function (drive, makeupgain)
	{
		if (drive < 0.01)
			drive = 0.01;
		this.preGain["gain"]["value"] = drive;
		this.postGain["gain"]["value"] = Math.pow(1 / drive, 0.6) * makeupgain;
	};
	function e4(x, k)
	{
		return 1.0 - Math.exp(-k * x);
	}
	DistortionEffect.prototype.shape = function (x, linearThreshold, linearHeadroom)
	{
		var maximum = 1.05 * linearHeadroom * linearThreshold;
		var kk = (maximum - linearThreshold);
		var sign = x < 0 ? -1 : +1;
		var absx = x < 0 ? -x : x;
		var shapedInput = absx < linearThreshold ? absx : linearThreshold + kk * e4(absx - linearThreshold, 1.0 / kk);
		shapedInput *= sign;
		return shapedInput;
	};
	DistortionEffect.prototype.generateColortouchCurve = function (threshold, headroom)
	{
		var linearThreshold = dbToLinear_nocap(threshold);
		var linearHeadroom = dbToLinear_nocap(headroom);
		var n = 65536;
		var n2 = n / 2;
		var x = 0;
		for (var i = 0; i < n2; ++i) {
			x = i / n2;
			x = this.shape(x, linearThreshold, linearHeadroom);
			this.curve[n2 + i] = x;
			this.curve[n2 - i - 1] = -x;
		}
	};
	DistortionEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	DistortionEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.preGain["disconnect"]();
		this.waveShaper["disconnect"]();
		this.postGain["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	DistortionEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	DistortionEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[4] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		}
	};
	function CompressorEffect(threshold, knee, ratio, attack, release)
	{
		this.type = "compressor";
		this.params = [threshold, knee, ratio, attack, release];
		this.node = context["createDynamicsCompressor"]();
		try {
			this.node["threshold"]["value"] = threshold;
			this.node["knee"]["value"] = knee;
			this.node["ratio"]["value"] = ratio;
			this.node["attack"]["value"] = attack;
			this.node["release"]["value"] = release;
		}
		catch (e) {}
	};
	CompressorEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	CompressorEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	CompressorEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	CompressorEffect.prototype.setParam = function(param, value, ramp, time)
	{
	};
	function AnalyserEffect(fftSize, smoothing)
	{
		this.type = "analyser";
		this.params = [fftSize, smoothing];
		this.node = context["createAnalyser"]();
		this.node["fftSize"] = fftSize;
		this.node["smoothingTimeConstant"] = smoothing;
		this.freqBins = new Float32Array(this.node["frequencyBinCount"]);
		this.signal = new Uint8Array(fftSize);
		this.peak = 0;
		this.rms = 0;
	};
	AnalyserEffect.prototype.tick = function ()
	{
		this.node["getFloatFrequencyData"](this.freqBins);
		this.node["getByteTimeDomainData"](this.signal);
		var fftSize = this.node["fftSize"];
		var i = 0;
		this.peak = 0;
		var rmsSquaredSum = 0;
		var s = 0;
		for ( ; i < fftSize; i++)
		{
			s = (this.signal[i] - 128) / 128;
			if (s < 0)
				s = -s;
			if (this.peak < s)
				this.peak = s;
			rmsSquaredSum += s * s;
		}
		this.peak = linearToDb(this.peak);
		this.rms = linearToDb(Math.sqrt(rmsSquaredSum / fftSize));
	};
	AnalyserEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	AnalyserEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	AnalyserEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	AnalyserEffect.prototype.setParam = function(param, value, ramp, time)
	{
	};
	var OT_POS_SAMPLES = 4;
	function ObjectTracker()
	{
		this.obj = null;
		this.loadUid = 0;
		this.speeds = [];
		this.lastX = 0;
		this.lastY = 0;
		this.moveAngle = 0;
	};
	ObjectTracker.prototype.setObject = function (obj_)
	{
		this.obj = obj_;
		if (this.obj)
		{
			this.lastX = this.obj.x;
			this.lastY = this.obj.y;
		}
		this.speeds.length = 0;
	};
	ObjectTracker.prototype.hasObject = function ()
	{
		return !!this.obj;
	};
	ObjectTracker.prototype.tick = function (dt)
	{
		if (!this.obj || dt === 0)
			return;
		this.moveAngle = cr.angleTo(this.lastX, this.lastY, this.obj.x, this.obj.y);
		var s = cr.distanceTo(this.lastX, this.lastY, this.obj.x, this.obj.y) / dt;
		if (this.speeds.length < OT_POS_SAMPLES)
			this.speeds.push(s);
		else
		{
			this.speeds.shift();
			this.speeds.push(s);
		}
		this.lastX = this.obj.x;
		this.lastY = this.obj.y;
	};
	ObjectTracker.prototype.getSpeed = function ()
	{
		if (!this.speeds.length)
			return 0;
		var i, len, sum = 0;
		for (i = 0, len = this.speeds.length; i < len; i++)
		{
			sum += this.speeds[i];
		}
		return sum / this.speeds.length;
	};
	ObjectTracker.prototype.getVelocityX = function ()
	{
		return Math.cos(this.moveAngle) * this.getSpeed();
	};
	ObjectTracker.prototype.getVelocityY = function ()
	{
		return Math.sin(this.moveAngle) * this.getSpeed();
	};
	var iOShadtouch = false;	// has had touch input on iOS to work around web audio API muting
	function C2AudioBuffer(src_, is_music)
	{
		this.src = src_;
		this.myapi = api;
		this.is_music = is_music;
		this.added_end_listener = false;
		var self = this;
		this.outNode = null;
		this.mediaSourceNode = null;
		this.panWhenReady = [];		// for web audio API positioned sounds
		this.seekWhenReady = 0;
		this.pauseWhenReady = false;
		this.supportWebAudioAPI = false;
		if (api === API_WEBAUDIO && is_music)
		{
			this.myapi = API_HTML5;
			this.outNode = createGain();
		}
		this.bufferObject = null;			// actual audio object
		this.audioData = null;				// web audio api: ajax request result (compressed audio that needs decoding)
		var request;
		switch (this.myapi) {
		case API_HTML5:
			this.bufferObject = new Audio();
			if (api === API_WEBAUDIO && context["createMediaElementSource"] && !audRuntime.isFirefox && !/wiiu/i.test(navigator.userAgent))
			{
				this.supportWebAudioAPI = true;		// can be routed through web audio api
				this.bufferObject.addEventListener("canplay", function ()
				{
					if (!self.mediaSourceNode)		// protect against this event firing twice
					{
						self.mediaSourceNode = context["createMediaElementSource"](self.bufferObject);
						self.mediaSourceNode["connect"](self.outNode);
					}
				});
			}
			this.bufferObject.autoplay = false;	// this is only a source buffer, not an instance
			this.bufferObject.preload = "auto";
			this.bufferObject.src = src_;
			break;
		case API_WEBAUDIO:
			request = new XMLHttpRequest();
			request.open("GET", src_, true);
			request.responseType = "arraybuffer";
			request.onload = function () {
				self.audioData = request.response;
				self.decodeAudioBuffer();
			};
			request.send();
			break;
		case API_PHONEGAP:
			this.bufferObject = true;
			break;
		case API_APPMOBI:
			this.bufferObject = true;
			break;
		}
	};
	C2AudioBuffer.prototype.decodeAudioBuffer = function ()
	{
		if (this.bufferObject || !this.audioData)
			return;		// audio already decoded or AJAX request not yet complete
		var self = this;
		if (context["decodeAudioData"])
		{
			context["decodeAudioData"](this.audioData, function (buffer) {
					self.bufferObject = buffer;
					var p, i, len, a;
					if (!cr.is_undefined(self.playTagWhenReady) && !silent)
					{
						if (self.panWhenReady.length)
						{
							for (i = 0, len = self.panWhenReady.length; i < len; i++)
							{
								p = self.panWhenReady[i];
								a = new C2AudioInstance(self, p.thistag);
								a.setPannerEnabled(true);
								if (typeof p.objUid !== "undefined")
								{
									p.obj = audRuntime.getObjectByUID(p.objUid);
									if (!p.obj)
										continue;
								}
								if (p.obj)
								{
									var px = cr.rotatePtAround(p.obj.x, p.obj.y, -p.obj.layer.getAngle(), listenerX, listenerY, true);
									var py = cr.rotatePtAround(p.obj.x, p.obj.y, -p.obj.layer.getAngle(), listenerX, listenerY, false);
									a.setPan(px, py, cr.to_degrees(p.obj.angle - p.obj.layer.getAngle()), p.ia, p.oa, p.og);
									a.setObject(p.obj);
								}
								else
								{
									a.setPan(p.x, p.y, p.a, p.ia, p.oa, p.og);
								}
								a.play(self.loopWhenReady, self.volumeWhenReady, self.seekWhenReady);
								if (self.pauseWhenReady)
									a.pause();
								audioInstances.push(a);
							}
							self.panWhenReady.length = 0;
						}
						else
						{
							a = new C2AudioInstance(self, self.playTagWhenReady);
							a.play(self.loopWhenReady, self.volumeWhenReady, self.seekWhenReady);
							if (self.pauseWhenReady)
								a.pause();
							audioInstances.push(a);
						}
					}
					else if (!cr.is_undefined(self.convolveWhenReady))
					{
						var convolveNode = self.convolveWhenReady.convolveNode;
						convolveNode["normalize"] = self.normalizeWhenReady;
						convolveNode["buffer"] = buffer;
					}
			});
		}
		else
		{
			this.bufferObject = context["createBuffer"](this.audioData, false);
			if (!cr.is_undefined(this.playTagWhenReady) && !silent)
			{
				var a = new C2AudioInstance(this, this.playTagWhenReady);
				a.play(this.loopWhenReady, this.volumeWhenReady, this.seekWhenReady);
				if (this.pauseWhenReady)
					a.pause();
				audioInstances.push(a);
			}
			else if (!cr.is_undefined(this.convolveWhenReady))
			{
				var convolveNode = this.convolveWhenReady.convolveNode;
				convolveNode["normalize"] = this.normalizeWhenReady;
				convolveNode["buffer"] = this.bufferObject;
			}
		}
	};
	C2AudioBuffer.prototype.isLoaded = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			return this.bufferObject["readyState"] >= 4;	// HAVE_ENOUGH_DATA
		case API_WEBAUDIO:
			return !!this.audioData;			// null until AJAX request completes
		case API_PHONEGAP:
			return true;
		case API_APPMOBI:
			return true;
		}
		return false;
	};
	C2AudioBuffer.prototype.isLoadedAndDecoded = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			return this.bufferObject["readyState"] >= 4;	// HAVE_ENOUGH_DATA
		case API_WEBAUDIO:
			return !!this.audioData && !!this.bufferObject;
		case API_PHONEGAP:
			return true;
		case API_APPMOBI:
			return true;
		}
		return false;
	};
	function C2AudioInstance(buffer_, tag_)
	{
		var self = this;
		this.tag = tag_;
		this.fresh = true;
		this.stopped = true;
		this.src = buffer_.src;
		this.buffer = buffer_;
		this.myapi = api;
		this.is_music = buffer_.is_music;
		this.playbackRate = 1;
		this.pgended = true;			// for PhoneGap only: ended flag
		this.resume_me = false;			// make sure resumes when leaving suspend
		this.is_paused = false;
		this.resume_position = 0;		// for web audio api to resume from correct playback position
		this.looping = false;
		this.is_muted = false;
		this.is_silent = false;
		this.volume = 1;
		this.mutevol = 1;
		this.startTime = audRuntime.kahanTime.sum;
		this.gainNode = null;
		this.pannerNode = null;
		this.pannerEnabled = false;
		this.objectTracker = null;
		this.panX = 0;
		this.panY = 0;
		this.panAngle = 0;
		this.panConeInner = 0;
		this.panConeOuter = 0;
		this.panConeOuterGain = 0;
		this.instanceObject = null;
		var add_end_listener = false;
		if (this.myapi === API_WEBAUDIO && this.buffer.myapi === API_HTML5 && !this.buffer.supportWebAudioAPI)
			this.myapi = API_HTML5;
		switch (this.myapi) {
		case API_HTML5:
			if (this.is_music)
			{
				this.instanceObject = buffer_.bufferObject;
				add_end_listener = !buffer_.added_end_listener;
				buffer_.added_end_listener = true;
			}
			else
			{
				this.instanceObject = new Audio();
				this.instanceObject.autoplay = false;
				this.instanceObject.src = buffer_.bufferObject.src;
				add_end_listener = true;
			}
			if (add_end_listener)
			{
				this.instanceObject.addEventListener('ended', function () {
						audTag = self.tag;
						self.stopped = true;
						audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
				});
			}
			break;
		case API_WEBAUDIO:
			this.gainNode = createGain();
			this.gainNode["connect"](getDestinationForTag(tag_));
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (buffer_.bufferObject)
				{
					this.instanceObject = context["createBufferSource"]();
					this.instanceObject["buffer"] = buffer_.bufferObject;
					this.instanceObject["connect"](this.gainNode);
				}
			}
			else
			{
				this.instanceObject = this.buffer.bufferObject;		// reference the audio element
				this.buffer.outNode["connect"](this.gainNode);
			}
			break;
		case API_PHONEGAP:
			this.instanceObject = new window["Media"](appPath + this.src, null, null, function (status) {
					if (status === window["Media"]["MEDIA_STOPPED"])
					{
						self.pgended = true;
						self.stopped = true;
						audTag = self.tag;
						audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
					}
			});
			break;
		case API_APPMOBI:
			this.instanceObject = true;
			break;
		}
	};
	C2AudioInstance.prototype.hasEnded = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			return this.instanceObject.ended;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (!this.fresh && !this.stopped && this.instanceObject["loop"])
					return false;
				if (this.is_paused)
					return false;
				return (audRuntime.kahanTime.sum - this.startTime) > this.buffer.bufferObject["duration"];
			}
			else
				return this.instanceObject.ended;
		case API_PHONEGAP:
			return this.pgended;
		case API_APPMOBI:
			true;	// recycling an AppMobi sound does not matter because it will just do another throwaway playSound
		}
		return true;
	};
	C2AudioInstance.prototype.canBeRecycled = function ()
	{
		if (this.fresh || this.stopped)
			return true;		// not yet used or is not playing
		return this.hasEnded();
	};
	C2AudioInstance.prototype.setPannerEnabled = function (enable_)
	{
		if (api !== API_WEBAUDIO)
			return;
		if (!this.pannerEnabled && enable_)
		{
			if (!this.gainNode)
				return;
			if (!this.pannerNode)
			{
				this.pannerNode = context["createPanner"]();
				if (typeof this.pannerNode["panningModel"] === "number")
					this.pannerNode["panningModel"] = panningModel;
				else
					this.pannerNode["panningModel"] = ["equalpower", "HRTF", "soundfield"][panningModel];
				if (typeof this.pannerNode["distanceModel"] === "number")
					this.pannerNode["distanceModel"] = distanceModel;
				else
					this.pannerNode["distanceModel"] = ["linear", "inverse", "exponential"][distanceModel];
				this.pannerNode["refDistance"] = refDistance;
				this.pannerNode["maxDistance"] = maxDistance;
				this.pannerNode["rolloffFactor"] = rolloffFactor;
			}
			this.gainNode["disconnect"]();
			this.gainNode["connect"](this.pannerNode);
			this.pannerNode["connect"](getDestinationForTag(this.tag));
			this.pannerEnabled = true;
		}
		else if (this.pannerEnabled && !enable_)
		{
			if (!this.gainNode)
				return;
			this.pannerNode["disconnect"]();
			this.gainNode["disconnect"]();
			this.gainNode["connect"](getDestinationForTag(this.tag));
			this.pannerEnabled = false;
		}
	};
	C2AudioInstance.prototype.setPan = function (x, y, angle, innerangle, outerangle, outergain)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO)
			return;
		this.pannerNode["setPosition"](x, y, 0);
		this.pannerNode["setOrientation"](Math.cos(cr.to_radians(angle)), Math.sin(cr.to_radians(angle)), 0);
		this.pannerNode["coneInnerAngle"] = innerangle;
		this.pannerNode["coneOuterAngle"] = outerangle;
		this.pannerNode["coneOuterGain"] = outergain;
		this.panX = x;
		this.panY = y;
		this.panAngle = angle;
		this.panConeInner = innerangle;
		this.panConeOuter = outerangle;
		this.panConeOuterGain = outergain;
	};
	C2AudioInstance.prototype.setObject = function (o)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO)
			return;
		if (!this.objectTracker)
			this.objectTracker = new ObjectTracker();
		this.objectTracker.setObject(o);
	};
	C2AudioInstance.prototype.tick = function (dt)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO || !this.objectTracker || !this.objectTracker.hasObject() || !this.isPlaying())
		{
			return;
		}
		this.objectTracker.tick(dt);
		var inst = this.objectTracker.obj;
		var px = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, true);
		var py = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, false);
		this.pannerNode["setPosition"](px, py, 0);
		var a = 0;
		if (typeof this.objectTracker.obj.angle !== "undefined")
		{
			a = inst.angle - inst.layer.getAngle();
			this.pannerNode["setOrientation"](Math.cos(a), Math.sin(a), 0);
		}
		px = cr.rotatePtAround(this.objectTracker.getVelocityX(), this.objectTracker.getVelocityY(), -inst.layer.getAngle(), 0, 0, true);
		py = cr.rotatePtAround(this.objectTracker.getVelocityX(), this.objectTracker.getVelocityY(), -inst.layer.getAngle(), 0, 0, false);
		this.pannerNode["setVelocity"](px, py, 0);
	};
	C2AudioInstance.prototype.play = function (looping, vol, fromPosition)
	{
		var instobj = this.instanceObject;
		this.looping = looping;
		this.volume = vol;
		var seekPos = fromPosition || 0;
		switch (this.myapi) {
		case API_HTML5:
			if (instobj.playbackRate !== 1.0)
				instobj.playbackRate = 1.0;
			if (instobj.volume !== vol * masterVolume)
				instobj.volume = vol * masterVolume;
			if (instobj.loop !== looping)
				instobj.loop = looping;
			if (instobj.muted)
				instobj.muted = false;
			if (instobj.currentTime !== seekPos)
			{
				try {
					instobj.currentTime = seekPos;
				}
				catch (err)
				{
;
				}
			}
			if (this.is_music && isMusicWorkaround && !audRuntime.isInUserInputEvent)
				musicPlayNextTouch.push(this);
			else
			{
				try {
					this.instanceObject.play();
				}
				catch (e) {}	// sometimes throws on WP8.1... try not to kill the app
			}
			break;
		case API_WEBAUDIO:
			this.muted = false;
			this.mutevol = 1;
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (!this.fresh)
				{
					this.instanceObject = context["createBufferSource"]();
					this.instanceObject["buffer"] = this.buffer.bufferObject;
					this.instanceObject["connect"](this.gainNode);
				}
				this.instanceObject.loop = looping;
				this.gainNode["gain"]["value"] = vol * masterVolume;
				if (seekPos === 0)
					startSource(this.instanceObject);
				else
					startSourceAt(this.instanceObject, seekPos, this.getDuration());
			}
			else
			{
				if (instobj.playbackRate !== 1.0)
					instobj.playbackRate = 1.0;
				if (instobj.loop !== looping)
					instobj.loop = looping;
				this.gainNode["gain"]["value"] = vol * masterVolume;
				if (instobj.currentTime !== seekPos)
				{
					try {
						instobj.currentTime = seekPos;
					}
					catch (err)
					{
;
					}
				}
				if (this.is_music && isMusicWorkaround && !audRuntime.isInUserInputEvent)
					musicPlayNextTouch.push(this);
				else
					instobj.play();
			}
			break;
		case API_PHONEGAP:
			if ((!this.fresh && this.stopped) || seekPos !== 0)
				instobj["seekTo"](seekPos);
			instobj["play"]();
			this.pgended = false;
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["playSound"](this.src, looping);
			else
				AppMobi["player"]["playSound"](this.src, looping);
			break;
		}
		this.playbackRate = 1;
		this.startTime = audRuntime.kahanTime.sum - seekPos;
		this.fresh = false;
		this.stopped = false;
		this.is_paused = false;
	};
	C2AudioInstance.prototype.stop = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			if (!this.instanceObject.paused)
				this.instanceObject.pause();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
				stopSource(this.instanceObject);
			else
			{
				if (!this.instanceObject.paused)
					this.instanceObject.pause();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["stop"]();
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["stopSound"](this.src);
			break;
		}
		this.stopped = true;
		this.is_paused = false;
	};
	C2AudioInstance.prototype.pause = function ()
	{
		if (this.fresh || this.stopped || this.hasEnded() || this.is_paused)
			return;
		switch (this.myapi) {
		case API_HTML5:
			if (!this.instanceObject.paused)
				this.instanceObject.pause();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				this.resume_position = this.getPlaybackTime();
				if (this.looping)
					this.resume_position = this.resume_position % this.getDuration();
				stopSource(this.instanceObject);
			}
			else
			{
				if (!this.instanceObject.paused)
					this.instanceObject.pause();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["pause"]();
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["stopSound"](this.src);
			break;
		}
		this.is_paused = true;
	};
	C2AudioInstance.prototype.resume = function ()
	{
		if (this.fresh || this.stopped || this.hasEnded() || !this.is_paused)
			return;
		switch (this.myapi) {
		case API_HTML5:
			this.instanceObject.play();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				this.instanceObject = context["createBufferSource"]();
				this.instanceObject["buffer"] = this.buffer.bufferObject;
				this.instanceObject["connect"](this.gainNode);
				this.instanceObject.loop = this.looping;
				this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
				this.startTime = audRuntime.kahanTime.sum - this.resume_position;
				startSourceAt(this.instanceObject, this.resume_position, this.getDuration());
			}
			else
			{
				this.instanceObject.play();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["play"]();
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["resumeSound"](this.src);
			break;
		}
		this.is_paused = false;
	};
	C2AudioInstance.prototype.seek = function (pos)
	{
		if (this.fresh || this.stopped || this.hasEnded())
			return;
		switch (this.myapi) {
		case API_HTML5:
			try {
				this.instanceObject.currentTime = pos;
			}
			catch (e) {}
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.is_paused)
					this.resume_position = pos;
				else
				{
					this.pause();
					this.resume_position = pos;
					this.resume();
				}
			}
			else
			{
				try {
					this.instanceObject.currentTime = pos;
				}
				catch (e) {}
			}
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["seekSound"](this.src, pos);
			break;
		}
	};
	C2AudioInstance.prototype.reconnect = function (toNode)
	{
		if (this.myapi !== API_WEBAUDIO)
			return;
		if (this.pannerEnabled)
		{
			this.pannerNode["disconnect"]();
			this.pannerNode["connect"](toNode);
		}
		else
		{
			this.gainNode["disconnect"]();
			this.gainNode["connect"](toNode);
		}
	};
	C2AudioInstance.prototype.getDuration = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			if (typeof this.instanceObject.duration !== "undefined")
				return this.instanceObject.duration;
			else
				return 0;
		case API_WEBAUDIO:
			return this.buffer.bufferObject["duration"];
		case API_PHONEGAP:
			return this.instanceObject["getDuration"]();
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				return AppMobi["context"]["getDurationSound"](this.src);
			else
				return 0;
		}
		return 0;
	};
	C2AudioInstance.prototype.getPlaybackTime = function ()
	{
		var duration = this.getDuration();
		var ret = 0;
		switch (this.myapi) {
		case API_HTML5:
			if (typeof this.instanceObject.currentTime !== "undefined")
				ret = this.instanceObject.currentTime;
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.is_paused)
					return this.resume_position;
				else
					ret = audRuntime.kahanTime.sum - this.startTime;
			}
			else if (typeof this.instanceObject.currentTime !== "undefined")
				ret = this.instanceObject.currentTime;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				ret = AppMobi["context"]["getPlaybackTimeSound"](this.src);
			break;
		}
		if (!this.looping && ret > duration)
			ret = duration;
		return ret;
	};
	C2AudioInstance.prototype.isPlaying = function ()
	{
		return !this.is_paused && !this.fresh && !this.stopped && !this.hasEnded();
	};
	C2AudioInstance.prototype.setVolume = function (v)
	{
		this.volume = v;
		this.updateVolume();
	};
	C2AudioInstance.prototype.updateVolume = function ()
	{
		var volToSet = this.volume * masterVolume;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.volume && this.instanceObject.volume !== volToSet)
				this.instanceObject.volume = volToSet;
			break;
		case API_WEBAUDIO:
			this.gainNode["gain"]["value"] = volToSet * this.mutevol;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.getVolume = function ()
	{
		return this.volume;
	};
	C2AudioInstance.prototype.doSetMuted = function (m)
	{
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.muted !== !!m)
				this.instanceObject.muted = !!m;
			break;
		case API_WEBAUDIO:
			this.mutevol = (m ? 0 : 1);
			this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.setMuted = function (m)
	{
		this.is_muted = !!m;
		this.doSetMuted(this.is_muted || this.is_silent);
	};
	C2AudioInstance.prototype.setSilent = function (m)
	{
		this.is_silent = !!m;
		this.doSetMuted(this.is_muted || this.is_silent);
	};
	C2AudioInstance.prototype.setLooping = function (l)
	{
		this.looping = l;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.loop !== !!l)
				this.instanceObject.loop = !!l;
			break;
		case API_WEBAUDIO:
			if (this.instanceObject.loop !== !!l)
				this.instanceObject.loop = !!l;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["setLoopingSound"](this.src, l);
			break;
		}
	};
	C2AudioInstance.prototype.setPlaybackRate = function (r)
	{
		this.playbackRate = r;
		this.updatePlaybackRate();
	};
	C2AudioInstance.prototype.updatePlaybackRate = function ()
	{
		var r = this.playbackRate;
		if ((timescale_mode === 1 && !this.is_music) || timescale_mode === 2)
			r *= audRuntime.timescale;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.playbackRate !== r)
				this.instanceObject.playbackRate = r;
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.instanceObject["playbackRate"]["value"] !== r)
					this.instanceObject["playbackRate"]["value"] = r;
			}
			else
			{
				if (this.instanceObject.playbackRate !== r)
					this.instanceObject.playbackRate = r;
			}
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.setSuspended = function (s)
	{
		switch (this.myapi) {
		case API_HTML5:
			if (s)
			{
				if (this.isPlaying())
				{
					this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
					this.instanceObject["play"]();
			}
			break;
		case API_WEBAUDIO:
			if (s)
			{
				if (this.isPlaying())
				{
					if (this.buffer.myapi === API_WEBAUDIO)
					{
						this.resume_position = this.getPlaybackTime();
						if (this.looping)
							this.resume_position = this.resume_position % this.getDuration();
						stopSource(this.instanceObject);
					}
					else
						this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
				{
					if (this.buffer.myapi === API_WEBAUDIO)
					{
						this.instanceObject = context["createBufferSource"]();
						this.instanceObject["buffer"] = this.buffer.bufferObject;
						this.instanceObject["connect"](this.gainNode);
						this.instanceObject.loop = this.looping;
						this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
						this.startTime = audRuntime.kahanTime.sum - this.resume_position;
						startSourceAt(this.instanceObject, this.resume_position, this.getDuration());
					}
					else
					{
						this.instanceObject["play"]();
					}
				}
			}
			break;
		case API_PHONEGAP:
			if (s)
			{
				if (this.isPlaying())
				{
					this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
					this.instanceObject["play"]();
			}
			break;
		case API_APPMOBI:
			break;
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		audRuntime = this.runtime;
		audInst = this;
		this.listenerTracker = null;
		this.listenerZ = -600;
		if ((this.runtime.isiOS || (this.runtime.isAndroid && (this.runtime.isChrome || this.runtime.isAndroidStockBrowser))) && !this.runtime.isCrosswalk && !this.runtime.isDomFree)
		{
			isMusicWorkaround = true;
		}
		context = null;
		if (typeof AudioContext !== "undefined")
		{
			api = API_WEBAUDIO;
			context = new AudioContext();
		}
		else if (typeof webkitAudioContext !== "undefined")
		{
			api = API_WEBAUDIO;
			context = new webkitAudioContext();
		}
		if ((this.runtime.isiOS && api === API_WEBAUDIO) || isMusicWorkaround)
		{
			document.addEventListener("touchstart", function ()
			{
				var i, len, m;
				if (!iOShadtouch && context)
				{
					var buffer = context["createBuffer"](1, 1, 22050);
					var source = context["createBufferSource"]();
					source["buffer"] = buffer;
					source["connect"](context["destination"]);
					startSource(source);
					iOShadtouch = true;
				}
				if (isMusicWorkaround)
				{
					if (!silent)
					{
						for (i = 0, len = musicPlayNextTouch.length; i < len; ++i)
						{
							m = musicPlayNextTouch[i];
							if (!m.stopped && !m.is_paused)
								m.instanceObject.play();
						}
					}
					musicPlayNextTouch.length = 0;
				}
			}, true);
		}
		if (api !== API_WEBAUDIO)
		{
			if (this.runtime.isPhoneGap && typeof window["Media"] !== "undefined")
				api = API_PHONEGAP;
			else if (this.runtime.isAppMobi)
				api = API_APPMOBI;
		}
		if (api === API_PHONEGAP)
		{
			appPath = location.href;
			var i = appPath.lastIndexOf("/");
			if (i > -1)
				appPath = appPath.substr(0, i + 1);
			appPath = appPath.replace("file://", "");
		}
		if (this.runtime.isSafari && this.runtime.isWindows && typeof Audio === "undefined")
		{
			alert("It looks like you're using Safari for Windows without Quicktime.  Audio cannot be played until Quicktime is installed.");
			this.runtime.DestroyInstance(this);
		}
		else
		{
			if (this.runtime.isDirectCanvas)
				useOgg = this.runtime.isAndroid;		// AAC on iOS, OGG on Android
			else
			{
				try {
					useOgg = !!(new Audio().canPlayType('audio/ogg; codecs="vorbis"'));
				}
				catch (e)
				{
					useOgg = false;
				}
			}
			switch (api) {
			case API_HTML5:
;
				break;
			case API_WEBAUDIO:
;
				break;
			case API_PHONEGAP:
;
				break;
			case API_APPMOBI:
;
				break;
			default:
;
			}
			this.runtime.tickMe(this);
		}
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function ()
	{
		this.runtime.audioInstance = this;
		timescale_mode = this.properties[0];	// 0 = off, 1 = sounds only, 2 = all
		this.saveload = this.properties[1];		// 0 = all, 1 = sounds only, 2 = music only, 3 = none
		panningModel = this.properties[2];		// 0 = equalpower, 1 = hrtf, 3 = soundfield
		distanceModel = this.properties[3];		// 0 = linear, 1 = inverse, 2 = exponential
		this.listenerZ = -this.properties[4];
		refDistance = this.properties[5];
		maxDistance = this.properties[6];
		rolloffFactor = this.properties[7];
		this.listenerTracker = new ObjectTracker();
		if (api === API_WEBAUDIO)
		{
			context["listener"]["speedOfSound"] = this.properties[8];
			context["listener"]["dopplerFactor"] = this.properties[9];
			context["listener"]["setPosition"](this.runtime.draw_width / 2, this.runtime.draw_height / 2, this.listenerZ);
			context["listener"]["setOrientation"](0, 0, 1, 0, -1, 0);
			window["c2OnAudioMicStream"] = function (localMediaStream, tag)
			{
				if (micSource)
					micSource["disconnect"]();
				micTag = tag.toLowerCase();
				micSource = context["createMediaStreamSource"](localMediaStream);
				micSource["connect"](getDestinationForTag(micTag));
			};
		}
		this.runtime.addSuspendCallback(function(s)
		{
			audInst.onSuspend(s);
		});
		var self = this;
		this.runtime.addDestroyCallback(function (inst)
		{
			self.onInstanceDestroyed(inst);
		});
	};
	instanceProto.onInstanceDestroyed = function (inst)
	{
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (a.objectTracker)
			{
				if (a.objectTracker.obj === inst)
				{
					a.objectTracker.obj = null;
					if (a.pannerEnabled && a.isPlaying() && a.looping)
						a.stop();
				}
			}
		}
		if (this.listenerTracker.obj === inst)
			this.listenerTracker.obj = null;
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"silent": silent,
			"masterVolume": masterVolume,
			"listenerZ": this.listenerZ,
			"listenerUid": this.listenerTracker.hasObject() ? this.listenerTracker.obj.uid : -1,
			"playing": [],
			"effects": {}
		};
		var playingarr = o["playing"];
		var i, len, a, d, p, panobj, playbackTime;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (!a.isPlaying())
				continue;				// no need to save stopped sounds
			if (this.saveload === 3)	// not saving/loading any sounds/music
				continue;
			if (a.is_music && this.saveload === 1)	// not saving/loading music
				continue;
			if (!a.is_music && this.saveload === 2)	// not saving/loading sound
				continue;
			playbackTime = a.getPlaybackTime();
			if (a.looping)
				playbackTime = playbackTime % a.getDuration();
			d = {
				"tag": a.tag,
				"buffersrc": a.buffer.src,
				"is_music": a.is_music,
				"playbackTime": playbackTime,
				"volume": a.volume,
				"looping": a.looping,
				"muted": a.is_muted,
				"playbackRate": a.playbackRate,
				"paused": a.is_paused,
				"resume_position": a.resume_position
			};
			if (a.pannerEnabled)
			{
				d["pan"] = {};
				panobj = d["pan"];
				if (a.objectTracker && a.objectTracker.hasObject())
				{
					panobj["objUid"] = a.objectTracker.obj.uid;
				}
				else
				{
					panobj["x"] = a.panX;
					panobj["y"] = a.panY;
					panobj["a"] = a.panAngle;
				}
				panobj["ia"] = a.panConeInner;
				panobj["oa"] = a.panConeOuter;
				panobj["og"] = a.panConeOuterGain;
			}
			playingarr.push(d);
		}
		var fxobj = o["effects"];
		var fxarr;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				fxarr = [];
				for (i = 0, len = effects[p].length; i < len; i++)
				{
					fxarr.push({ "type": effects[p][i].type, "params": effects[p][i].params });
				}
				fxobj[p] = fxarr;
			}
		}
		return o;
	};
	var objectTrackerUidsToLoad = [];
	instanceProto.loadFromJSON = function (o)
	{
		var setSilent = o["silent"];
		masterVolume = o["masterVolume"];
		this.listenerZ = o["listenerZ"];
		this.listenerTracker.setObject(null);
		var listenerUid = o["listenerUid"];
		if (listenerUid !== -1)
		{
			this.listenerTracker.loadUid = listenerUid;
			objectTrackerUidsToLoad.push(this.listenerTracker);
		}
		var playingarr = o["playing"];
		var i, len, d, src, is_music, tag, playbackTime, looping, vol, b, a, p, pan, panObjUid;
		if (this.saveload !== 3)
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
			{
				a = audioInstances[i];
				if (a.is_music && this.saveload === 1)
					continue;		// only saving/loading sound: leave music playing
				if (!a.is_music && this.saveload === 2)
					continue;		// only saving/loading music: leave sound playing
				a.stop();
			}
		}
		var fxarr, fxtype, fxparams, fx;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				for (i = 0, len = effects[p].length; i < len; i++)
					effects[p][i].remove();
			}
		}
		cr.wipe(effects);
		for (p in o["effects"])
		{
			if (o["effects"].hasOwnProperty(p))
			{
				fxarr = o["effects"][p];
				for (i = 0, len = fxarr.length; i < len; i++)
				{
					fxtype = fxarr[i]["type"];
					fxparams = fxarr[i]["params"];
					switch (fxtype) {
					case "filter":
						addEffectForTag(p, new FilterEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4], fxparams[5]));
						break;
					case "delay":
						addEffectForTag(p, new DelayEffect(fxparams[0], fxparams[1], fxparams[2]));
						break;
					case "convolve":
						src = fxparams[2];
						b = this.getAudioBuffer(src, false);
						if (b.bufferObject)
						{
							fx = new ConvolveEffect(b.bufferObject, fxparams[0], fxparams[1], src);
						}
						else
						{
							fx = new ConvolveEffect(null, fxparams[0], fxparams[1], src);
							b.normalizeWhenReady = fxparams[0];
							b.convolveWhenReady = fx;
						}
						addEffectForTag(p, fx);
						break;
					case "flanger":
						addEffectForTag(p, new FlangerEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "phaser":
						addEffectForTag(p, new PhaserEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4], fxparams[5]));
						break;
					case "gain":
						addEffectForTag(p, new GainEffect(fxparams[0]));
						break;
					case "tremolo":
						addEffectForTag(p, new TremoloEffect(fxparams[0], fxparams[1]));
						break;
					case "ringmod":
						addEffectForTag(p, new RingModulatorEffect(fxparams[0], fxparams[1]));
						break;
					case "distortion":
						addEffectForTag(p, new DistortionEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "compressor":
						addEffectForTag(p, new CompressorEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "analyser":
						addEffectForTag(p, new AnalyserEffect(fxparams[0], fxparams[1]));
						break;
					}
				}
			}
		}
		for (i = 0, len = playingarr.length; i < len; i++)
		{
			if (this.saveload === 3)	// not saving/loading any sounds/music
				continue;
			d = playingarr[i];
			src = d["buffersrc"];
			is_music = d["is_music"];
			tag = d["tag"];
			playbackTime = d["playbackTime"];
			looping = d["looping"];
			vol = d["volume"];
			pan = d["pan"];
			panObjUid = (pan && pan.hasOwnProperty("objUid")) ? pan["objUid"] : -1;
			if (is_music && this.saveload === 1)	// not saving/loading music
				continue;
			if (!is_music && this.saveload === 2)	// not saving/loading sound
				continue;
			a = this.getAudioInstance(src, tag, is_music, looping, vol);
			if (!a)
			{
				b = this.getAudioBuffer(src, is_music);
				b.seekWhenReady = playbackTime;
				b.pauseWhenReady = d["paused"];
				if (pan)
				{
					if (panObjUid !== -1)
					{
						b.panWhenReady.push({ objUid: panObjUid, ia: pan["ia"], oa: pan["oa"], og: pan["og"], thistag: tag });
					}
					else
					{
						b.panWhenReady.push({ x: pan["x"], y: pan["y"], a: pan["a"], ia: pan["ia"], oa: pan["oa"], og: pan["og"], thistag: tag });
					}
				}
				continue;
			}
			a.resume_position = d["resume_position"];
			a.setPannerEnabled(!!pan);
			a.play(looping, vol, playbackTime);
			a.updatePlaybackRate();
			a.updateVolume();
			a.doSetMuted(a.is_muted || a.is_silent);
			if (d["paused"])
				a.pause();
			if (d["muted"])
				a.setMuted(true);
			a.doSetMuted(a.is_muted || a.is_silent);
			if (pan)
			{
				if (panObjUid !== -1)
				{
					a.objectTracker = a.objectTracker || new ObjectTracker();
					a.objectTracker.loadUid = panObjUid;
					objectTrackerUidsToLoad.push(a.objectTracker);
				}
				else
				{
					a.setPan(pan["x"], pan["y"], pan["a"], pan["ia"], pan["oa"], pan["og"]);
				}
			}
		}
		if (setSilent && !silent)			// setting silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(true);
			silent = true;
		}
		else if (!setSilent && silent)		// setting not silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(false);
			silent = false;
		}
	};
	instanceProto.afterLoad = function ()
	{
		var i, len, ot, inst;
		for (i = 0, len = objectTrackerUidsToLoad.length; i < len; i++)
		{
			ot = objectTrackerUidsToLoad[i];
			inst = this.runtime.getObjectByUID(ot.loadUid);
			ot.setObject(inst);
			ot.loadUid = -1;
			if (inst)
			{
				listenerX = inst.x;
				listenerY = inst.y;
			}
		}
		objectTrackerUidsToLoad.length = 0;
	};
	instanceProto.onSuspend = function (s)
	{
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
			audioInstances[i].setSuspended(s);
	};
	instanceProto.tick = function ()
	{
		var dt = this.runtime.dt;
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			a.tick(dt);
			if (a.myapi !== API_HTML5 && a.myapi !== API_APPMOBI)
			{
				if (!a.fresh && !a.stopped && a.hasEnded())
				{
					a.stopped = true;
					audTag = a.tag;
					audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
				}
			}
			if (timescale_mode !== 0)
				a.updatePlaybackRate();
		}
		var p, arr, f;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				arr = effects[p];
				for (i = 0, len = arr.length; i < len; i++)
				{
					f = arr[i];
					if (f.tick)
						f.tick();
				}
			}
		}
		if (api === API_WEBAUDIO && this.listenerTracker.hasObject())
		{
			this.listenerTracker.tick(dt);
			listenerX = this.listenerTracker.obj.x;
			listenerY = this.listenerTracker.obj.y;
			context["listener"]["setPosition"](this.listenerTracker.obj.x, this.listenerTracker.obj.y, this.listenerZ);
			context["listener"]["setVelocity"](this.listenerTracker.getVelocityX(), this.listenerTracker.getVelocityY(), 0);
		}
	};
	var preload_list = [];
	instanceProto.setPreloadList = function (arr)
	{
		var i, len, p, filename, size, isOgg;
		var total_size = 0;
		for (i = 0, len = arr.length; i < len; ++i)
		{
			p = arr[i];
			filename = p[0];
			size = p[1] * 2;
			isOgg = (filename.length > 4 && filename.substr(filename.length - 4) === ".ogg");
			if ((isOgg && useOgg) || (!isOgg && !useOgg))
			{
				preload_list.push({
					filename: filename,
					size: size,
					obj: null
				});
				total_size += size;
			}
		}
		return total_size;
	};
	instanceProto.startPreloads = function ()
	{
		var i, len, p, src;
		for (i = 0, len = preload_list.length; i < len; ++i)
		{
			p = preload_list[i];
			src = this.runtime.files_subfolder + p.filename;
			p.obj = this.getAudioBuffer(src, false);
		}
	};
	instanceProto.getPreloadedSize = function ()
	{
		var completed = 0;
		var i, len, p;
		for (i = 0, len = preload_list.length; i < len; ++i)
		{
			p = preload_list[i];
			if (p.obj.isLoadedAndDecoded())
				completed += p.size;
			else if (p.obj.isLoaded())	// downloaded but not decoded: only happens in Web Audio API, count as half-way progress
				completed += Math.floor(p.size / 2);
		};
		return completed;
	};
	instanceProto.getAudioBuffer = function (src_, is_music)
	{
		var i, len, a, ret = null, j, k, lenj, ai;
		for (i = 0, len = audioBuffers.length; i < len; i++)
		{
			a = audioBuffers[i];
			if (a.src === src_)
			{
				ret = a;
				break;
			}
		}
		if (!ret)
		{
			ret = new C2AudioBuffer(src_, is_music);
			audioBuffers.push(ret);
		}
		return ret;
	};
	instanceProto.getAudioInstance = function (src_, tag, is_music, looping, vol)
	{
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (a.src === src_ && (a.canBeRecycled() || is_music))
			{
				a.tag = tag;
				return a;
			}
		}
		var b = this.getAudioBuffer(src_, is_music);
		if (!b.bufferObject)
		{
			if (tag !== "<preload>")
			{
				b.playTagWhenReady = tag;
				b.loopWhenReady = looping;
				b.volumeWhenReady = vol;
			}
			return null;
		}
		a = new C2AudioInstance(b, tag);
		audioInstances.push(a);
		return a;
	};
	var taggedAudio = [];
	function getAudioByTag(tag)
	{
		taggedAudio.length = 0;
		if (!tag.length)
		{
			if (!lastAudio || lastAudio.hasEnded())
				return;
			else
			{
				taggedAudio.length = 1;
				taggedAudio[0] = lastAudio;
				return;
			}
		}
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (cr.equals_nocase(tag, a.tag))
				taggedAudio.push(a);
		}
	};
	function reconnectEffects(tag)
	{
		var i, len, arr, n, toNode = context["destination"];
		if (effects.hasOwnProperty(tag))
		{
			arr = effects[tag];
			if (arr.length)
			{
				toNode = arr[0].getInputNode();
				for (i = 0, len = arr.length; i < len; i++)
				{
					n = arr[i];
					if (i + 1 === len)
						n.connectTo(context["destination"]);
					else
						n.connectTo(arr[i + 1].getInputNode());
				}
			}
		}
		getAudioByTag(tag);
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].reconnect(toNode);
		if (micSource && micTag === tag)
		{
			micSource["disconnect"]();
			micSource["connect"](toNode);
		}
	};
	function addEffectForTag(tag, fx)
	{
		if (!effects.hasOwnProperty(tag))
			effects[tag] = [fx];
		else
			effects[tag].push(fx);
		reconnectEffects(tag);
	};
	function Cnds() {};
	Cnds.prototype.OnEnded = function (t)
	{
		return cr.equals_nocase(audTag, t);
	};
	Cnds.prototype.PreloadsComplete = function ()
	{
		var i, len;
		for (i = 0, len = audioBuffers.length; i < len; i++)
		{
			if (!audioBuffers[i].isLoaded())
				return false;
		}
		return true;
	};
	Cnds.prototype.AdvancedAudioSupported = function ()
	{
		return api === API_WEBAUDIO;
	};
	Cnds.prototype.IsSilent = function ()
	{
		return silent;
	};
	Cnds.prototype.IsAnyPlaying = function ()
	{
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			if (audioInstances[i].isPlaying())
				return true;
		}
		return false;
	};
	Cnds.prototype.IsTagPlaying = function (tag)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			if (taggedAudio[i].isPlaying())
				return true;
		}
		return false;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Play = function (file, looping, vol, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
			return;
		lastAudio.setPannerEnabled(false);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtPosition = function (file, looping, vol, x_, y_, angle_, innerangle_, outerangle_, outergain_, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ x: x_, y: y_, a: angle_, ia: innerangle_, oa: outerangle_, og: dbToLinear(outergain_), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		lastAudio.setPan(x_, y_, angle_, innerangle_, outerangle_, dbToLinear(outergain_));
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtObject = function (file, looping, vol, obj, innerangle, outerangle, outergain, tag)
	{
		if (silent || !obj)
			return;
		var inst = obj.getFirstPicked();
		if (!inst)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ obj: inst, ia: innerangle, oa: outerangle, og: dbToLinear(outergain), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		var px = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, true);
		var py = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, false);
		lastAudio.setPan(px, py, cr.to_degrees(inst.angle - inst.layer.getAngle()), innerangle, outerangle, dbToLinear(outergain));
		lastAudio.setObject(inst);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayByName = function (folder, filename, looping, vol, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
			return;
		lastAudio.setPannerEnabled(false);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtPositionByName = function (folder, filename, looping, vol, x_, y_, angle_, innerangle_, outerangle_, outergain_, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ x: x_, y: y_, a: angle_, ia: innerangle_, oa: outerangle_, og: dbToLinear(outergain_), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		lastAudio.setPan(x_, y_, angle_, innerangle_, outerangle_, dbToLinear(outergain_));
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtObjectByName = function (folder, filename, looping, vol, obj, innerangle, outerangle, outergain, tag)
	{
		if (silent || !obj)
			return;
		var inst = obj.getFirstPicked();
		if (!inst)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ obj: inst, ia: innerangle, oa: outerangle, og: dbToLinear(outergain), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		var px = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, true);
		var py = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, false);
		lastAudio.setPan(px, py, cr.to_degrees(inst.angle - inst.layer.getAngle()), innerangle, outerangle, dbToLinear(outergain));
		lastAudio.setObject(inst);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.SetLooping = function (tag, looping)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setLooping(looping === 0);
	};
	Acts.prototype.SetMuted = function (tag, muted)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setMuted(muted === 0);
	};
	Acts.prototype.SetVolume = function (tag, vol)
	{
		getAudioByTag(tag);
		var v = dbToLinear(vol);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setVolume(v);
	};
	Acts.prototype.Preload = function (file)
	{
		if (silent)
			return;
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		if (api === API_APPMOBI)
		{
			if (this.runtime.isDirectCanvas)
				AppMobi["context"]["loadSound"](src);
			else
				AppMobi["player"]["loadSound"](src);
			return;
		}
		else if (api === API_PHONEGAP)
		{
			return;
		}
		this.getAudioInstance(src, "<preload>", is_music, false);
	};
	Acts.prototype.PreloadByName = function (folder, filename)
	{
		if (silent)
			return;
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		if (api === API_APPMOBI)
		{
			if (this.runtime.isDirectCanvas)
				AppMobi["context"]["loadSound"](src);
			else
				AppMobi["player"]["loadSound"](src);
			return;
		}
		else if (api === API_PHONEGAP)
		{
			return;
		}
		this.getAudioInstance(src, "<preload>", is_music, false);
	};
	Acts.prototype.SetPlaybackRate = function (tag, rate)
	{
		getAudioByTag(tag);
		if (rate < 0.0)
			rate = 0;
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setPlaybackRate(rate);
	};
	Acts.prototype.Stop = function (tag)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].stop();
	};
	Acts.prototype.StopAll = function ()
	{
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
			audioInstances[i].stop();
	};
	Acts.prototype.SetPaused = function (tag, state)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			if (state === 0)
				taggedAudio[i].pause();
			else
				taggedAudio[i].resume();
		}
	};
	Acts.prototype.Seek = function (tag, pos)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			taggedAudio[i].seek(pos);
		}
	};
	Acts.prototype.SetSilent = function (s)
	{
		var i, len;
		if (s === 2)					// toggling
			s = (silent ? 1 : 0);		// choose opposite state
		if (s === 0 && !silent)			// setting silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(true);
			silent = true;
		}
		else if (s === 1 && silent)		// setting not silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(false);
			silent = false;
		}
	};
	Acts.prototype.SetMasterVolume = function (vol)
	{
		masterVolume = dbToLinear(vol);
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
			audioInstances[i].updateVolume();
	};
	Acts.prototype.AddFilterEffect = function (tag, type, freq, detune, q, gain, mix)
	{
		if (api !== API_WEBAUDIO || type < 0 || type >= filterTypes.length || !context["createBiquadFilter"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new FilterEffect(type, freq, detune, q, gain, mix));
	};
	Acts.prototype.AddDelayEffect = function (tag, delay, gain, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new DelayEffect(delay, dbToLinear(gain), mix));
	};
	Acts.prototype.AddFlangerEffect = function (tag, delay, modulation, freq, feedback, mix)
	{
		if (api !== API_WEBAUDIO || !context["createOscillator"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new FlangerEffect(delay / 1000, modulation / 1000, freq, feedback / 100, mix));
	};
	Acts.prototype.AddPhaserEffect = function (tag, freq, detune, q, mod, modfreq, mix)
	{
		if (api !== API_WEBAUDIO || !context["createOscillator"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new PhaserEffect(freq, detune, q, mod, modfreq, mix));
	};
	Acts.prototype.AddConvolutionEffect = function (tag, file, norm, mix)
	{
		if (api !== API_WEBAUDIO || !context["createConvolver"])
			return;
		var doNormalize = (norm === 0);
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		var b = this.getAudioBuffer(src, false);
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		var fx;
		if (b.bufferObject)
		{
			fx = new ConvolveEffect(b.bufferObject, doNormalize, mix, src);
		}
		else
		{
			fx = new ConvolveEffect(null, doNormalize, mix, src);
			b.normalizeWhenReady = doNormalize;
			b.convolveWhenReady = fx;
		}
		addEffectForTag(tag, fx);
	};
	Acts.prototype.AddGainEffect = function (tag, g)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new GainEffect(dbToLinear(g)));
	};
	Acts.prototype.AddMuteEffect = function (tag)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new GainEffect(0));	// re-use gain effect with 0 gain
	};
	Acts.prototype.AddTremoloEffect = function (tag, freq, mix)
	{
		if (api !== API_WEBAUDIO || !context["createOscillator"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new TremoloEffect(freq, mix));
	};
	Acts.prototype.AddRingModEffect = function (tag, freq, mix)
	{
		if (api !== API_WEBAUDIO || !context["createOscillator"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new RingModulatorEffect(freq, mix));
	};
	Acts.prototype.AddDistortionEffect = function (tag, threshold, headroom, drive, makeupgain, mix)
	{
		if (api !== API_WEBAUDIO || !context["createWaveShaper"])
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new DistortionEffect(threshold, headroom, drive, makeupgain, mix));
	};
	Acts.prototype.AddCompressorEffect = function (tag, threshold, knee, ratio, attack, release)
	{
		if (api !== API_WEBAUDIO || !context["createDynamicsCompressor"])
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new CompressorEffect(threshold, knee, ratio, attack / 1000, release / 1000));
	};
	Acts.prototype.AddAnalyserEffect = function (tag, fftSize, smoothing)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new AnalyserEffect(fftSize, smoothing));
	};
	Acts.prototype.RemoveEffects = function (tag)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		var i, len, arr;
		if (effects.hasOwnProperty(tag))
		{
			arr = effects[tag];
			if (arr.length)
			{
				for (i = 0, len = arr.length; i < len; i++)
					arr[i].remove();
				arr.length = 0;
				reconnectEffects(tag);
			}
		}
	};
	Acts.prototype.SetEffectParameter = function (tag, index, param, value, ramp, time)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var arr;
		if (!effects.hasOwnProperty(tag))
			return;
		arr = effects[tag];
		if (index < 0 || index >= arr.length)
			return;
		arr[index].setParam(param, value, ramp, time);
	};
	Acts.prototype.SetListenerObject = function (obj_)
	{
		if (!obj_ || api !== API_WEBAUDIO)
			return;
		var inst = obj_.getFirstPicked();
		if (!inst)
			return;
		this.listenerTracker.setObject(inst);
		listenerX = inst.x;
		listenerY = inst.y;
	};
	Acts.prototype.SetListenerZ = function (z)
	{
		this.listenerZ = z;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Duration = function (ret, tag)
	{
		getAudioByTag(tag);
		if (taggedAudio.length)
			ret.set_float(taggedAudio[0].getDuration());
		else
			ret.set_float(0);
	};
	Exps.prototype.PlaybackTime = function (ret, tag)
	{
		getAudioByTag(tag);
		if (taggedAudio.length)
			ret.set_float(taggedAudio[0].getPlaybackTime());
		else
			ret.set_float(0);
	};
	Exps.prototype.Volume = function (ret, tag)
	{
		getAudioByTag(tag);
		if (taggedAudio.length)
		{
			var v = taggedAudio[0].getVolume();
			ret.set_float(linearToDb(v));
		}
		else
			ret.set_float(0);
	};
	Exps.prototype.MasterVolume = function (ret)
	{
		ret.set_float(masterVolume);
	};
	Exps.prototype.EffectCount = function (ret, tag)
	{
		tag = tag.toLowerCase();
		var arr = null;
		if (effects.hasOwnProperty(tag))
			arr = effects[tag];
		ret.set_int(arr ? arr.length : 0);
	};
	function getAnalyser(tag, index)
	{
		var arr = null;
		if (effects.hasOwnProperty(tag))
			arr = effects[tag];
		if (arr && index >= 0 && index < arr.length && arr[index].freqBins)
			return arr[index];
		else
			return null;
	};
	Exps.prototype.AnalyserFreqBinCount = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		ret.set_int(analyser ? analyser.node["frequencyBinCount"] : 0);
	};
	Exps.prototype.AnalyserFreqBinAt = function (ret, tag, index, bin)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		bin = Math.floor(bin);
		var analyser = getAnalyser(tag, index);
		if (!analyser)
			ret.set_float(0);
		else if (bin < 0 || bin >= analyser.node["frequencyBinCount"])
			ret.set_float(0);
		else
			ret.set_float(analyser.freqBins[bin]);
	};
	Exps.prototype.AnalyserPeakLevel = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		if (analyser)
			ret.set_float(analyser.peak);
		else
			ret.set_float(0);
	};
	Exps.prototype.AnalyserRMSLevel = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		if (analyser)
			ret.set_float(analyser.rms);
		else
			ret.set_float(0);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.MagiCam = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var CMath = {};
	CMath.lerp = function(a, b, x)
	{
		return a + (b - a) * x;
	};
	CMath.cubic = function(a, b, c, d, x)
	{
		return this.lerp(this.lerp(this.lerp(a, b, x), this.lerp(b, c, x), x), this.lerp(this.lerp(b, c, x), this.lerp(c, d, x), x), x);
	}
	CMath.clamp = function(x, min, max)
	{
		if (x < min)
		{
			return min;
		}
		else if (x > max)
		{
			return max;
		}
		return x;
	};
	function Transition(Type, Duration, Param1, Param2, Param3, Param4)
	{
		this.type = Type;
		this.duration = Duration;
		this.param1 = Param1;
		this.param2 = Param2;
		this.param3 = Param3;
		this.param4 = Param4;
		this.progress = 0;
	}
	function Camera(Name, X, Y, Scale, Global)
	{
		this.global = Global;
		this.name = Name;
		this.x = X;
		this.y = Y;
		this.scale = Scale;
		this.following = false;
		this.followedObjects = [];
		this.followedObjectUIDs = [];
		this.objectWeights = [];
		this.followedObjectIPs = [];
		this.followLag = 1;
		this.zoomToContain = false;
		this.zoomMarginH = 0;
		this.zoomMarginV = 0;
		this.zoomBoundU = -1;
		this.zoomBoundL = -1;
		this.transitions = [];
		this.moveTransFinished = false;
		this.zoomTransFinished = false;
		this.isShaking = false;
		this.shakeX = 0;
		this.shakeY = 0;
		this.shakeZoom = 0;
		this.shakeTimer = 0;
		this.shakeStrength = 0;
		this.shakeMaxDeviation = 0;
		this.shakeMaxZoomDeviation = 0;
		this.shakeLength = 0;
		this.shakeBuildTime = 0;
		this.shakeDropTime = 0;
	}
	Camera.prototype.GetName = function()
	{
		return this.name;
	};
	Camera.prototype.GetX = function()
	{
		return this.x;
	};
	Camera.prototype.SetX = function(value)
	{
		this.x = value;
	};
	Camera.prototype.GetY = function()
	{
		return this.y;
	};
	Camera.prototype.SetY = function(value)
	{
		this.y = value;
	};
	Camera.prototype.GetShakeX = function()
	{
		return this.shakeX;
	};
	Camera.prototype.GetShakeY = function()
	{
		return this.shakeY;
	};
	Camera.prototype.SetFollowedObject = function(fObject)
	{
		this.followedObject = fObject;
	};
	Camera.prototype.ShakeCamera = function(dt)
	{
		if (this.isShaking)
		{
			this.shakeTimer += dt;
			if (this.shakeTimer < this.shakeLength)
			{
				var shakeStrength = 0;
				if (this.shakeTimer < this.shakeBuildTime)
				{
					shakeStrength = CMath.lerp(0, this.shakeStrength, this.shakeTimer / this.shakeBuildTime);
				}
				else
				{
					shakeStrength = this.shakeStrength;
				}
				if (this.shakeTimer > this.shakeDropTime)
				{
					shakeStrength = CMath.lerp(this.shakeStrength, 0, (this.shakeTimer - this.shakeDropTime) / (this.shakeLength - this.shakeDropTime));
				}
				var shakeAngle = Math.floor(Math.random() * 361) / 57.2958;
				var shakeX = CMath.lerp(0, Math.cos(shakeAngle) * this.shakeMaxDeviation, shakeStrength);
				var shakeY = CMath.lerp(0, Math.sin(shakeAngle) * this.shakeMaxDeviation, shakeStrength);
				var shakeZoom = CMath.lerp(0, (Math.floor(Math.random() * 201 - 100) / 100) * this.shakeMaxZoomDeviation, shakeStrength);
				this.shakeX = CMath.lerp(this.shakeX, shakeX, shakeStrength);
				this.shakeY = CMath.lerp(this.shakeY, shakeY, shakeStrength);
				this.shakeZoom = CMath.lerp(this.shakeZoom, shakeZoom, shakeStrength);
			}
			else
			{
				this.isShaking = false;
				this.shakeX = 0;
				this.shakeY = 0;
				this.shakeZoom = 0;
			}
		}
	}
	Camera.prototype.ProcessTransitions = function(dt)
	{
		this.moveTransFinished = false;
		this.zoomTransFinished = false;
		var transition;
		for (var i = 0; i < this.transitions.length; )
		{
			transition = this.transitions[i];
			transition.progress = CMath.clamp(transition.progress + (1.0 / transition.duration * dt), 0.0, 1.0);
			if (transition.type == "MOVE")
			{
				this.x = CMath.cubic(transition.param3, transition.param3, transition.param1, transition.param1, transition.progress);
				this.y = CMath.cubic(transition.param4, transition.param4, transition.param2, transition.param2, transition.progress);
			}
			else if (transition.type == "SCALE")
			{
				this.scale = CMath.cubic(transition.param2, transition.param2, transition.param1, transition.param1, transition.progress);
			}
			if (transition.progress == 1)
			{
				if (transition.type == "MOVE")
				{
					this.moveTransFinished = true;
				}
				else if (transition.type == "SCALE")
				{
					this.zoomTransFinished = true;
				}
				this.transitions.splice(i, 1);
			}
			else
			{
				i++;
			}
		}
	};
	Camera.prototype.UpdateCameraTarget = function(dt, targetCamera)
	{
		for (var i = 0; i < this.transitions.length; i++)
		{
			var transition = this.transitions[i];
			if (transition.type == "MOVE")
			{
				transition.param1 = targetCamera.GetX();
				transition.param2 = targetCamera.GetY();
			}
			else if (transition.type == "SCALE")
			{
				transition.param1 = targetCamera.scale;
			}
		}
	};
	Camera.prototype.ProcessFollowing = function(dt, screenWidth, screenHeight, layout)
	{
		var followed = this.followedObjects;
		var followedObjectIPs = this.followedObjectIPs;
		if (this.following && followed.length > 0)
		{
			var tempX = 0, tempY = 0, tempScale = 0;
			if (!this.zoomToContain)
			{
				var sumX = 0, sumY = 0, sumW = 0;
				for (var i = 0; i < followed.length; i++)
				{
					sumX += followed[i].getImagePoint(followedObjectIPs[i], true) * this.objectWeights[i];
					sumY += followed[i].getImagePoint(followedObjectIPs[i], false) * this.objectWeights[i];
					sumW += this.objectWeights[i];
				}
				tempX = sumX / sumW;
				tempY = sumY / sumW;
			}
			else
			{
				var minX = 0, maxX = 0, minY = 0, maxY = 0;
				var minXChanged = false, maxXChanged = false, minYChanged = false, maxYChanged = false;
				for (var i = 0; i < followed.length; i++)
				{
					var fObject = followed[i];
					fObject.update_bbox();
					if (minXChanged)
					{
						minX = Math.min(minX, fObject.bbox.left);
					}
					else
					{
						minX = fObject.bbox.left;
						minXChanged = true;
					}
					if (maxXChanged)
					{
						maxX = Math.max(maxX, fObject.bbox.right);
					}
					else
					{
						maxX = fObject.bbox.right;
						maxXChanged = true;
					}
					if (minYChanged)
					{
						minY = Math.min(minY, fObject.bbox.top);
					}
					else
					{
						minY = fObject.bbox.top;
						minYChanged = true;
					}
					if (maxYChanged)
					{
						maxY = Math.max(maxY, fObject.bbox.bottom);
					}
					else
					{
						maxY = fObject.bbox.bottom;
						maxYChanged = true;
					}
				}
				var tempXScale = (screenWidth - this.zoomMarginH * 2) / (maxX - minX);
				var tempYScale = (screenHeight - this.zoomMarginV * 2) / (maxY - minY);
				tempX = CMath.lerp(minX, maxX, 0.5);
				tempY = CMath.lerp(minY, maxY, 0.5);
				if (this.x < ((screenWidth / 2) / tempXScale))
				{
					tempXScale = (screenWidth - this.zoomMarginH) / maxX;
					tempX = (screenWidth / tempXScale) / 2;
				}
				if (this.x > (layout.width - (screenWidth / 2) / tempXScale))
				{
					tempXScale = (screenWidth - this.zoomMarginH) / (layout.width - minX);
					tempX = layout.width - (screenWidth / tempXScale) / 2;
				}
				if (this.y < ((screenHeight / 2) / tempYScale))
				{
					tempYScale = (screenHeight - this.zoomMarginV) / maxY;
					tempY = (screenHeight / tempYScale) / 2;
				}
				if (this.y > (layout.height - (screenHeight / 2) / tempYScale))
				{
					tempYScale = (screenHeight - this.zoomMarginV) / (layout.height - minY);
					tempY = layout.height - (screenHeight / tempYScale) / 2;
				}
				tempScale = Math.min(tempXScale, tempYScale);
				if (this.zoomBoundL != -1)
				{
					if (tempScale < this.zoomBoundL)
					{
						tempScale = this.zoomBoundL;
					}
				}
				if (this.zoomBoundU != -1)
				{
					if (tempScale > this.zoomBoundU)
					{
						tempScale = this.zoomBoundU;
					}
				}
			}
			if (this.followLag == 1)
			{
				this.x = tempX;
				this.y = tempY;
				if (this.zoomToContain)
				{
					this.scale = tempScale;
				}
			}
			else
			{
				var lag = (this.followLag * 4.0 * dt) * Math.sqrt(1.0 / dt);
				this.x = CMath.lerp(this.x, tempX, lag);
				this.y = CMath.lerp(this.y, tempY, lag);
				if (this.zoomToContain)
				{
					this.scale = CMath.lerp(this.scale, tempScale, lag);
				}
			}
		}
	};
	var pluginProto = cr.plugins_.MagiCam.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.localCameras = [];
		this.localCameraCount = 0;
		this.localCameraCountOld = 0;
		this.transCamera = null;
		this.transTarget = null;
		this.isSwitchingCameras = false;
		this.globalCameras = [];
		this.activeCamera = null;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.runtime.tickMe(this);
		this.my_timescale = -1.0;
	};
	instanceProto.saveToJSON = function ()
	{
		if (null != this.transCamera)
		{
			this.localCameras.push(this.transCamera);
		}
		var o = {
			"lcc": this.localCameraCount,
			"olcc": this.localCameraCountOld,
			"alcc": this.localCameras.length,
			"agcc": this.globalCameras.length,
			"tcnn": (this.transCamera == null ? false : true)
		};
		for (var i = 0; i < this.localCameras.length; i++)
		{
			o["lc" + i + "g"] = this.localCameras[i].global;
			o["lc" + i + "n"] = this.localCameras[i].name;
			o["lc" + i + "x"] = this.localCameras[i].x;
			o["lc" + i + "y"] = this.localCameras[i].y;
			o["lc" + i + "s"] = this.localCameras[i].scale;
			o["lc" + i + "f"] = this.localCameras[i].following;
			o["lc" + i + "foc"] = this.localCameras[i].followedObjects.length;
			for (var f = 0; f < this.localCameras[i].followedObjects.length; f++)
			{
				o["lc" + i + "fo" + f] = this.localCameras[i].followedObjects[f].uid;
			}
			for (var w = 0; w < this.localCameras[i].objectWeights.length; w++)
			{
				o["lc" + i + "fow" + w] = this.localCameras[i].objectWeights[w];
			}
			for (var ip = 0; ip < this.localCameras[i].followedObjectIPs.length; ip++)
			{
				o["lc" + i + "foip" + ip] = this.localCameras[i].followedObjectIPs[ip];
			}
			o["lc" + i + "fl"] = this.localCameras[i].followLag;
			o["lc" + i + "ztc"] = this.localCameras[i].zoomToContain;
			o["lc" + i + "zmh"] = this.localCameras[i].zoomMarginH;
			o["lc" + i + "zmv"] = this.localCameras[i].zoomMarginV;
			o["lc" + i + "zbu"] = this.localCameras[i].zoomBoundU;
			o["lc" + i + "zbl"] = this.localCameras[i].zoomBoundL;
			o["lc" + i + "tc"] = this.localCameras[i].transitions.length;
			for (var t = 0; t < this.localCameras[i].transitions.length; t++)
			{
				o["lc" + i + "t" + t + "tp"] = this.localCameras[i].transitions[t].type;
				o["lc" + i + "t" + t + "d"] = this.localCameras[i].transitions[t].duration;
				o["lc" + i + "t" + t + "p1"] = this.localCameras[i].transitions[t].param1;
				o["lc" + i + "t" + t + "p2"] = this.localCameras[i].transitions[t].param2;
				o["lc" + i + "t" + t + "p3"] = this.localCameras[i].transitions[t].param3;
				o["lc" + i + "t" + t + "p4"] = this.localCameras[i].transitions[t].param4;
				o["lc" + i + "t" + t + "pr"] = this.localCameras[i].transitions[t].progress;
			}
			o["lc" + i + "mtf"] = this.localCameras[i].moveTransFinished;
			o["lc" + i + "ztf"] = this.localCameras[i].zoomTransFinished;
			o["lc" + i + "csis"] = this.localCameras[i].isShaking;
			o["lc" + i + "cssx"] = this.localCameras[i].shakeX;
			o["lc" + i + "cssy"] = this.localCameras[i].shakeY;
			o["lc" + i + "cssz"] = this.localCameras[i].shakeZoom;
			o["lc" + i + "csst"] = this.localCameras[i].shakeTimer;
			o["lc" + i + "csss"] = this.localCameras[i].shakeStrength;
			o["lc" + i + "cssmd"] = this.localCameras[i].shakeMaxDeviation;
			o["lc" + i + "cssmzd"] = this.localCameras[i].shakeMaxZoomDeviation;
			o["lc" + i + "cssl"] = this.localCameras[i].shakeLength;
			o["lc" + i + "cssbt"] = this.localCameras[i].shakeBuildTime;
			o["lc" + i + "cssdt"] = this.localCameras[i].shakeDropTime;
		}
		for (var i = 0; i < this.globalCameras.length; i++)
		{
			o["gc" + i + "g"] = this.globalCameras[i].global;
			o["gc" + i + "n"] = this.globalCameras[i].name;
			o["gc" + i + "x"] = this.globalCameras[i].x;
			o["gc" + i + "y"] = this.globalCameras[i].y;
			o["gc" + i + "s"] = this.globalCameras[i].scale;
			o["gc" + i + "f"] = this.globalCameras[i].following;
			o["gc" + i + "foc"] = this.globalCameras[i].followedObjects.length;
			for (var f = 0; f < this.globalCameras[i].followedObjects.length; f++)
			{
				o["gc" + i + "fo" + f] = this.globalCameras[i].followedObjects[f].uid;
			}
			for (var w = 0; w < this.globalCameras[i].objectWeights.length; w++)
			{
				o["gc" + i + "fow" + w] = this.globalCameras[i].objectWeights[w];
			}
			for (var ip = 0; ip < this.globalCameras[i].followedObjectIPs.length; ip++)
			{
				o["gc" + i + "foip" + ip] = this.globalCameras[i].followedObjectIPs[ip];
			}
			o["gc" + i + "fl"] = this.globalCameras[i].followLag;
			o["gc" + i + "ztc"] = this.globalCameras[i].zoomToContain;
			o["gc" + i + "zmh"] = this.globalCameras[i].zoomMarginH;
			o["gc" + i + "zmv"] = this.globalCameras[i].zoomMarginV;
			o["gc" + i + "zbu"] = this.globalCameras[i].zoomBoundU;
			o["gc" + i + "zbl"] = this.globalCameras[i].zoomBoundL;
			o["gc" + i + "tc"] = this.globalCameras[i].transitions.length;
			for (var t = 0; t < this.globalCameras[i].transitions.length; t++)
			{
				o["gc" + i + "t" + t + "tp"] = this.globalCameras[i].transitions[t].type;
				o["gc" + i + "t" + t + "d"] = this.globalCameras[i].transitions[t].duration;
				o["gc" + i + "t" + t + "p1"] = this.globalCameras[i].transitions[t].param1;
				o["gc" + i + "t" + t + "p2"] = this.globalCameras[i].transitions[t].param2;
				o["gc" + i + "t" + t + "p3"] = this.globalCameras[i].transitions[t].param3;
				o["gc" + i + "t" + t + "p4"] = this.globalCameras[i].transitions[t].param4;
			}
			o["gc" + i + "mtf"] = this.globalCameras[i].moveTransFinished;
			o["gc" + i + "ztf"] = this.globalCameras[i].zoomTransFinished;
			o["gc" + i + "csis"] = this.globalCameras[i].isShaking;
			o["gc" + i + "cssx"] = this.globalCameras[i].shakeX;
			o["gc" + i + "cssy"] = this.globalCameras[i].shakeY;
			o["gc" + i + "cssz"] = this.globalCameras[i].shakeZoom;
			o["gc" + i + "csst"] = this.globalCameras[i].shakeTimer;
			o["gc" + i + "csss"] = this.globalCameras[i].shakeStrength;
			o["gc" + i + "cssmd"] = this.globalCameras[i].shakeMaxDeviation;
			o["gc" + i + "cssmzd"] = this.globalCameras[i].shakeMaxZoomDeviation;
			o["gc" + i + "cssl"] = this.globalCameras[i].shakeLength;
			o["gc" + i + "cssbt"] = this.globalCameras[i].shakeBuildTime;
			o["gc" + i + "cssdt"] = this.globalCameras[i].shakeDropTime;
		}
		if (null != this.activeCamera)
		{
			o["ac"] = this.activeCamera.name;
		}
		else
		{
			o["ac"] = "null";
		}
		if (null != this.transTarget)
		{
			o["tt"] = this.transTarget.name;
		}
		return o;
	}
	instanceProto.loadFromJSON = function (o)
	{
		this.localCameras = [];
		this.globalCameras = [];
		this.localCameraCount = o["lcc"];
		this.localCameraCountOld = o["olcc"];
		var localCamCount = o["alcc"];
		for (var i = 0; i < localCamCount; i++)
		{
			var tempCam = new Camera("", 0, 0, 0, false);
			tempCam.global = o["lc" + i + "g"];
			tempCam.name = o["lc" + i + "n"];
			tempCam.x = o["lc" + i + "x"];
			tempCam.y = o["lc" + i + "y"];
			tempCam.scale = o["lc" + i + "s"];
			tempCam.following = o["lc" + i + "f"];
			var foCount = o["lc" + i + "foc"];
			for (var f = 0; f < foCount; f++)
			{
				tempCam.followedObjectUIDs.push(o["lc" + i + "fo" + f]);
			}
			for (var w = 0; w < foCount; w++)
			{
				tempCam.objectWeights.push(o["lc" + i + "fow" + w]);
			}
			for (var ip = 0; ip < foCount; ip++)
			{
				tempCam.followedObjectIPs.push(o["lc" + i + "foip" + ip]);
			}
			tempCam.followLag = o["lc" + i + "fl"];
			tempCam.zoomToContain = o["lc" + i + "ztc"];
			tempCam.zoomMarginH = o["lc" + i + "zmh"];
			tempCam.zoomMarginV = o["lc" + i + "zmv"];
			tempCam.zoomBoundU = o["lc" + i + "zbu"];
			tempCam.zoomBoundL = o["lc" + i + "zbl"];
			var transCount = o["lc" + i + "tc"];
			for (var t = 0; t < transCount; t++)
			{
				var tempTrans = new Transition("", 0, 0, 0, 0);
				tempTrans.type = o["lc" + i + "t" + t + "tp"];
				tempTrans.duration = o["lc" + i + "t" + t + "d"];
				tempTrans.param1 = o["lc" + i + "t" + t + "p1"];
				tempTrans.param2 = o["lc" + i + "t" + t + "p2"];
				tempTrans.param3 = o["lc" + i + "t" + t + "p3"];
				tempTrans.param4 = o["lc" + i + "t" + t + "p4"];
				tempTrans.progress = o["lc" + i + "t" + t + "pr"];
				tempCam.transitions.push(tempTrans);
			}
			tempCam.moveTransFinished = o["lc" + i + "mtf"];
			tempCam.zoomTransFinished = o["lc" + i + "ztf"];
			tempCam.isShaking = o["lc" + i + "csis"];
			tempCam.shakeX = o["lc" + i + "cssx"];
			tempCam.shakeY = o["lc" + i + "cssy"];
			tempCam.shakeZoom = o["lc" + i + "cssz"];
			tempCam.shakeTimer = o["lc" + i + "csst"];
			tempCam.shakeStrength = o["lc" + i + "csss"];
			tempCam.shakeMaxDeviation = o["lc" + i + "cssmd"];
			tempCam.shakeMaxZoomDeviation = o["lc" + i + "cssmzd"];
			tempCam.shakeLength = o["lc" + i + "cssl"];
			tempCam.shakeBuildTime = o["lc" + i + "cssbt"];
			tempCam.shakeDropTime = o["lc" + i + "cssdt"];
			this.localCameras.push(tempCam);
		}
		var globalCamCount = o["agcc"];
		for (var i = 0; i < globalCamCount; i++)
		{
			var tempCam = new Camera("", 0, 0, 0, false);
			tempCam.global = o["gc" + i + "g"];
			tempCam.name = o["gc" + i + "n"];
			tempCam.x = o["gc" + i + "x"];
			tempCam.y = o["gc" + i + "y"];
			tempCam.scale = o["gc" + i + "s"];
			tempCam.following = o["gc" + i + "f"];
			var foCount = o["gc" + i + "foc"];
			for (var f = 0; f < foCount; f++)
			{
				tempCam.followedObjectUIDs.push(o["gc" + i + "fo" + f]);
			}
			for (var w = 0; w < foCount; w++)
			{
				tempCam.objectWeights.push(o["gc" + i + "fow" + w]);
			}
			for (var ip = 0; ip < foCount; ip++)
			{
				tempCam.followedObjectIPs.push(o["gc" + i + "foip" + ip]);
			}
			tempCam.followLag = o["gc" + i + "fl"];
			tempCam.zoomToContain = o["gc" + i + "ztc"];
			tempCam.zoomMarginH = o["gc" + i + "zmh"];
			tempCam.zoomMarginV = o["gc" + i + "zmv"];
			tempCam.zoomBoundU = o["gc" + i + "zbu"];
			tempCam.zoomBoundL = o["gc" + i + "zbl"];
			var transCount = o["gc" + i + "tc"];
			for (var t = 0; t < transCount; t++)
			{
				var tempTrans = new Transition("", 0, 0, 0, 0);
				tempTrans.type = o["gc" + i + "t" + t + "tp"];
				tempTrans.duration = o["gc" + i + "t" + t + "d"];
				tempTrans.param1 = o["gc" + i + "t" + t + "p1"];
				tempTrans.param2 = o["gc" + i + "t" + t + "p2"];
				tempTrans.param3 = o["gc" + i + "t" + t + "p3"];
				tempTrans.param4 = o["gc" + i + "t" + t + "p4"];
				tempCam.transitions.push(tempTrans);
			}
			tempCam.moveTransFinished = o["gc" + i + "mtf"];
			tempCam.zoomTransFinished = o["gc" + i + "ztf"];
			tempCam.isShaking = o["gc" + i + "csis"];
			tempCam.shakeX = o["gc" + i + "cssx"];
			tempCam.shakeY = o["gc" + i + "cssy"];
			tempCam.shakeZoom = o["gc" + i + "cssz"];
			tempCam.shakeTimer = o["gc" + i + "csst"];
			tempCam.shakeStrength = o["gc" + i + "csss"];
			tempCam.shakeMaxDeviation = o["gc" + i + "cssmd"];
			tempCam.shakeMaxZoomDeviation = o["gc" + i + "cssmzd"];
			tempCam.shakeLength = o["gc" + i + "cssl"];
			tempCam.shakeBuildTime = o["gc" + i + "cssbt"];
			tempCam.shakeDropTime = o["gc" + i + "cssdt"];
			this.globalCameras.push(tempCam);
		}
		var activeCam = o["ac"];
		if (activeCam == "null")
		{
			this.activeCamera = null;
		}
		else
		{
			this.activeCamera = this.GetCamera(activeCam);
		}
		var hasTransCam = o["tcnn"];
		if (hasTransCam)
		{
			this.transCamera = this.localCameras.pop();
			this.transTarget = this.GetCamera(o["tt"]);
		}
	}
	instanceProto.afterLoad = function()
	{
		for (var i = 0; i < this.localCameras.length; i++)
		{
			for (var o = 0; o < this.localCameras[i].followedObjectUIDs.length; o++)
			{
				this.localCameras[i].followedObjects.push(this.runtime.getObjectByUID(this.localCameras[i].followedObjectUIDs[o]));
			}
		}
		for (var i = 0; i < this.globalCameras.length; i++)
		{
			for (var o = 0; o < this.globalCameras[i].followedObjectUIDs.length; o++)
			{
				this.globalCameras[i].followedObjects.push(this.runtime.getObjectByUID(this.globalCameras[i].followedObjectUIDs[o]));
			}
		}
	}
	instanceProto.onLayoutChange = function()
	{
		for (var i = 0; i < this.localCameraCountOld; i++)
		{
			this.localCameras.shift();
		}
		this.localCameraCount -= this.localCameraCountOld;
	}
	instanceProto.tick = function()
	{
		this.localCameraCountOld = this.localCameraCount;
		var dt = this.runtime.getDt(this);
		if (dt == 0)
		{
			dt = 0.1;
		}
		for (var i = 0; i < this.globalCameras.length; i++)
		{
			this.globalCameras[i].ProcessTransitions(dt);
			this.globalCameras[i].ProcessFollowing(dt, this.runtime.original_width, this.runtime.original_height, this.runtime.running_layout);
			this.globalCameras[i].ShakeCamera(dt);
		}
		for (var i = 0; i < this.localCameras.length; i++)
		{
			this.localCameras[i].ProcessTransitions(dt);
			this.localCameras[i].ProcessFollowing(dt, this.runtime.original_width, this.runtime.original_height, this.runtime.running_layout);
			this.localCameras[i].ShakeCamera(dt);
		}
		if (null != this.transCamera)
		{
			this.transCamera.UpdateCameraTarget(dt, this.transTarget);
			this.transCamera.ProcessTransitions(dt);
			if (this.transCamera.moveTransFinished)
			{
				this.activeCamera = this.transTarget;
				this.transCamera = null;
			}
		}
		if (this.activeCamera != null)
		{
			this.runtime.running_layout.scrollToX(this.activeCamera.GetX() + this.activeCamera.GetShakeX());
			this.runtime.running_layout.scrollToY(this.activeCamera.GetY() + this.activeCamera.GetShakeY());
			this.runtime.running_layout.scale = this.activeCamera.scale + this.activeCamera.shakeZoom;
			this.runtime.redraw = true;
		}
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function (glw)
	{
	};
	instanceProto.GetCamera = function(Name)
	{
		if (Name == "")
		{
			return this.activeCamera;
		}
		for (var i = (this.globalCameras.length - 1) ; i >= 0; i--)
		{
			if (this.globalCameras[i].GetName() == Name)
			{
				return this.globalCameras[i];
			}
		}
		for (var i = (this.localCameras.length - 1); i >= 0; i--)
		{
			if (this.localCameras[i].GetName() == Name)
			{
				return this.localCameras[i];
			}
		}
		return null;
	};
	function Cnds() {};
	Cnds.prototype.TransitionFinished = function (CameraName, Transition)
	{
		var camera = this.GetCamera(CameraName);
		if (camera != null)
		{
			if (Transition == 0)
			{
				return camera.moveTransFinished;
			}
			else if (Transition == 1)
			{
				return camera.zoomTransFinished;
			}
		}
		return false;
	};
	Cnds.prototype.TransitionIsInProgress = function (CameraName, Transition)
	{
		var camera = this.GetCamera(CameraName);
		if (camera != null)
		{
			for (var i = 0; i < camera.transitions.length; i++)
			{
				if (camera.transitions[i].type == "MOVE" && Transition == 0)
				{
					return true;
				}
				else if (camera.transitions[i].type == "SCALE" && Transition == 1)
				{
					return true;
				}
			}
		}
		return false;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.FollowObject = function (CameraName, FollowedObject, ObjectWeight, ImagePoint)
	{
		if (!FollowedObject)
		{
			return;
		}
		var camera = this.GetCamera(CameraName);
		if (camera != null)
		{
			var followedObject = FollowedObject.getFirstPicked();
			if (camera.global && !FollowedObject.global)
			{
				alert("MagiCam:\n\nObject not global - global cameras must follow global objects.");
				return;
			}
			camera.followedObjects.push(followedObject);
			camera.objectWeights.push(ObjectWeight);
			camera.followedObjectIPs.push(ImagePoint);
		}
	};
	Acts.prototype.SetFollowLag = function (CameraName, FollowLag)
	{
		var camera = this.GetCamera(CameraName);
		if (camera != null)
		{
			camera.followLag = 1 - FollowLag / 100;
		}
	};
	Acts.prototype.ZoomToContain = function (CameraName, Zoom, ZoomMarginH, ZoomMarginV, ZoomBoundU, ZoomBoundL)
	{
		var camera = this.GetCamera(CameraName);
		if (camera != null)
		{
			if (Zoom == 0)
			{
				camera.zoomToContain = true;
				camera.zoomMarginH = ZoomMarginH;
				camera.zoomMarginV = ZoomMarginV;
				camera.zoomBoundU = ZoomBoundU;
				camera.zoomBoundL = ZoomBoundL;
			}
			else
			{
				camera.zoomToContain = false;
			}
		}
	};
	Acts.prototype.EnableFollowing = function (CameraName, Following)
	{
		var camera = this.GetCamera(CameraName);
		if (camera != null)
		{
			if (Following == 0)
			{
				camera.following = true;
			}
			else
			{
				camera.following = false;
			}
		}
	};
	Acts.prototype.UnfollowObject = function (CameraName, FollowedObject)
	{
		if (!FollowedObject)
		{
			return;
		}
		var camera = this.GetCamera(CameraName);
		if (camera != null)
		{
			var followedObject = FollowedObject.getFirstPicked();
			for (var i = 0; i < camera.followedObjects.length; i++)
			{
				if (camera.followedObjects[i] == followedObject)
				{
					camera.followedObjects.splice(i, 1);
					break;
				}
			}
		}
	};
	Acts.prototype.CreateLocalCamera = function (cameraName, cameraX, cameraY, cameraScale, Active)
	{
		if (cameraName == "")
		{
			alert("Camera name must not be blank.");
			return;
		}
		this.localCameras.push(new Camera(cameraName, cameraX, cameraY, cameraScale, false));
		this.localCameraCount++;
		if (Active == 1)
		{
			this.activeCamera = this.localCameras[this.localCameras.length - 1];
			this.runtime.running_layout.scale = this.activeCamera.scale;
		}
	};
	Acts.prototype.CreateGlobalCamera = function (cameraName, cameraX, cameraY, cameraScale, Active)
	{
		if (cameraName == "")
		{
			alert("Camera name must not be blank.");
			return;
		}
		else if (this.GetCamera(cameraName) != null)
		{
			return;
		}
		this.globalCameras.push(new Camera(cameraName, cameraX, cameraY, cameraScale, true));
		if (Active == 1)
		{
			this.activeCamera = this.globalCameras[this.globalCameras.length - 1];
			this.runtime.running_layout.scrollToX(this.activeCamera.GetX());
			this.runtime.running_layout.scrollToY(this.activeCamera.GetY());
			this.runtime.running_layout.scale = this.activeCamera.scale;
		}
	};
	Acts.prototype.SetActiveCamera = function (CameraName)
	{
		var camera = this.GetCamera(CameraName);
		if (camera != null)
		{
			this.activeCamera = camera;
			this.runtime.running_layout.scrollToX(camera.GetX());
			this.runtime.running_layout.scrollToY(camera.GetY());
			this.runtime.running_layout.scale = camera.scale;
		}
	};
	Acts.prototype.SetScrollSmoothing = function (CameraName)
	{
	};
	Acts.prototype.SetXPosition = function (CameraName, X)
	{
		var camera = this.GetCamera(CameraName);
		if (camera != null)
		{
			camera.SetX(X);
		}
	};
	Acts.prototype.SetYPosition = function (CameraName, Y)
	{
		var camera = this.GetCamera(CameraName);
		if (camera != null)
		{
			camera.SetY(Y);
		}
	};
	Acts.prototype.SetPosition = function (CameraName, X, Y)
	{
		var camera = this.GetCamera(CameraName);
		if (camera != null)
		{
			camera.SetX(X);
			camera.SetY(Y);
		}
	};
	Acts.prototype.SetZoom = function (CameraName, Zoom)
	{
		var camera = this.GetCamera(CameraName);
		if (camera != null)
		{
			camera.scale = Zoom;
		}
	};
	Acts.prototype.TransitionToPoint = function (CameraName, X, Y, Duration)
	{
		var camera = this.GetCamera(CameraName);
		if (camera != null)
		{
			for (var i = 0; i < camera.transitions.length; i++)
			{
				if (camera.transitions[i].type == "MOVE")
				{
					camera.transitions.splice(i, 1);
					break;
				}
			}
			camera.transitions.push(new Transition("MOVE", Duration, X, Y, camera.GetX(), camera.GetY()));
			camera.following = false;
			camera.zoomToContain = false;
		}
	};
	Acts.prototype.TransitionToZoom = function (CameraName, Zoom, Duration)
	{
		var camera = this.GetCamera(CameraName);
		if (camera != null)
		{
			for (var i = 0; i < camera.transitions.length; i++)
			{
				if (camera.transitions[i].type == "SCALE")
				{
					camera.transitions.splice(i, 1);
					break;
				}
			}
			camera.transitions.push(new Transition("SCALE", Duration, Zoom, camera.scale, null, null));
			camera.zoomToContain = false;
		}
	};
	Acts.prototype.TransitionToCamera = function (CameraName, Duration)
	{
		var camera = this.GetCamera(CameraName);
		if (camera != null)
		{
			this.transTarget = camera;
			this.transCamera = new Camera("transCamera", this.activeCamera.GetX(), this.activeCamera.GetY(), this.activeCamera.scale, false);
			this.transCamera.transitions.push(new Transition("MOVE", Duration, this.transTarget.GetX(), this.transTarget.GetY(), this.transCamera.GetX(), this.transCamera.GetY()));
			this.transCamera.transitions.push(new Transition("SCALE", Duration, this.transTarget.scale, this.transCamera.scale, null, null));
			this.activeCamera = this.transCamera;
			this.isSwitchingCameras = true;
		}
	};
	Acts.prototype.ShakeCamera = function (CameraName, Strength, MaxDeviation, MaxZoomDeviation, BuildLength, DropTime, Duration)
	{
		var camera = this.GetCamera(CameraName);
		if (camera != null)
		{
			camera.isShaking = true;
			camera.shakeStrength = Strength / 100;
			camera.shakeMaxDeviation = MaxDeviation;
			camera.shakeMaxZoomDeviation = MaxZoomDeviation;
			camera.shakeBuildTime = BuildLength;
			camera.shakeDropTime = DropTime;
			camera.shakeLength = Duration;
			camera.shakeTimer = 0;
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.MovementTransitionProgress = function (ret, CameraName)
	{
		var camera = this.GetCamera(CameraName);
		if (null != camera)
		{
			for (var i = 0; i < camera.transitions.length; i++)
			{
				if (camera.transitions[i].type == "MOVE")
				{
					ret.set_float(camera.transitions[i].progress);
					return;
				}
			}
		}
		ret.set_float(0);
	};
	Exps.prototype.ZoomTransitionProgress = function (ret, CameraName)
	{
		var camera = this.GetCamera(CameraName);
		if (null != camera)
		{
			for (var i = 0; i < camera.transitions.length; i++)
			{
				if (camera.transitions[i].type == "SCALE")
				{
					ret.set_float(camera.transitions[i].progress);
					return;
				}
			}
		}
		ret.set_float(0);
	};
	Exps.prototype.GetX = function (ret, CameraName)
	{
		var camera = this.GetCamera(CameraName);
		if (null != camera)
		{
			ret.set_float(camera.x);
			return;
		}
		ret.set_float(0);
	};
	Exps.prototype.GetY = function (ret, CameraName)
	{
		var camera = this.GetCamera(CameraName);
		if (null != camera)
		{
			ret.set_float(camera.y);
			return;
		}
		ret.set_float(0);
	};
	Exps.prototype.GetZoom = function (ret, CameraName)
	{
		var camera = this.GetCamera(CameraName);
		if (null != camera)
		{
			ret.set_float(camera.scale);
			return;
		}
		ret.set_float(0);
	};
	Exps.prototype.GetActiveCamera = function (ret)
	{
		if (null != this.activeCamera)
		{
			ret.set_string(this.activeCamera.name);
			return;
		}
		ret.set_string("null");
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Mouse = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Mouse.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.buttonMap = new Array(4);		// mouse down states
		this.mouseXcanvas = 0;				// mouse position relative to canvas
		this.mouseYcanvas = 0;
		this.triggerButton = 0;
		this.triggerType = 0;
		this.triggerDir = 0;
		this.handled = false;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		var self = this;
		if (!this.runtime.isDomFree)
		{
			jQuery(document).mousemove(
				function(info) {
					self.onMouseMove(info);
				}
			);
			jQuery(document).mousedown(
				function(info) {
					self.onMouseDown(info);
				}
			);
			jQuery(document).mouseup(
				function(info) {
					self.onMouseUp(info);
				}
			);
			jQuery(document).dblclick(
				function(info) {
					self.onDoubleClick(info);
				}
			);
			var wheelevent = function(info) {
								self.onWheel(info);
							};
			document.addEventListener("mousewheel", wheelevent, false);
			document.addEventListener("DOMMouseScroll", wheelevent, false);
		}
	};
	var dummyoffset = {left: 0, top: 0};
	instanceProto.onMouseMove = function(info)
	{
		var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
		this.mouseXcanvas = info.pageX - offset.left;
		this.mouseYcanvas = info.pageY - offset.top;
	};
	instanceProto.mouseInGame = function ()
	{
		if (this.runtime.fullscreen_mode > 0)
			return true;
		return this.mouseXcanvas >= 0 && this.mouseYcanvas >= 0
		    && this.mouseXcanvas < this.runtime.width && this.mouseYcanvas < this.runtime.height;
	};
	instanceProto.onMouseDown = function(info)
	{
		if (!this.mouseInGame())
			return;
		if (this.runtime.had_a_click && !this.runtime.isMobile)
			info.preventDefault();
		this.buttonMap[info.which] = true;
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnAnyClick, this);
		this.triggerButton = info.which - 1;	// 1-based
		this.triggerType = 0;					// single click
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnClick, this);
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnObjectClicked, this);
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.onMouseUp = function(info)
	{
		if (!this.buttonMap[info.which])
			return;
		if (this.runtime.had_a_click && !this.runtime.isMobile)
			info.preventDefault();
		this.runtime.had_a_click = true;
		this.buttonMap[info.which] = false;
		this.runtime.isInUserInputEvent = true;
		this.triggerButton = info.which - 1;	// 1-based
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnRelease, this);
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.onDoubleClick = function(info)
	{
		if (!this.mouseInGame())
			return;
		info.preventDefault();
		this.runtime.isInUserInputEvent = true;
		this.triggerButton = info.which - 1;	// 1-based
		this.triggerType = 1;					// double click
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnClick, this);
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnObjectClicked, this);
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.onWheel = function (info)
	{
		var delta = info.wheelDelta ? info.wheelDelta : info.detail ? -info.detail : 0;
		this.triggerDir = (delta < 0 ? 0 : 1);
		this.handled = false;
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnWheel, this);
		this.runtime.isInUserInputEvent = false;
		if (this.handled)
			info.preventDefault();
	};
	function Cnds() {};
	Cnds.prototype.OnClick = function (button, type)
	{
		return button === this.triggerButton && type === this.triggerType;
	};
	Cnds.prototype.OnAnyClick = function ()
	{
		return true;
	};
	Cnds.prototype.IsButtonDown = function (button)
	{
		return this.buttonMap[button + 1];	// jQuery uses 1-based buttons for some reason
	};
	Cnds.prototype.OnRelease = function (button)
	{
		return button === this.triggerButton;
	};
	Cnds.prototype.IsOverObject = function (obj)
	{
		var cnd = this.runtime.getCurrentCondition();
		var mx = this.mouseXcanvas;
		var my = this.mouseYcanvas;
		return cr.xor(this.runtime.testAndSelectCanvasPointOverlap(obj, mx, my, cnd.inverted), cnd.inverted);
	};
	Cnds.prototype.OnObjectClicked = function (button, type, obj)
	{
		if (button !== this.triggerButton || type !== this.triggerType)
			return false;	// wrong click type
		return this.runtime.testAndSelectCanvasPointOverlap(obj, this.mouseXcanvas, this.mouseYcanvas, false);
	};
	Cnds.prototype.OnWheel = function (dir)
	{
		this.handled = true;
		return dir === this.triggerDir;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetCursor = function (c)
	{
		var cursor_style = ["auto", "pointer", "text", "crosshair", "move", "help", "wait", "none"][c];
		if (this.runtime.canvas && this.runtime.canvas.style)
			this.runtime.canvas.style.cursor = cursor_style;
	};
	Acts.prototype.SetCursorSprite = function (obj)
	{
		if (this.runtime.isDomFree || this.runtime.isMobile || !obj)
			return;
		var inst = obj.getFirstPicked();
		if (!inst || !inst.curFrame)
			return;
		var frame = inst.curFrame;
		var datauri = frame.getDataUri();
		var cursor_style = "url(" + datauri + ") " + Math.round(frame.hotspotX * frame.width) + " " + Math.round(frame.hotspotY * frame.height) + ", auto";
		jQuery(this.runtime.canvas).css("cursor", cursor_style);
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.X = function (ret, layerparam)
	{
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.mouseXcanvas, this.mouseYcanvas, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.mouseXcanvas, this.mouseYcanvas, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.Y = function (ret, layerparam)
	{
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.mouseXcanvas, this.mouseYcanvas, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.mouseXcanvas, this.mouseYcanvas, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.AbsoluteX = function (ret)
	{
		ret.set_float(this.mouseXcanvas);
	};
	Exps.prototype.AbsoluteY = function (ret)
	{
		ret.set_float(this.mouseYcanvas);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Sprite = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Sprite.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	function frame_getDataUri()
	{
		if (this.datauri.length === 0)
		{
			var tmpcanvas = document.createElement("canvas");
			tmpcanvas.width = this.width;
			tmpcanvas.height = this.height;
			var tmpctx = tmpcanvas.getContext("2d");
			if (this.spritesheeted)
			{
				tmpctx.drawImage(this.texture_img, this.offx, this.offy, this.width, this.height,
										 0, 0, this.width, this.height);
			}
			else
			{
				tmpctx.drawImage(this.texture_img, 0, 0, this.width, this.height);
			}
			this.datauri = tmpcanvas.toDataURL("image/png");
		}
		return this.datauri;
	};
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		var i, leni, j, lenj;
		var anim, frame, animobj, frameobj, wt, uv;
		this.all_frames = [];
		this.has_loaded_textures = false;
		for (i = 0, leni = this.animations.length; i < leni; i++)
		{
			anim = this.animations[i];
			animobj = {};
			animobj.name = anim[0];
			animobj.speed = anim[1];
			animobj.loop = anim[2];
			animobj.repeatcount = anim[3];
			animobj.repeatto = anim[4];
			animobj.pingpong = anim[5];
			animobj.sid = anim[6];
			animobj.frames = [];
			for (j = 0, lenj = anim[7].length; j < lenj; j++)
			{
				frame = anim[7][j];
				frameobj = {};
				frameobj.texture_file = frame[0];
				frameobj.texture_filesize = frame[1];
				frameobj.offx = frame[2];
				frameobj.offy = frame[3];
				frameobj.width = frame[4];
				frameobj.height = frame[5];
				frameobj.duration = frame[6];
				frameobj.hotspotX = frame[7];
				frameobj.hotspotY = frame[8];
				frameobj.image_points = frame[9];
				frameobj.poly_pts = frame[10];
				frameobj.pixelformat = frame[11];
				frameobj.spritesheeted = (frameobj.width !== 0);
				frameobj.datauri = "";		// generated on demand and cached
				frameobj.getDataUri = frame_getDataUri;
				uv = {};
				uv.left = 0;
				uv.top = 0;
				uv.right = 1;
				uv.bottom = 1;
				frameobj.sheetTex = uv;
				frameobj.webGL_texture = null;
				wt = this.runtime.findWaitingTexture(frame[0]);
				if (wt)
				{
					frameobj.texture_img = wt;
				}
				else
				{
					frameobj.texture_img = new Image();
					frameobj.texture_img["idtkLoadDisposed"] = true;
					frameobj.texture_img.src = frame[0];
					frameobj.texture_img.cr_src = frame[0];
					frameobj.texture_img.cr_filesize = frame[1];
					frameobj.texture_img.c2webGL_texture = null;
					this.runtime.waitForImageLoad(frameobj.texture_img);
				}
				cr.seal(frameobj);
				animobj.frames.push(frameobj);
				this.all_frames.push(frameobj);
			}
			cr.seal(animobj);
			this.animations[i] = animobj;		// swap array data for object
		}
	};
	typeProto.updateAllCurrentTexture = function ()
	{
		var i, len, inst;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			inst.curWebGLTexture = inst.curFrame.webGL_texture;
		}
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.texture_img.c2webGL_texture = null;
			frame.webGL_texture = null;
		}
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.webGL_texture = this.runtime.glwrap.loadTexture(frame.texture_img, false, this.runtime.linearSampling, frame.pixelformat);
		}
		this.updateAllCurrentTexture();
	};
	typeProto.loadTextures = function ()
	{
		if (this.is_family || this.has_loaded_textures || !this.runtime.glwrap)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.webGL_texture = this.runtime.glwrap.loadTexture(frame.texture_img, false, this.runtime.linearSampling, frame.pixelformat);
		}
		this.has_loaded_textures = true;
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.has_loaded_textures)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			this.runtime.glwrap.deleteTexture(frame.webGL_texture);
			frame.webGL_texture = null;
		}
		this.has_loaded_textures = false;
	};
	var already_drawn_images = [];
	typeProto.preloadCanvas2D = function (ctx)
	{
		var i, len, frameimg;
		already_drawn_images.length = 0;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frameimg = this.all_frames[i].texture_img;
			if (already_drawn_images.indexOf(frameimg) !== -1)
					continue;
			ctx.drawImage(frameimg, 0, 0);
			already_drawn_images.push(frameimg);
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		var poly_pts = this.type.animations[0].frames[0].poly_pts;
		if (this.recycled)
			this.collision_poly.set_pts(poly_pts);
		else
			this.collision_poly = new cr.CollisionPoly(poly_pts);
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.visible = (this.properties[0] === 0);	// 0=visible, 1=invisible
		this.isTicking = false;
		this.inAnimTrigger = false;
		this.collisionsEnabled = (this.properties[3] !== 0);
		if (!(this.type.animations.length === 1 && this.type.animations[0].frames.length === 1) && this.type.animations[0].speed !== 0)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		this.cur_animation = this.getAnimationByName(this.properties[1]) || this.type.animations[0];
		this.cur_frame = this.properties[2];
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		var curanimframe = this.cur_animation.frames[this.cur_frame];
		this.collision_poly.set_pts(curanimframe.poly_pts);
		this.hotspotX = curanimframe.hotspotX;
		this.hotspotY = curanimframe.hotspotY;
		this.cur_anim_speed = this.cur_animation.speed;
		if (this.recycled)
			this.animTimer.reset();
		else
			this.animTimer = new cr.KahanAdder();
		this.frameStart = this.getNowTime();
		this.animPlaying = true;
		this.animRepeats = 0;
		this.animForwards = true;
		this.animTriggerName = "";
		this.changeAnimName = "";
		this.changeAnimFrom = 0;
		this.changeAnimFrame = -1;
		this.type.loadTextures();
		var i, leni, j, lenj;
		var anim, frame, uv, maintex;
		for (i = 0, leni = this.type.animations.length; i < leni; i++)
		{
			anim = this.type.animations[i];
			for (j = 0, lenj = anim.frames.length; j < lenj; j++)
			{
				frame = anim.frames[j];
				if (frame.width === 0)
				{
					frame.width = frame.texture_img.width;
					frame.height = frame.texture_img.height;
				}
				if (frame.spritesheeted)
				{
					maintex = frame.texture_img;
					uv = frame.sheetTex;
					uv.left = frame.offx / maintex.width;
					uv.top = frame.offy / maintex.height;
					uv.right = (frame.offx + frame.width) / maintex.width;
					uv.bottom = (frame.offy + frame.height) / maintex.height;
					if (frame.offx === 0 && frame.offy === 0 && frame.width === maintex.width && frame.height === maintex.height)
					{
						frame.spritesheeted = false;
					}
				}
			}
		}
		this.curFrame = this.cur_animation.frames[this.cur_frame];
		this.curWebGLTexture = this.curFrame.webGL_texture;
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"a": this.cur_animation.sid,
			"f": this.cur_frame,
			"cas": this.cur_anim_speed,
			"fs": this.frameStart,
			"ar": this.animRepeats,
			"at": this.animTimer.sum
		};
		if (!this.animPlaying)
			o["ap"] = this.animPlaying;
		if (!this.animForwards)
			o["af"] = this.animForwards;
		return o;
	};
	instanceProto.loadFromJSON = function (o)
	{
		var anim = this.getAnimationBySid(o["a"]);
		if (anim)
			this.cur_animation = anim;
		this.cur_frame = o["f"];
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		this.cur_anim_speed = o["cas"];
		this.frameStart = o["fs"];
		this.animRepeats = o["ar"];
		this.animTimer.reset();
		this.animTimer.sum = o["at"];
		this.animPlaying = o.hasOwnProperty("ap") ? o["ap"] : true;
		this.animForwards = o.hasOwnProperty("af") ? o["af"] : true;
		this.curFrame = this.cur_animation.frames[this.cur_frame];
		this.curWebGLTexture = this.curFrame.webGL_texture;
		this.collision_poly.set_pts(this.curFrame.poly_pts);
		this.hotspotX = this.curFrame.hotspotX;
		this.hotspotY = this.curFrame.hotspotY;
	};
	instanceProto.animationFinish = function (reverse)
	{
		this.cur_frame = reverse ? 0 : this.cur_animation.frames.length - 1;
		this.animPlaying = false;
		this.animTriggerName = this.cur_animation.name;
		this.inAnimTrigger = true;
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished, this);
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnimFinished, this);
		this.inAnimTrigger = false;
		this.animRepeats = 0;
	};
	instanceProto.getNowTime = function()
	{
		return this.animTimer.sum;
	};
	instanceProto.tick = function()
	{
		this.animTimer.add(this.runtime.getDt(this));
		if (this.changeAnimName.length)
			this.doChangeAnim();
		if (this.changeAnimFrame >= 0)
			this.doChangeAnimFrame();
		var now = this.getNowTime();
		var cur_animation = this.cur_animation;
		var prev_frame = cur_animation.frames[this.cur_frame];
		var next_frame;
		var cur_frame_time = prev_frame.duration / this.cur_anim_speed;
		if (this.animPlaying && now >= this.frameStart + cur_frame_time)
		{
			if (this.animForwards)
			{
				this.cur_frame++;
			}
			else
			{
				this.cur_frame--;
			}
			this.frameStart += cur_frame_time;
			if (this.cur_frame >= cur_animation.frames.length)
			{
				if (cur_animation.pingpong)
				{
					this.animForwards = false;
					this.cur_frame = cur_animation.frames.length - 2;
				}
				else if (cur_animation.loop)
				{
					this.cur_frame = cur_animation.repeatto;
				}
				else
				{
					this.animRepeats++;
					if (this.animRepeats >= cur_animation.repeatcount)
					{
						this.animationFinish(false);
					}
					else
					{
						this.cur_frame = cur_animation.repeatto;
					}
				}
			}
			if (this.cur_frame < 0)
			{
				if (cur_animation.pingpong)
				{
					this.cur_frame = 1;
					this.animForwards = true;
					if (!cur_animation.loop)
					{
						this.animRepeats++;
						if (this.animRepeats >= cur_animation.repeatcount)
						{
							this.animationFinish(true);
						}
					}
				}
				else
				{
					if (cur_animation.loop)
					{
						this.cur_frame = cur_animation.repeatto;
					}
					else
					{
						this.animRepeats++;
						if (this.animRepeats >= cur_animation.repeatcount)
						{
							this.animationFinish(true);
						}
						else
						{
							this.cur_frame = cur_animation.repeatto;
						}
					}
				}
			}
			if (this.cur_frame < 0)
				this.cur_frame = 0;
			else if (this.cur_frame >= cur_animation.frames.length)
				this.cur_frame = cur_animation.frames.length - 1;
			if (now > this.frameStart + (cur_animation.frames[this.cur_frame].duration / this.cur_anim_speed))
			{
				this.frameStart = now;
			}
			next_frame = cur_animation.frames[this.cur_frame];
			this.OnFrameChanged(prev_frame, next_frame);
			this.runtime.redraw = true;
		}
	};
	instanceProto.getAnimationByName = function (name_)
	{
		var i, len, a;
		for (i = 0, len = this.type.animations.length; i < len; i++)
		{
			a = this.type.animations[i];
			if (cr.equals_nocase(a.name, name_))
				return a;
		}
		return null;
	};
	instanceProto.getAnimationBySid = function (sid_)
	{
		var i, len, a;
		for (i = 0, len = this.type.animations.length; i < len; i++)
		{
			a = this.type.animations[i];
			if (a.sid === sid_)
				return a;
		}
		return null;
	};
	instanceProto.doChangeAnim = function ()
	{
		var prev_frame = this.cur_animation.frames[this.cur_frame];
		var anim = this.getAnimationByName(this.changeAnimName);
		this.changeAnimName = "";
		if (!anim)
			return;
		if (cr.equals_nocase(anim.name, this.cur_animation.name) && this.animPlaying)
			return;
		this.cur_animation = anim;
		this.cur_anim_speed = anim.speed;
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		if (this.changeAnimFrom === 1)
			this.cur_frame = 0;
		this.animPlaying = true;
		this.frameStart = this.getNowTime();
		this.animForwards = true;
		this.OnFrameChanged(prev_frame, this.cur_animation.frames[this.cur_frame]);
		this.runtime.redraw = true;
	};
	instanceProto.doChangeAnimFrame = function ()
	{
		var prev_frame = this.cur_animation.frames[this.cur_frame];
		var prev_frame_number = this.cur_frame;
		this.cur_frame = cr.floor(this.changeAnimFrame);
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		if (prev_frame_number !== this.cur_frame)
		{
			this.OnFrameChanged(prev_frame, this.cur_animation.frames[this.cur_frame]);
			this.frameStart = this.getNowTime();
			this.runtime.redraw = true;
		}
		this.changeAnimFrame = -1;
	};
	instanceProto.OnFrameChanged = function (prev_frame, next_frame)
	{
		var oldw = prev_frame.width;
		var oldh = prev_frame.height;
		var neww = next_frame.width;
		var newh = next_frame.height;
		if (oldw != neww)
			this.width *= (neww / oldw);
		if (oldh != newh)
			this.height *= (newh / oldh);
		this.hotspotX = next_frame.hotspotX;
		this.hotspotY = next_frame.hotspotY;
		this.collision_poly.set_pts(next_frame.poly_pts);
		this.set_bbox_changed();
		this.curFrame = next_frame;
		this.curWebGLTexture = next_frame.webGL_texture;
		var i, len, b;
		for (i = 0, len = this.behavior_insts.length; i < len; i++)
		{
			b = this.behavior_insts[i];
			if (b.onSpriteFrameChanged)
				b.onSpriteFrameChanged(prev_frame, next_frame);
		}
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnFrameChanged, this);
	};
	instanceProto.draw = function(ctx)
	{
		ctx.globalAlpha = this.opacity;
		var cur_frame = this.curFrame;
		var spritesheeted = cur_frame.spritesheeted;
		var cur_image = cur_frame.texture_img;
		var myx = this.x;
		var myy = this.y;
		var w = this.width;
		var h = this.height;
		if (this.angle === 0 && w >= 0 && h >= 0)
		{
			myx -= this.hotspotX * w;
			myy -= this.hotspotY * h;
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			if (spritesheeted)
			{
				ctx.drawImage(cur_image, cur_frame.offx, cur_frame.offy, cur_frame.width, cur_frame.height,
										 myx, myy, w, h);
			}
			else
			{
				ctx.drawImage(cur_image, myx, myy, w, h);
			}
		}
		else
		{
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			ctx.save();
			var widthfactor = w > 0 ? 1 : -1;
			var heightfactor = h > 0 ? 1 : -1;
			ctx.translate(myx, myy);
			if (widthfactor !== 1 || heightfactor !== 1)
				ctx.scale(widthfactor, heightfactor);
			ctx.rotate(this.angle * widthfactor * heightfactor);
			var drawx = 0 - (this.hotspotX * cr.abs(w))
			var drawy = 0 - (this.hotspotY * cr.abs(h));
			if (spritesheeted)
			{
				ctx.drawImage(cur_image, cur_frame.offx, cur_frame.offy, cur_frame.width, cur_frame.height,
										 drawx, drawy, cr.abs(w), cr.abs(h));
			}
			else
			{
				ctx.drawImage(cur_image, drawx, drawy, cr.abs(w), cr.abs(h));
			}
			ctx.restore();
		}
		/*
		ctx.strokeStyle = "#f00";
		ctx.lineWidth = 3;
		ctx.beginPath();
		this.collision_poly.cache_poly(this.width, this.height, this.angle);
		var i, len, ax, ay, bx, by;
		for (i = 0, len = this.collision_poly.pts_count; i < len; i++)
		{
			ax = this.collision_poly.pts_cache[i*2] + this.x;
			ay = this.collision_poly.pts_cache[i*2+1] + this.y;
			bx = this.collision_poly.pts_cache[((i+1)%len)*2] + this.x;
			by = this.collision_poly.pts_cache[((i+1)%len)*2+1] + this.y;
			ctx.moveTo(ax, ay);
			ctx.lineTo(bx, by);
		}
		ctx.stroke();
		ctx.closePath();
		*/
		/*
		if (this.behavior_insts.length >= 1 && this.behavior_insts[0].draw)
		{
			this.behavior_insts[0].draw(ctx);
		}
		*/
	};
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.curWebGLTexture);
		glw.setOpacity(this.opacity);
		var cur_frame = this.curFrame;
		var q = this.bquad;
		if (this.runtime.pixel_rounding)
		{
			var ox = ((this.x + 0.5) | 0) - this.x;
			var oy = ((this.y + 0.5) | 0) - this.y;
			if (cur_frame.spritesheeted)
				glw.quadTex(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy, cur_frame.sheetTex);
			else
				glw.quad(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy);
		}
		else
		{
			if (cur_frame.spritesheeted)
				glw.quadTex(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly, cur_frame.sheetTex);
			else
				glw.quad(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly);
		}
	};
	instanceProto.getImagePointIndexByName = function(name_)
	{
		var cur_frame = this.curFrame;
		var i, len;
		for (i = 0, len = cur_frame.image_points.length; i < len; i++)
		{
			if (cr.equals_nocase(name_, cur_frame.image_points[i][0]))
				return i;
		}
		return -1;
	};
	instanceProto.getImagePoint = function(imgpt, getX)
	{
		var cur_frame = this.curFrame;
		var image_points = cur_frame.image_points;
		var index;
		if (cr.is_string(imgpt))
			index = this.getImagePointIndexByName(imgpt);
		else
			index = imgpt - 1;	// 0 is origin
		index = cr.floor(index);
		if (index < 0 || index >= image_points.length)
			return getX ? this.x : this.y;	// return origin
		var x = (image_points[index][1] - cur_frame.hotspotX) * this.width;
		var y = image_points[index][2];
		y = (y - cur_frame.hotspotY) * this.height;
		var cosa = Math.cos(this.angle);
		var sina = Math.sin(this.angle);
		var x_temp = (x * cosa) - (y * sina);
		y = (y * cosa) + (x * sina);
		x = x_temp;
		x += this.x;
		y += this.y;
		return getX ? x : y;
	};
	function Cnds() {};
	var arrCache = [];
	function allocArr()
	{
		if (arrCache.length)
			return arrCache.pop();
		else
			return [0, 0, 0];
	};
	function freeArr(a)
	{
		a[0] = 0;
		a[1] = 0;
		a[2] = 0;
		arrCache.push(a);
	};
	function makeCollKey(a, b)
	{
		if (a < b)
			return "" + a + "," + b;
		else
			return "" + b + "," + a;
	};
	function collmemory_add(collmemory, a, b, tickcount)
	{
		var a_uid = a.uid;
		var b_uid = b.uid;
		var key = makeCollKey(a_uid, b_uid);
		if (collmemory.hasOwnProperty(key))
		{
			collmemory[key][2] = tickcount;
			return;
		}
		var arr = allocArr();
		arr[0] = a_uid;
		arr[1] = b_uid;
		arr[2] = tickcount;
		collmemory[key] = arr;
	};
	function collmemory_remove(collmemory, a, b)
	{
		var key = makeCollKey(a.uid, b.uid);
		if (collmemory.hasOwnProperty(key))
		{
			freeArr(collmemory[key]);
			delete collmemory[key];
		}
	};
	function collmemory_removeInstance(collmemory, inst)
	{
		var uid = inst.uid;
		var p, entry;
		for (p in collmemory)
		{
			if (collmemory.hasOwnProperty(p))
			{
				entry = collmemory[p];
				if (entry[0] === uid || entry[1] === uid)
				{
					freeArr(collmemory[p]);
					delete collmemory[p];
				}
			}
		}
	};
	var last_coll_tickcount = -2;
	function collmemory_has(collmemory, a, b)
	{
		var key = makeCollKey(a.uid, b.uid);
		if (collmemory.hasOwnProperty(key))
		{
			last_coll_tickcount = collmemory[key][2];
			return true;
		}
		else
		{
			last_coll_tickcount = -2;
			return false;
		}
	};
	var candidates1 = [];
	Cnds.prototype.OnCollision = function (rtype)
	{
		if (!rtype)
			return false;
		var runtime = this.runtime;
		var cnd = runtime.getCurrentCondition();
		var ltype = cnd.type;
		if (!cnd.extra.collmemory)
		{
			cnd.extra.collmemory = {};
			runtime.addDestroyCallback((function (collmemory) {
				return function(inst) {
					collmemory_removeInstance(collmemory, inst);
				};
			})(cnd.extra.collmemory));
		}
		var collmemory = cnd.extra.collmemory;
		var lsol = ltype.getCurrentSol();
		var rsol = rtype.getCurrentSol();
		var linstances = lsol.getObjects();
		var rinstances;
		var l, linst, r, rinst;
		var curlsol, currsol;
		var tickcount = this.runtime.tickcount;
		var lasttickcount = tickcount - 1;
		var exists, run;
		var current_event = runtime.getCurrentEventStack().current_event;
		var orblock = current_event.orblock;
		for (l = 0; l < linstances.length; l++)
		{
			linst = linstances[l];
			if (rsol.select_all)
			{
				linst.update_bbox();
				this.runtime.getCollisionCandidates(linst.layer, rtype, linst.bbox, candidates1);
				rinstances = candidates1;
			}
			else
				rinstances = rsol.getObjects();
			for (r = 0; r < rinstances.length; r++)
			{
				rinst = rinstances[r];
				if (runtime.testOverlap(linst, rinst) || runtime.checkRegisteredCollision(linst, rinst))
				{
					exists = collmemory_has(collmemory, linst, rinst);
					run = (!exists || (last_coll_tickcount < lasttickcount));
					collmemory_add(collmemory, linst, rinst, tickcount);
					if (run)
					{
						runtime.pushCopySol(current_event.solModifiers);
						curlsol = ltype.getCurrentSol();
						currsol = rtype.getCurrentSol();
						curlsol.select_all = false;
						currsol.select_all = false;
						if (ltype === rtype)
						{
							curlsol.instances.length = 2;	// just use lsol, is same reference as rsol
							curlsol.instances[0] = linst;
							curlsol.instances[1] = rinst;
							ltype.applySolToContainer();
						}
						else
						{
							curlsol.instances.length = 1;
							currsol.instances.length = 1;
							curlsol.instances[0] = linst;
							currsol.instances[0] = rinst;
							ltype.applySolToContainer();
							rtype.applySolToContainer();
						}
						current_event.retrigger();
						runtime.popSol(current_event.solModifiers);
					}
				}
				else
				{
					collmemory_remove(collmemory, linst, rinst);
				}
			}
			candidates1.length = 0;
		}
		return false;
	};
	var rpicktype = null;
	var rtopick = new cr.ObjectSet();
	var needscollisionfinish = false;
	var candidates2 = [];
	function DoOverlapCondition(rtype, offx, offy)
	{
		if (!rtype)
			return false;
		var do_offset = (offx !== 0 || offy !== 0);
		var oldx, oldy, ret = false, r, lenr, rinst;
		var cnd = this.runtime.getCurrentCondition();
		var ltype = cnd.type;
		var inverted = cnd.inverted;
		var rsol = rtype.getCurrentSol();
		var orblock = this.runtime.getCurrentEventStack().current_event.orblock;
		var rinstances;
		if (rsol.select_all)
		{
			this.update_bbox();
			this.runtime.getCollisionCandidates(this.layer, rtype, this.bbox, candidates2);
			rinstances = candidates2;
		}
		else if (orblock)
			rinstances = rsol.else_instances;
		else
			rinstances = rsol.instances;
		rpicktype = rtype;
		needscollisionfinish = (ltype !== rtype && !inverted);
		if (do_offset)
		{
			oldx = this.x;
			oldy = this.y;
			this.x += offx;
			this.y += offy;
			this.set_bbox_changed();
		}
		for (r = 0, lenr = rinstances.length; r < lenr; r++)
		{
			rinst = rinstances[r];
			if (this.runtime.testOverlap(this, rinst))
			{
				ret = true;
				if (inverted)
					break;
				if (ltype !== rtype)
					rtopick.add(rinst);
			}
		}
		if (do_offset)
		{
			this.x = oldx;
			this.y = oldy;
			this.set_bbox_changed();
		}
		candidates2.length = 0;
		return ret;
	};
	typeProto.finish = function (do_pick)
	{
		if (!needscollisionfinish)
			return;
		if (do_pick)
		{
			var orblock = this.runtime.getCurrentEventStack().current_event.orblock;
			var sol = rpicktype.getCurrentSol();
			var topick = rtopick.valuesRef();
			var i, len, inst;
			if (sol.select_all)
			{
				sol.select_all = false;
				sol.instances.length = topick.length;
				for (i = 0, len = topick.length; i < len; i++)
				{
					sol.instances[i] = topick[i];
				}
				if (orblock)
				{
					sol.else_instances.length = 0;
					for (i = 0, len = rpicktype.instances.length; i < len; i++)
					{
						inst = rpicktype.instances[i];
						if (!rtopick.contains(inst))
							sol.else_instances.push(inst);
					}
				}
			}
			else
			{
				if (orblock)
				{
					var initsize = sol.instances.length;
					sol.instances.length = initsize + topick.length;
					for (i = 0, len = topick.length; i < len; i++)
					{
						sol.instances[initsize + i] = topick[i];
						cr.arrayFindRemove(sol.else_instances, topick[i]);
					}
				}
				else
				{
					cr.shallowAssignArray(sol.instances, topick);
				}
			}
			rpicktype.applySolToContainer();
		}
		rtopick.clear();
		needscollisionfinish = false;
	};
	Cnds.prototype.IsOverlapping = function (rtype)
	{
		return DoOverlapCondition.call(this, rtype, 0, 0);
	};
	Cnds.prototype.IsOverlappingOffset = function (rtype, offx, offy)
	{
		return DoOverlapCondition.call(this, rtype, offx, offy);
	};
	Cnds.prototype.IsAnimPlaying = function (animname)
	{
		if (this.changeAnimName.length)
			return cr.equals_nocase(this.changeAnimName, animname);
		else
			return cr.equals_nocase(this.cur_animation.name, animname);
	};
	Cnds.prototype.CompareFrame = function (cmp, framenum)
	{
		return cr.do_cmp(this.cur_frame, cmp, framenum);
	};
	Cnds.prototype.CompareAnimSpeed = function (cmp, x)
	{
		var s = (this.animForwards ? this.cur_anim_speed : -this.cur_anim_speed);
		return cr.do_cmp(s, cmp, x);
	};
	Cnds.prototype.OnAnimFinished = function (animname)
	{
		return cr.equals_nocase(this.animTriggerName, animname);
	};
	Cnds.prototype.OnAnyAnimFinished = function ()
	{
		return true;
	};
	Cnds.prototype.OnFrameChanged = function ()
	{
		return true;
	};
	Cnds.prototype.IsMirrored = function ()
	{
		return this.width < 0;
	};
	Cnds.prototype.IsFlipped = function ()
	{
		return this.height < 0;
	};
	Cnds.prototype.OnURLLoaded = function ()
	{
		return true;
	};
	Cnds.prototype.IsCollisionEnabled = function ()
	{
		return this.collisionsEnabled;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Spawn = function (obj, layer, imgpt)
	{
		if (!obj || !layer)
			return;
		var inst = this.runtime.createInstance(obj, layer, this.getImagePoint(imgpt, true), this.getImagePoint(imgpt, false));
		if (!inst)
			return;
		if (typeof inst.angle !== "undefined")
		{
			inst.angle = this.angle;
			inst.set_bbox_changed();
		}
		this.runtime.isInOnDestroy++;
		var i, len, s;
		this.runtime.trigger(Object.getPrototypeOf(obj.plugin).cnds.OnCreated, inst);
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				this.runtime.trigger(Object.getPrototypeOf(s.type.plugin).cnds.OnCreated, s);
			}
		}
		this.runtime.isInOnDestroy--;
		var cur_act = this.runtime.getCurrentAction();
		var reset_sol = false;
		if (cr.is_undefined(cur_act.extra.Spawn_LastExec) || cur_act.extra.Spawn_LastExec < this.runtime.execcount)
		{
			reset_sol = true;
			cur_act.extra.Spawn_LastExec = this.runtime.execcount;
		}
		var sol;
		if (obj != this.type)
		{
			sol = obj.getCurrentSol();
			sol.select_all = false;
			if (reset_sol)
			{
				sol.instances.length = 1;
				sol.instances[0] = inst;
			}
			else
				sol.instances.push(inst);
			if (inst.is_contained)
			{
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					s = inst.siblings[i];
					sol = s.type.getCurrentSol();
					sol.select_all = false;
					if (reset_sol)
					{
						sol.instances.length = 1;
						sol.instances[0] = s;
					}
					else
						sol.instances.push(s);
				}
			}
		}
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.StopAnim = function ()
	{
		this.animPlaying = false;
	};
	Acts.prototype.StartAnim = function (from)
	{
		this.animPlaying = true;
		this.frameStart = this.getNowTime();
		if (from === 1 && this.cur_frame !== 0)
		{
			this.changeAnimFrame = 0;
			if (!this.inAnimTrigger)
				this.doChangeAnimFrame();
		}
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
	};
	Acts.prototype.SetAnim = function (animname, from)
	{
		this.changeAnimName = animname;
		this.changeAnimFrom = from;
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		if (!this.inAnimTrigger)
			this.doChangeAnim();
	};
	Acts.prototype.SetAnimFrame = function (framenumber)
	{
		this.changeAnimFrame = framenumber;
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		if (!this.inAnimTrigger)
			this.doChangeAnimFrame();
	};
	Acts.prototype.SetAnimSpeed = function (s)
	{
		this.cur_anim_speed = cr.abs(s);
		this.animForwards = (s >= 0);
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
	};
	Acts.prototype.SetMirrored = function (m)
	{
		var neww = cr.abs(this.width) * (m === 0 ? -1 : 1);
		if (this.width === neww)
			return;
		this.width = neww;
		this.set_bbox_changed();
	};
	Acts.prototype.SetFlipped = function (f)
	{
		var newh = cr.abs(this.height) * (f === 0 ? -1 : 1);
		if (this.height === newh)
			return;
		this.height = newh;
		this.set_bbox_changed();
	};
	Acts.prototype.SetScale = function (s)
	{
		var cur_frame = this.curFrame;
		var mirror_factor = (this.width < 0 ? -1 : 1);
		var flip_factor = (this.height < 0 ? -1 : 1);
		var new_width = cur_frame.width * s * mirror_factor;
		var new_height = cur_frame.height * s * flip_factor;
		if (this.width !== new_width || this.height !== new_height)
		{
			this.width = new_width;
			this.height = new_height;
			this.set_bbox_changed();
		}
	};
	Acts.prototype.LoadURL = function (url_, resize_)
	{
		var img = new Image();
		var self = this;
		var curFrame_ = this.curFrame;
		img.onload = function ()
		{
			if (curFrame_.texture_img.src === img.src)
			{
				if (self.runtime.glwrap && self.curFrame === curFrame_)
					self.curWebGLTexture = curFrame_.webGL_texture;
				self.runtime.redraw = true;
				self.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, self);
				return;
			}
			curFrame_.texture_img = img;
			curFrame_.offx = 0;
			curFrame_.offy = 0;
			curFrame_.width = img.width;
			curFrame_.height = img.height;
			curFrame_.spritesheeted = false;
			curFrame_.datauri = "";
			if (self.runtime.glwrap)
			{
				if (curFrame_.webGL_texture)
					self.runtime.glwrap.deleteTexture(curFrame_.webGL_texture);
				curFrame_.webGL_texture = self.runtime.glwrap.loadTexture(img, false, self.runtime.linearSampling);
				if (self.curFrame === curFrame_)
					self.curWebGLTexture = curFrame_.webGL_texture;
				self.type.updateAllCurrentTexture();
			}
			if (resize_ === 0)		// resize to image size
			{
				self.width = img.width;
				self.height = img.height;
				self.set_bbox_changed();
			}
			self.runtime.redraw = true;
			self.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, self);
		};
		if (url_.substr(0, 5) !== "data:")
			img.crossOrigin = 'anonymous';
		img.src = url_;
	};
	Acts.prototype.SetCollisions = function (set_)
	{
		if (this.collisionsEnabled === (set_ !== 0))
			return;		// no change
		this.collisionsEnabled = (set_ !== 0);
		if (this.collisionsEnabled)
			this.set_bbox_changed();		// needs to be added back to cells
		else
		{
			if (this.collcells.right >= this.collcells.left)
				this.type.collision_grid.update(this, this.collcells, null);
			this.collcells.set(0, 0, -1, -1);
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.AnimationFrame = function (ret)
	{
		ret.set_int(this.cur_frame);
	};
	Exps.prototype.AnimationFrameCount = function (ret)
	{
		ret.set_int(this.cur_animation.frames.length);
	};
	Exps.prototype.AnimationName = function (ret)
	{
		ret.set_string(this.cur_animation.name);
	};
	Exps.prototype.AnimationSpeed = function (ret)
	{
		ret.set_float(this.animForwards ? this.cur_anim_speed : -this.cur_anim_speed);
	};
	Exps.prototype.ImagePointX = function (ret, imgpt)
	{
		ret.set_float(this.getImagePoint(imgpt, true));
	};
	Exps.prototype.ImagePointY = function (ret, imgpt)
	{
		ret.set_float(this.getImagePoint(imgpt, false));
	};
	Exps.prototype.ImagePointCount = function (ret)
	{
		ret.set_int(this.curFrame.image_points.length);
	};
	Exps.prototype.ImageWidth = function (ret)
	{
		ret.set_float(this.curFrame.width);
	};
	Exps.prototype.ImageHeight = function (ret)
	{
		ret.set_float(this.curFrame.height);
	};
	pluginProto.exps = new Exps();
}());
/* global cr,log,assert2 */
/* jshint globalstrict: true */
/* jshint strict: true */
;
;
cr.plugins_.Spritefont2 = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Spritefont2.prototype;
	pluginProto.onCreate = function ()
	{
	};
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		this.texture_img = new Image();
		this.texture_img["idtkLoadDisposed"] = true;
		this.texture_img.src = this.texture_file;
		this.runtime.waitForImageLoad(this.texture_img);
		this.webGL_texture = null;
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		this.webGL_texture = null;
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		if (!this.webGL_texture)
		{
			this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, false, this.runtime.linearSampling, this.texture_pixelformat);
		}
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
			this.instances[i].webGL_texture = this.webGL_texture;
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.webGL_texture)
			return;
		this.runtime.glwrap.deleteTexture(this.webGL_texture);
		this.webGL_texture = null;
	};
	typeProto.preloadCanvas2D = function (ctx)
	{
		ctx.drawImage(this.texture_img, 0, 0);
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onDestroy = function()
	{
		freeAllLines (this.lines);
		freeAllClip  (this.clipList);
		freeAllClipUV(this.clipUV);
		cr.wipe(this.characterWidthList);
	};
	instanceProto.onCreate = function()
	{
		this.texture_img      = this.type.texture_img;
		this.characterWidth   = this.properties[0];
		this.characterHeight  = this.properties[1];
		this.characterSet     = this.properties[2];
		this.text             = this.properties[3];
		this.characterScale   = this.properties[4];
		this.visible          = (this.properties[5] === 0);	// 0=visible, 1=invisible
		this.halign           = this.properties[6]/2.0;			// 0=left, 1=center, 2=right
		this.valign           = this.properties[7]/2.0;			// 0=top, 1=center, 2=bottom
		this.wrapbyword       = (this.properties[9] === 0);	// 0=word, 1=character
		this.characterSpacing = this.properties[10];
		this.lineHeight       = this.properties[11];
		this.textWidth  = 0;
		this.textHeight = 0;
		if (this.recycled)
		{
			this.lines.length = 0;
			cr.wipe(this.clipList);
			cr.wipe(this.clipUV);
			cr.wipe(this.characterWidthList);
		}
		else
		{
			this.lines = [];
			this.clipList = {};
			this.clipUV = {};
			this.characterWidthList = {};
		}
		this.text_changed = true;
		this.lastwrapwidth = this.width;
		if (this.runtime.glwrap)
		{
			if (!this.type.webGL_texture)
			{
				this.type.webGL_texture = this.runtime.glwrap.loadTexture(this.type.texture_img, false, this.runtime.linearSampling, this.type.texture_pixelformat);
			}
			this.webGL_texture = this.type.webGL_texture;
		}
		this.SplitSheet();
	};
	instanceProto.saveToJSON = function ()
	{
		var save = {
			"t": this.text,
			"csc": this.characterScale,
			"csp": this.characterSpacing,
			"lh": this.lineHeight,
			"tw": this.textWidth,
			"th": this.textHeight,
			"lrt": this.last_render_tick,
			"cw": {}
		};
		for (var ch in this.characterWidthList)
			save["cw"][ch] = this.characterWidthList[ch];
		return save;
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.text = o["t"];
		this.characterScale = o["csc"];
		this.characterSpacing = o["csp"];
		this.lineHeight = o["lh"];
		this.textWidth = o["tw"];
		this.textHeight = o["th"];
		this.last_render_tick = o["lrt"];
		for(var ch in o["cw"])
			this.characterWidthList[ch] = o["cw"][ch];
		this.text_changed = true;
		this.lastwrapwidth = this.width;
	};
	function trimRight(text)
	{
		return text.replace(/\s\s*$/, '');
	}
	var MAX_CACHE_SIZE = 1000;
	function alloc(cache,Constructor)
	{
		if (cache.length)
			return cache.pop();
		else
			return new Constructor();
	}
	function free(cache,data)
	{
		if (cache.length < MAX_CACHE_SIZE)
		{
			cache.push(data);
		}
	}
	function freeAll(cache,dataList,isArray)
	{
		if (isArray) {
			var i, len;
			for (i = 0, len = dataList.length; i < len; i++)
			{
				free(cache,dataList[i]);
			}
			dataList.length = 0;
		} else {
			var prop;
			for(prop in dataList) {
				if(Object.prototype.hasOwnProperty.call(dataList,prop)) {
					free(cache,dataList[prop]);
					delete dataList[prop];
				}
			}
		}
	}
	function addLine(inst,lineIndex,cur_line) {
		var lines = inst.lines;
		var line;
		cur_line = trimRight(cur_line);
		if (lineIndex >= lines.length)
			lines.push(allocLine());
		line = lines[lineIndex];
		line.text = cur_line;
		line.width = inst.measureWidth(cur_line);
		inst.textWidth = cr.max(inst.textWidth,line.width);
	}
	var linesCache = [];
	function allocLine()       { return alloc(linesCache,Object); }
	function freeLine(l)       { free(linesCache,l); }
	function freeAllLines(arr) { freeAll(linesCache,arr,true); }
	function addClip(obj,property,x,y,w,h) {
		if (obj[property] === undefined) {
			obj[property] = alloc(clipCache,Object);
		}
		obj[property].x = x;
		obj[property].y = y;
		obj[property].w = w;
		obj[property].h = h;
	}
	var clipCache = [];
	function allocClip()      { return alloc(clipCache,Object); }
	function freeAllClip(obj) { freeAll(clipCache,obj,false);}
	function addClipUV(obj,property,left,top,right,bottom) {
		if (obj[property] === undefined) {
			obj[property] = alloc(clipUVCache,cr.rect);
		}
		obj[property].left   = left;
		obj[property].top    = top;
		obj[property].right  = right;
		obj[property].bottom = bottom;
	}
	var clipUVCache = [];
	function allocClipUV()      { return alloc(clipUVCache,cr.rect);}
	function freeAllClipUV(obj) { freeAll(clipUVCache,obj,false);}
	instanceProto.SplitSheet = function() {
		var texture      = this.texture_img;
		var texWidth     = texture.width;
		var texHeight    = texture.height;
		var charWidth    = this.characterWidth;
		var charHeight   = this.characterHeight;
		var charU        = charWidth /texWidth;
		var charV        = charHeight/texHeight;
		var charSet      = this.characterSet ;
		var cols = Math.floor(texWidth/charWidth);
		var rows = Math.floor(texHeight/charHeight);
		for ( var c = 0; c < charSet.length; c++) {
			if  (c >= cols * rows) break;
			var x = c%cols;
			var y = Math.floor(c/cols);
			var letter = charSet.charAt(c);
			if (this.runtime.glwrap) {
				addClipUV(
					this.clipUV, letter,
					x * charU ,
					y * charV ,
					(x+1) * charU ,
					(y+1) * charV
				);
			} else {
				addClip(
					this.clipList, letter,
					x * charWidth,
					y * charHeight,
					charWidth,
					charHeight
				);
			}
		}
	};
	/*
     *	Word-Wrapping
     */
	var wordsCache = [];
	pluginProto.TokeniseWords = function (text)
	{
		wordsCache.length = 0;
		var cur_word = "";
		var ch;
		var i = 0;
		while (i < text.length)
		{
			ch = text.charAt(i);
			if (ch === "\n")
			{
				if (cur_word.length)
				{
					wordsCache.push(cur_word);
					cur_word = "";
				}
				wordsCache.push("\n");
				++i;
			}
			else if (ch === " " || ch === "\t" || ch === "-")
			{
				do {
					cur_word += text.charAt(i);
					i++;
				}
				while (i < text.length && (text.charAt(i) === " " || text.charAt(i) === "\t"));
				wordsCache.push(cur_word);
				cur_word = "";
			}
			else if (i < text.length)
			{
				cur_word += ch;
				i++;
			}
		}
		if (cur_word.length)
			wordsCache.push(cur_word);
	};
	pluginProto.WordWrap = function (inst)
	{
		var text = inst.text;
		var lines = inst.lines;
		if (!text || !text.length)
		{
			freeAllLines(lines);
			return;
		}
		var width = inst.width;
		if (width <= 2.0)
		{
			freeAllLines(lines);
			return;
		}
		var charWidth = inst.characterWidth;
		var charScale = inst.characterScale;
		var charSpacing = inst.characterSpacing;
		if ( (text.length * (charWidth * charScale + charSpacing) - charSpacing) <= width && text.indexOf("\n") === -1)
		{
			var all_width = inst.measureWidth(text);
			if (all_width <= width)
			{
				freeAllLines(lines);
				lines.push(allocLine());
				lines[0].text = text;
				lines[0].width = all_width;
				inst.textWidth  = all_width;
				inst.textHeight = inst.characterHeight * charScale + inst.lineHeight;
				return;
			}
		}
		var wrapbyword = inst.wrapbyword;
		this.WrapText(inst);
		inst.textHeight = lines.length * (inst.characterHeight * charScale + inst.lineHeight);
	};
	pluginProto.WrapText = function (inst)
	{
		var wrapbyword = inst.wrapbyword;
		var text       = inst.text;
		var lines      = inst.lines;
		var width      = inst.width;
		var wordArray;
		if (wrapbyword) {
			this.TokeniseWords(text);	// writes to wordsCache
			wordArray = wordsCache;
		} else {
			wordArray = text;
		}
		var cur_line = "";
		var prev_line;
		var line_width;
		var i;
		var lineIndex = 0;
		var line;
		var ignore_newline = false;
		for (i = 0; i < wordArray.length; i++)
		{
			if (wordArray[i] === "\n")
			{
				if (ignore_newline === true) {
					ignore_newline = false;
				} else {
					addLine(inst,lineIndex,cur_line);
					lineIndex++;
				}
				cur_line = "";
				continue;
			}
			ignore_newline = false;
			prev_line = cur_line;
			cur_line += wordArray[i];
			line_width = inst.measureWidth(trimRight(cur_line));
			if (line_width > width)
			{
				if (prev_line === "") {
					addLine(inst,lineIndex,cur_line);
					cur_line = "";
					ignore_newline = true;
				} else {
					addLine(inst,lineIndex,prev_line);
					cur_line = wordArray[i];
				}
				lineIndex++;
				if (!wrapbyword && cur_line === " ")
					cur_line = "";
			}
		}
		if (trimRight(cur_line).length)
		{
			addLine(inst,lineIndex,cur_line);
			lineIndex++;
		}
		for (i = lineIndex; i < lines.length; i++)
			freeLine(lines[i]);
		lines.length = lineIndex;
	};
	instanceProto.measureWidth = function(text) {
		var spacing = this.characterSpacing;
		var len     = text.length;
		var width   = 0;
		for (var i = 0; i < len; i++) {
			width += this.getCharacterWidth(text.charAt(i)) * this.characterScale + spacing;
		}
		width -= (width > 0) ? spacing : 0;
		return width;
	};
	/***/
	instanceProto.getCharacterWidth = function(character) {
		var widthList = this.characterWidthList;
		if (widthList[character] !== undefined) {
			return widthList[character];
		} else {
			return this.characterWidth;
		}
	};
	instanceProto.rebuildText = function() {
		if (this.text_changed || this.width !== this.lastwrapwidth) {
			this.textWidth = 0;
			this.textHeight = 0;
			this.type.plugin.WordWrap(this);
			this.text_changed = false;
			this.lastwrapwidth = this.width;
		}
	};
	var EPSILON = 0.00001;
	instanceProto.draw = function(ctx, glmode)
	{
		var texture = this.texture_img;
		if (this.text !== "" && texture != null) {
			this.rebuildText();
			if (this.height < this.characterHeight*this.characterScale + this.lineHeight) {
				return;
			}
			ctx.globalAlpha = this.opacity;
			var myx = this.x;
			var myy = this.y;
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			var viewLeft = this.layer.viewLeft;
			var viewTop = this.layer.viewTop;
			var viewRight = this.layer.viewRight;
			var viewBottom = this.layer.viewBottom;
			ctx.save();
			ctx.translate(myx, myy);
			ctx.rotate(this.angle);
			var ha         = this.halign;
			var va         = this.valign;
			var scale      = this.characterScale;
			var charHeight = this.characterHeight * scale;
			var lineHeight = this.lineHeight;
			var charSpace  = this.characterSpacing;
			var lines = this.lines;
			var textHeight = this.textHeight;
			var letterWidth;
			var halign;
			var valign = va * cr.max(0,(this.height - textHeight));
			var offx = -(this.hotspotX * this.width);
			var offy = -(this.hotspotY * this.height);
			offy += valign;
			var drawX ;
			var drawY = offy;
			var roundX, roundY;
			for(var i = 0; i < lines.length; i++) {
				var line = lines[i].text;
				var len  = lines[i].width;
				halign = ha * cr.max(0,this.width - len);
				drawX = offx + halign;
				drawY += lineHeight;
				if (myy + drawY + charHeight < viewTop)
				{
					drawY += charHeight;
					continue;
				}
				for(var j = 0; j < line.length; j++) {
					var letter = line.charAt(j);
					letterWidth = this.getCharacterWidth(letter);
					var clip = this.clipList[letter];
					if (myx + drawX + letterWidth * scale + charSpace < viewLeft)
					{
						drawX += letterWidth * scale + charSpace;
						continue;
					}
					if ( drawX + letterWidth * scale > this.width + EPSILON ) {
						break;
					}
					if (clip !== undefined) {
						roundX = drawX;
						roundY = drawY;
						if (this.angle === 0)
						{
							roundX = Math.round(roundX);
							roundY = Math.round(roundY);
						}
						ctx.drawImage( this.texture_img,
									 clip.x, clip.y, clip.w, clip.h,
									 roundX,roundY,clip.w*scale,clip.h*scale);
					}
					drawX += letterWidth * scale + charSpace;
					if (myx + drawX > viewRight)
						break;
				}
				drawY += charHeight;
				if (drawY + charHeight + lineHeight > this.height || myy + drawY > viewBottom)
				{
					break;
				}
			}
			ctx.restore();
		}
	};
	var dQuad = new cr.quad();
	function rotateQuad(quad,cosa,sina) {
		var x_temp;
		x_temp   = (quad.tlx * cosa) - (quad.tly * sina);
		quad.tly = (quad.tly * cosa) + (quad.tlx * sina);
		quad.tlx = x_temp;
		x_temp    = (quad.trx * cosa) - (quad.try_ * sina);
		quad.try_ = (quad.try_ * cosa) + (quad.trx * sina);
		quad.trx  = x_temp;
		x_temp   = (quad.blx * cosa) - (quad.bly * sina);
		quad.bly = (quad.bly * cosa) + (quad.blx * sina);
		quad.blx = x_temp;
		x_temp    = (quad.brx * cosa) - (quad.bry * sina);
		quad.bry = (quad.bry * cosa) + (quad.brx * sina);
		quad.brx  = x_temp;
	}
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.webGL_texture);
		glw.setOpacity(this.opacity);
		if (!this.text)
			return;
		this.rebuildText();
		if (this.height < this.characterHeight*this.characterScale + this.lineHeight) {
			return;
		}
		this.update_bbox();
		var q = this.bquad;
		var ox = 0;
		var oy = 0;
		if (this.runtime.pixel_rounding)
		{
			ox = ((this.x + 0.5) | 0) - this.x;
			oy = ((this.y + 0.5) | 0) - this.y;
		}
		var viewLeft = this.layer.viewLeft;
		var viewTop = this.layer.viewTop;
		var viewRight = this.layer.viewRight;
		var viewBottom = this.layer.viewBottom;
		var angle      = this.angle;
		var ha         = this.halign;
		var va         = this.valign;
		var scale      = this.characterScale;
		var charHeight = this.characterHeight * scale;   // to precalculate in onCreate or on change
		var lineHeight = this.lineHeight;
		var charSpace  = this.characterSpacing;
		var lines = this.lines;
		var textHeight = this.textHeight;
		var letterWidth;
		var cosa,sina;
		if (angle !== 0)
		{
			cosa = Math.cos(angle);
			sina = Math.sin(angle);
		}
		var halign;
		var valign = va * cr.max(0,(this.height - textHeight));
		var offx = q.tlx + ox;
		var offy = q.tly + oy;
		var drawX ;
		var drawY = valign;
		var roundX, roundY;
		for(var i = 0; i < lines.length; i++) {
			var line       = lines[i].text;
			var lineWidth  = lines[i].width;
			halign = ha * cr.max(0,this.width - lineWidth);
			drawX = halign;
			drawY += lineHeight;
			if (offy + drawY + charHeight < viewTop)
			{
				drawY += charHeight;
				continue;
			}
			for(var j = 0; j < line.length; j++) {
				var letter = line.charAt(j);
				letterWidth = this.getCharacterWidth(letter);
				var clipUV = this.clipUV[letter];
				if (offx + drawX + letterWidth * scale + charSpace < viewLeft)
				{
					drawX += letterWidth * scale + charSpace;
					continue;
				}
				if (drawX + letterWidth * scale > this.width + EPSILON)
				{
					break;
				}
				if (clipUV !== undefined) {
					var clipWidth  = this.characterWidth*scale;
					var clipHeight = this.characterHeight*scale;
					roundX = drawX;
					roundY = drawY;
					if (angle === 0)
					{
						roundX = Math.round(roundX);
						roundY = Math.round(roundY);
					}
					dQuad.tlx  = roundX;
					dQuad.tly  = roundY;
					dQuad.trx  = roundX + clipWidth;
					dQuad.try_ = roundY ;
					dQuad.blx  = roundX;
					dQuad.bly  = roundY + clipHeight;
					dQuad.brx  = roundX + clipWidth;
					dQuad.bry  = roundY + clipHeight;
					if(angle !== 0)
					{
						rotateQuad(dQuad,cosa,sina);
					}
					dQuad.offset(offx,offy);
					glw.quadTex(
						dQuad.tlx, dQuad.tly,
						dQuad.trx, dQuad.try_,
						dQuad.brx, dQuad.bry,
						dQuad.blx, dQuad.bly,
						clipUV
					);
				}
				drawX += letterWidth * scale + charSpace;
				if (offx + drawX > viewRight)
					break;
			}
			drawY += charHeight;
			if (drawY + charHeight + lineHeight > this.height || offy + drawY > viewBottom)
			{
				break;
			}
		}
	};
	function Cnds() {}
	Cnds.prototype.CompareText = function(text_to_compare, case_sensitive)
	{
		if (case_sensitive)
			return this.text == text_to_compare;
		else
			return cr.equals_nocase(this.text, text_to_compare);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {}
	Acts.prototype.SetText = function(param)
	{
		if (cr.is_number(param) && param < 1e9)
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_set = param.toString();
		if (this.text !== text_to_set)
		{
			this.text = text_to_set;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.AppendText = function(param)
	{
		if (cr.is_number(param))
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_append = param.toString();
		if (text_to_append)	// not empty
		{
			this.text += text_to_append;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetScale = function(param)
	{
		if (param !== this.characterScale) {
			this.characterScale = param;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetCharacterSpacing = function(param)
	{
		if (param !== this.CharacterSpacing) {
			this.characterSpacing = param;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetLineHeight = function(param)
	{
		if (param !== this.lineHeight) {
			this.lineHeight = param;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	instanceProto.SetCharWidth = function(character,width) {
		var w = parseInt(width,10);
		if (this.characterWidthList[character] !== w) {
			this.characterWidthList[character] = w;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetCharacterWidth = function(characterSet,width)
	{
		if (characterSet !== "") {
			for(var c = 0; c < characterSet.length; c++) {
				this.SetCharWidth(characterSet.charAt(c),width);
			}
		}
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.SetHAlign = function (a)
	{
		this.halign = a / 2.0;
		this.text_changed = true;
		this.runtime.redraw = true;
	};
	Acts.prototype.SetVAlign = function (a)
	{
		this.valign = a / 2.0;
		this.text_changed = true;
		this.runtime.redraw = true;
	};
	pluginProto.acts = new Acts();
	function Exps() {}
	Exps.prototype.CharacterWidth = function(ret,character)
	{
		ret.set_int(this.getCharacterWidth(character));
	};
	Exps.prototype.CharacterHeight = function(ret)
	{
		ret.set_int(this.characterHeight);
	};
	Exps.prototype.CharacterScale = function(ret)
	{
		ret.set_float(this.characterScale);
	};
	Exps.prototype.CharacterSpacing = function(ret)
	{
		ret.set_int(this.characterSpacing);
	};
	Exps.prototype.LineHeight = function(ret)
	{
		ret.set_int(this.lineHeight);
	};
	Exps.prototype.Text = function(ret)
	{
		ret.set_string(this.text);
	};
	Exps.prototype.TextWidth = function (ret)
	{
		this.rebuildText();
		ret.set_float(this.textWidth);
	};
	Exps.prototype.TextHeight = function (ret)
	{
		this.rebuildText();
		ret.set_float(this.textHeight);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Text = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Text.prototype;
	pluginProto.onCreate = function ()
	{
		pluginProto.acts.SetWidth = function (w)
		{
			if (this.width !== w)
			{
				this.width = w;
				this.text_changed = true;	// also recalculate text wrapping
				this.set_bbox_changed();
			}
		};
	};
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		var i, len, inst;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			inst.mycanvas = null;
			inst.myctx = null;
			inst.mytex = null;
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		if (this.recycled)
			this.lines.length = 0;
		else
			this.lines = [];		// for word wrapping
		this.text_changed = true;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var requestedWebFonts = {};		// already requested web fonts have an entry here
	instanceProto.onCreate = function()
	{
		this.text = this.properties[0];
		this.visible = (this.properties[1] === 0);		// 0=visible, 1=invisible
		this.font = this.properties[2];
		this.color = this.properties[3];
		this.halign = this.properties[4];				// 0=left, 1=center, 2=right
		this.valign = this.properties[5];				// 0=top, 1=center, 2=bottom
		this.wrapbyword = (this.properties[7] === 0);	// 0=word, 1=character
		this.lastwidth = this.width;
		this.lastwrapwidth = this.width;
		this.lastheight = this.height;
		this.line_height_offset = this.properties[8];
		this.facename = "";
		this.fontstyle = "";
		this.ptSize = 0;
		this.textWidth = 0;
		this.textHeight = 0;
		this.parseFont();
		this.mycanvas = null;
		this.myctx = null;
		this.mytex = null;
		this.need_text_redraw = false;
		this.last_render_tick = this.runtime.tickcount;
		if (this.recycled)
			this.rcTex.set(0, 0, 1, 1);
		else
			this.rcTex = new cr.rect(0, 0, 1, 1);
		if (this.runtime.glwrap)
			this.runtime.tickMe(this);
;
	};
	instanceProto.parseFont = function ()
	{
		var arr = this.font.split(" ");
		var i;
		for (i = 0; i < arr.length; i++)
		{
			if (arr[i].substr(arr[i].length - 2, 2) === "pt")
			{
				this.ptSize = parseInt(arr[i].substr(0, arr[i].length - 2));
				this.pxHeight = Math.ceil((this.ptSize / 72.0) * 96.0) + 4;	// assume 96dpi...
				if (i > 0)
					this.fontstyle = arr[i - 1];
				this.facename = arr[i + 1];
				for (i = i + 2; i < arr.length; i++)
					this.facename += " " + arr[i];
				break;
			}
		}
	};
	instanceProto.saveToJSON = function ()
	{
		return {
			"t": this.text,
			"f": this.font,
			"c": this.color,
			"ha": this.halign,
			"va": this.valign,
			"wr": this.wrapbyword,
			"lho": this.line_height_offset,
			"fn": this.facename,
			"fs": this.fontstyle,
			"ps": this.ptSize,
			"pxh": this.pxHeight,
			"tw": this.textWidth,
			"th": this.textHeight,
			"lrt": this.last_render_tick
		};
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.text = o["t"];
		this.font = o["f"];
		this.color = o["c"];
		this.halign = o["ha"];
		this.valign = o["va"];
		this.wrapbyword = o["wr"];
		this.line_height_offset = o["lho"];
		this.facename = o["fn"];
		this.fontstyle = o["fs"];
		this.ptSize = o["ps"];
		this.pxHeight = o["pxh"];
		this.textWidth = o["tw"];
		this.textHeight = o["th"];
		this.last_render_tick = o["lrt"];
		this.text_changed = true;
		this.lastwidth = this.width;
		this.lastwrapwidth = this.width;
		this.lastheight = this.height;
	};
	instanceProto.tick = function ()
	{
		if (this.runtime.glwrap && this.mytex && (this.runtime.tickcount - this.last_render_tick >= 300))
		{
			var layer = this.layer;
            this.update_bbox();
            var bbox = this.bbox;
            if (bbox.right < layer.viewLeft || bbox.bottom < layer.viewTop || bbox.left > layer.viewRight || bbox.top > layer.viewBottom)
			{
				this.runtime.glwrap.deleteTexture(this.mytex);
				this.mytex = null;
				this.myctx = null;
				this.mycanvas = null;
			}
		}
	};
	instanceProto.onDestroy = function ()
	{
		this.myctx = null;
		this.mycanvas = null;
		if (this.runtime.glwrap && this.mytex)
			this.runtime.glwrap.deleteTexture(this.mytex);
		this.mytex = null;
	};
	instanceProto.updateFont = function ()
	{
		this.font = this.fontstyle + " " + this.ptSize.toString() + "pt " + this.facename;
		this.text_changed = true;
		this.runtime.redraw = true;
	};
	instanceProto.draw = function(ctx, glmode)
	{
		ctx.font = this.font;
		ctx.textBaseline = "top";
		ctx.fillStyle = this.color;
		ctx.globalAlpha = glmode ? 1 : this.opacity;
		var myscale = 1;
		if (glmode)
		{
			myscale = this.layer.getScale();
			ctx.save();
			ctx.scale(myscale, myscale);
		}
		if (this.text_changed || this.width !== this.lastwrapwidth)
		{
			this.type.plugin.WordWrap(this.text, this.lines, ctx, this.width, this.wrapbyword);
			this.text_changed = false;
			this.lastwrapwidth = this.width;
		}
		this.update_bbox();
		var penX = glmode ? 0 : this.bquad.tlx;
		var penY = glmode ? 0 : this.bquad.tly;
		if (this.runtime.pixel_rounding)
		{
			penX = (penX + 0.5) | 0;
			penY = (penY + 0.5) | 0;
		}
		if (this.angle !== 0 && !glmode)
		{
			ctx.save();
			ctx.translate(penX, penY);
			ctx.rotate(this.angle);
			penX = 0;
			penY = 0;
		}
		var endY = penY + this.height;
		var line_height = this.pxHeight;
		line_height += this.line_height_offset;
		var drawX;
		var i;
		if (this.valign === 1)		// center
			penY += Math.max(this.height / 2 - (this.lines.length * line_height) / 2, 0);
		else if (this.valign === 2)	// bottom
			penY += Math.max(this.height - (this.lines.length * line_height) - 2, 0);
		for (i = 0; i < this.lines.length; i++)
		{
			drawX = penX;
			if (this.halign === 1)		// center
				drawX = penX + (this.width - this.lines[i].width) / 2;
			else if (this.halign === 2)	// right
				drawX = penX + (this.width - this.lines[i].width);
			ctx.fillText(this.lines[i].text, drawX, penY);
			penY += line_height;
			if (penY >= endY - line_height)
				break;
		}
		if (this.angle !== 0 || glmode)
			ctx.restore();
		this.last_render_tick = this.runtime.tickcount;
	};
	instanceProto.drawGL = function(glw)
	{
		if (this.width < 1 || this.height < 1)
			return;
		var need_redraw = this.text_changed || this.need_text_redraw;
		this.need_text_redraw = false;
		var layer_scale = this.layer.getScale();
		var layer_angle = this.layer.getAngle();
		var rcTex = this.rcTex;
		var floatscaledwidth = layer_scale * this.width;
		var floatscaledheight = layer_scale * this.height;
		var scaledwidth = Math.ceil(floatscaledwidth);
		var scaledheight = Math.ceil(floatscaledheight);
		var halfw = this.runtime.draw_width / 2;
		var halfh = this.runtime.draw_height / 2;
		if (!this.myctx)
		{
			this.mycanvas = document.createElement("canvas");
			this.mycanvas.width = scaledwidth;
			this.mycanvas.height = scaledheight;
			this.lastwidth = scaledwidth;
			this.lastheight = scaledheight;
			need_redraw = true;
			this.myctx = this.mycanvas.getContext("2d");
		}
		if (scaledwidth !== this.lastwidth || scaledheight !== this.lastheight)
		{
			this.mycanvas.width = scaledwidth;
			this.mycanvas.height = scaledheight;
			if (this.mytex)
			{
				glw.deleteTexture(this.mytex);
				this.mytex = null;
			}
			need_redraw = true;
		}
		if (need_redraw)
		{
			this.myctx.clearRect(0, 0, scaledwidth, scaledheight);
			this.draw(this.myctx, true);
			if (!this.mytex)
				this.mytex = glw.createEmptyTexture(scaledwidth, scaledheight, this.runtime.linearSampling, this.runtime.isMobile);
			glw.videoToTexture(this.mycanvas, this.mytex, this.runtime.isMobile);
		}
		this.lastwidth = scaledwidth;
		this.lastheight = scaledheight;
		glw.setTexture(this.mytex);
		glw.setOpacity(this.opacity);
		glw.resetModelView();
		glw.translate(-halfw, -halfh);
		glw.updateModelView();
		var q = this.bquad;
		var tlx = this.layer.layerToCanvas(q.tlx, q.tly, true, true);
		var tly = this.layer.layerToCanvas(q.tlx, q.tly, false, true);
		var trx = this.layer.layerToCanvas(q.trx, q.try_, true, true);
		var try_ = this.layer.layerToCanvas(q.trx, q.try_, false, true);
		var brx = this.layer.layerToCanvas(q.brx, q.bry, true, true);
		var bry = this.layer.layerToCanvas(q.brx, q.bry, false, true);
		var blx = this.layer.layerToCanvas(q.blx, q.bly, true, true);
		var bly = this.layer.layerToCanvas(q.blx, q.bly, false, true);
		if (this.runtime.pixel_rounding || (this.angle === 0 && layer_angle === 0))
		{
			var ox = ((tlx + 0.5) | 0) - tlx;
			var oy = ((tly + 0.5) | 0) - tly
			tlx += ox;
			tly += oy;
			trx += ox;
			try_ += oy;
			brx += ox;
			bry += oy;
			blx += ox;
			bly += oy;
		}
		if (this.angle === 0 && layer_angle === 0)
		{
			trx = tlx + scaledwidth;
			try_ = tly;
			brx = trx;
			bry = tly + scaledheight;
			blx = tlx;
			bly = bry;
			rcTex.right = 1;
			rcTex.bottom = 1;
		}
		else
		{
			rcTex.right = floatscaledwidth / scaledwidth;
			rcTex.bottom = floatscaledheight / scaledheight;
		}
		glw.quadTex(tlx, tly, trx, try_, brx, bry, blx, bly, rcTex);
		glw.resetModelView();
		glw.scale(layer_scale, layer_scale);
		glw.rotateZ(-this.layer.getAngle());
		glw.translate((this.layer.viewLeft + this.layer.viewRight) / -2, (this.layer.viewTop + this.layer.viewBottom) / -2);
		glw.updateModelView();
		this.last_render_tick = this.runtime.tickcount;
	};
	var wordsCache = [];
	pluginProto.TokeniseWords = function (text)
	{
		wordsCache.length = 0;
		var cur_word = "";
		var ch;
		var i = 0;
		while (i < text.length)
		{
			ch = text.charAt(i);
			if (ch === "\n")
			{
				if (cur_word.length)
				{
					wordsCache.push(cur_word);
					cur_word = "";
				}
				wordsCache.push("\n");
				++i;
			}
			else if (ch === " " || ch === "\t" || ch === "-")
			{
				do {
					cur_word += text.charAt(i);
					i++;
				}
				while (i < text.length && (text.charAt(i) === " " || text.charAt(i) === "\t"));
				wordsCache.push(cur_word);
				cur_word = "";
			}
			else if (i < text.length)
			{
				cur_word += ch;
				i++;
			}
		}
		if (cur_word.length)
			wordsCache.push(cur_word);
	};
	var linesCache = [];
	function allocLine()
	{
		if (linesCache.length)
			return linesCache.pop();
		else
			return {};
	};
	function freeLine(l)
	{
		linesCache.push(l);
	};
	function freeAllLines(arr)
	{
		var i, len;
		for (i = 0, len = arr.length; i < len; i++)
		{
			freeLine(arr[i]);
		}
		arr.length = 0;
	};
	pluginProto.WordWrap = function (text, lines, ctx, width, wrapbyword)
	{
		if (!text || !text.length)
		{
			freeAllLines(lines);
			return;
		}
		if (width <= 2.0)
		{
			freeAllLines(lines);
			return;
		}
		if (text.length <= 100 && text.indexOf("\n") === -1)
		{
			var all_width = ctx.measureText(text).width;
			if (all_width <= width)
			{
				freeAllLines(lines);
				lines.push(allocLine());
				lines[0].text = text;
				lines[0].width = all_width;
				return;
			}
		}
		this.WrapText(text, lines, ctx, width, wrapbyword);
	};
	pluginProto.WrapText = function (text, lines, ctx, width, wrapbyword)
	{
		var wordArray;
		if (wrapbyword)
		{
			this.TokeniseWords(text);	// writes to wordsCache
			wordArray = wordsCache;
		}
		else
			wordArray = text;
		var cur_line = "";
		var prev_line;
		var line_width;
		var i;
		var lineIndex = 0;
		var line;
		for (i = 0; i < wordArray.length; i++)
		{
			if (wordArray[i] === "\n")
			{
				if (lineIndex >= lines.length)
					lines.push(allocLine());
				line = lines[lineIndex];
				line.text = cur_line;
				line.width = ctx.measureText(cur_line).width;
				lineIndex++;
				cur_line = "";
				continue;
			}
			prev_line = cur_line;
			cur_line += wordArray[i];
			line_width = ctx.measureText(cur_line).width;
			if (line_width >= width)
			{
				if (lineIndex >= lines.length)
					lines.push(allocLine());
				line = lines[lineIndex];
				line.text = prev_line;
				line.width = ctx.measureText(prev_line).width;
				lineIndex++;
				cur_line = wordArray[i];
				if (!wrapbyword && cur_line === " ")
					cur_line = "";
			}
		}
		if (cur_line.length)
		{
			if (lineIndex >= lines.length)
				lines.push(allocLine());
			line = lines[lineIndex];
			line.text = cur_line;
			line.width = ctx.measureText(cur_line).width;
			lineIndex++;
		}
		for (i = lineIndex; i < lines.length; i++)
			freeLine(lines[i]);
		lines.length = lineIndex;
	};
	function Cnds() {};
	Cnds.prototype.CompareText = function(text_to_compare, case_sensitive)
	{
		if (case_sensitive)
			return this.text == text_to_compare;
		else
			return cr.equals_nocase(this.text, text_to_compare);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetText = function(param)
	{
		if (cr.is_number(param) && param < 1e9)
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_set = param.toString();
		if (this.text !== text_to_set)
		{
			this.text = text_to_set;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.AppendText = function(param)
	{
		if (cr.is_number(param))
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_append = param.toString();
		if (text_to_append)	// not empty
		{
			this.text += text_to_append;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetFontFace = function (face_, style_)
	{
		var newstyle = "";
		switch (style_) {
		case 1: newstyle = "bold"; break;
		case 2: newstyle = "italic"; break;
		case 3: newstyle = "bold italic"; break;
		}
		if (face_ === this.facename && newstyle === this.fontstyle)
			return;		// no change
		this.facename = face_;
		this.fontstyle = newstyle;
		this.updateFont();
	};
	Acts.prototype.SetFontSize = function (size_)
	{
		if (this.ptSize === size_)
			return;
		this.ptSize = size_;
		this.pxHeight = Math.ceil((this.ptSize / 72.0) * 96.0) + 4;	// assume 96dpi...
		this.updateFont();
	};
	Acts.prototype.SetFontColor = function (rgb)
	{
		var newcolor = "rgb(" + cr.GetRValue(rgb).toString() + "," + cr.GetGValue(rgb).toString() + "," + cr.GetBValue(rgb).toString() + ")";
		if (newcolor === this.color)
			return;
		this.color = newcolor;
		this.need_text_redraw = true;
		this.runtime.redraw = true;
	};
	Acts.prototype.SetWebFont = function (familyname_, cssurl_)
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Text plugin: 'Set web font' not supported on this platform - the action has been ignored");
			return;		// DC todo
		}
		var self = this;
		var refreshFunc = (function () {
							self.runtime.redraw = true;
							self.text_changed = true;
						});
		if (requestedWebFonts.hasOwnProperty(cssurl_))
		{
			var newfacename = "'" + familyname_ + "'";
			if (this.facename === newfacename)
				return;	// no change
			this.facename = newfacename;
			this.updateFont();
			for (var i = 1; i < 10; i++)
			{
				setTimeout(refreshFunc, i * 100);
				setTimeout(refreshFunc, i * 1000);
			}
			return;
		}
		var wf = document.createElement("link");
		wf.href = cssurl_;
		wf.rel = "stylesheet";
		wf.type = "text/css";
		wf.onload = refreshFunc;
		document.getElementsByTagName('head')[0].appendChild(wf);
		requestedWebFonts[cssurl_] = true;
		this.facename = "'" + familyname_ + "'";
		this.updateFont();
		for (var i = 1; i < 10; i++)
		{
			setTimeout(refreshFunc, i * 100);
			setTimeout(refreshFunc, i * 1000);
		}
;
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Text = function(ret)
	{
		ret.set_string(this.text);
	};
	Exps.prototype.FaceName = function (ret)
	{
		ret.set_string(this.facename);
	};
	Exps.prototype.FaceSize = function (ret)
	{
		ret.set_int(this.ptSize);
	};
	Exps.prototype.TextWidth = function (ret)
	{
		var w = 0;
		var i, len, x;
		for (i = 0, len = this.lines.length; i < len; i++)
		{
			x = this.lines[i].width;
			if (w < x)
				w = x;
		}
		ret.set_int(w);
	};
	Exps.prototype.TextHeight = function (ret)
	{
		ret.set_int(this.lines.length * (this.pxHeight + this.line_height_offset) - this.line_height_offset);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.TiledBg = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.TiledBg.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		this.texture_img = new Image();
		this.texture_img["idtkLoadDisposed"] = true;
		this.texture_img.src = this.texture_file;
		this.texture_img.cr_filesize = this.texture_filesize;
		this.runtime.waitForImageLoad(this.texture_img);
		this.pattern = null;
		this.webGL_texture = null;
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		this.webGL_texture = null;
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		if (!this.webGL_texture)
		{
			this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, true, this.runtime.linearSampling, this.texture_pixelformat);
		}
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
			this.instances[i].webGL_texture = this.webGL_texture;
	};
	typeProto.loadTextures = function ()
	{
		if (this.is_family || this.webGL_texture || !this.runtime.glwrap)
			return;
		this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, true, this.runtime.linearSampling, this.texture_pixelformat);
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.webGL_texture)
			return;
		this.runtime.glwrap.deleteTexture(this.webGL_texture);
		this.webGL_texture = null;
	};
	typeProto.preloadCanvas2D = function (ctx)
	{
		ctx.drawImage(this.texture_img, 0, 0);
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.visible = (this.properties[0] === 0);							// 0=visible, 1=invisible
		this.rcTex = new cr.rect(0, 0, 0, 0);
		this.has_own_texture = false;										// true if a texture loaded in from URL
		this.texture_img = this.type.texture_img;
		if (this.runtime.glwrap)
		{
			this.type.loadTextures();
			this.webGL_texture = this.type.webGL_texture;
		}
		else
		{
			if (!this.type.pattern)
				this.type.pattern = this.runtime.ctx.createPattern(this.type.texture_img, "repeat");
			this.pattern = this.type.pattern;
		}
	};
	instanceProto.afterLoad = function ()
	{
		this.has_own_texture = false;
		this.texture_img = this.type.texture_img;
	};
	instanceProto.onDestroy = function ()
	{
		if (this.runtime.glwrap && this.has_own_texture && this.webGL_texture)
		{
			this.runtime.glwrap.deleteTexture(this.webGL_texture);
			this.webGL_texture = null;
		}
	};
	instanceProto.draw = function(ctx)
	{
		ctx.globalAlpha = this.opacity;
		ctx.save();
		ctx.fillStyle = this.pattern;
		var myx = this.x;
		var myy = this.y;
		if (this.runtime.pixel_rounding)
		{
			myx = (myx + 0.5) | 0;
			myy = (myy + 0.5) | 0;
		}
		var drawX = -(this.hotspotX * this.width);
		var drawY = -(this.hotspotY * this.height);
		var offX = drawX % this.texture_img.width;
		var offY = drawY % this.texture_img.height;
		if (offX < 0)
			offX += this.texture_img.width;
		if (offY < 0)
			offY += this.texture_img.height;
		ctx.translate(myx, myy);
		ctx.rotate(this.angle);
		ctx.translate(offX, offY);
		ctx.fillRect(drawX - offX,
					 drawY - offY,
					 this.width,
					 this.height);
		ctx.restore();
	};
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.webGL_texture);
		glw.setOpacity(this.opacity);
		var rcTex = this.rcTex;
		rcTex.right = this.width / this.texture_img.width;
		rcTex.bottom = this.height / this.texture_img.height;
		var q = this.bquad;
		if (this.runtime.pixel_rounding)
		{
			var ox = ((this.x + 0.5) | 0) - this.x;
			var oy = ((this.y + 0.5) | 0) - this.y;
			glw.quadTex(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy, rcTex);
		}
		else
			glw.quadTex(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly, rcTex);
	};
	function Cnds() {};
	Cnds.prototype.OnURLLoaded = function ()
	{
		return true;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.LoadURL = function (url_)
	{
		var img = new Image();
		var self = this;
		img.onload = function ()
		{
			self.texture_img = img;
			if (self.runtime.glwrap)
			{
				if (self.has_own_texture && self.webGL_texture)
					self.runtime.glwrap.deleteTexture(self.webGL_texture);
				self.webGL_texture = self.runtime.glwrap.loadTexture(img, true, self.runtime.linearSampling);
			}
			else
			{
				self.pattern = self.runtime.ctx.createPattern(img, "repeat");
			}
			self.has_own_texture = true;
			self.runtime.redraw = true;
			self.runtime.trigger(cr.plugins_.TiledBg.prototype.cnds.OnURLLoaded, self);
		};
		if (url_.substr(0, 5) !== "data:")
			img.crossOrigin = 'anonymous';
		img.src = url_;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.ImageWidth = function (ret)
	{
		ret.set_float(this.texture_img.width);
	};
	Exps.prototype.ImageHeight = function (ret)
	{
		ret.set_float(this.texture_img.height);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Tilemap = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Tilemap.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
		var i, len, p;
		if (this.is_family)
			return;
		this.texture_img = new Image();
		this.texture_img["idtkLoadDisposed"] = true;
		this.texture_img.src = this.texture_file;
		this.texture_img.cr_filesize = this.texture_filesize;
		this.runtime.waitForImageLoad(this.texture_img);
		this.cut_tiles = [];
		this.cut_tiles_valid = false;
		this.tile_polys = [];
		this.tile_polys_cached = false;		// first instance will cache polys with the tile width/height
		if (this.tile_poly_data && this.tile_poly_data.length)
		{
			for (i = 0, len = this.tile_poly_data.length; i < len; ++i)
			{
				p = this.tile_poly_data[i];
				if (p)
				{
					this.tile_polys.push({
						poly: p,
						flipmap: [[[null, null], [null, null]], [[null, null], [null, null]]]
					});
				}
				else
					this.tile_polys.push(null);
			}
		}
	};
	typeProto.cacheTilePoly = function (tileid, tilewidth, tileheight, fliph, flipv, flipd)
	{
		if (tileid < 0 || tileid >= this.tile_polys.length)
			return;
		if (!this.tile_polys[tileid])
			return;		// no poly for this tile
		var poly = this.tile_polys[tileid].poly;
		var flipmap = this.tile_polys[tileid].flipmap;
		var cached_poly = new cr.CollisionPoly(poly);
		cached_poly.cache_poly(tilewidth, tileheight, 0);
		if (flipd)
			cached_poly.diag();
		if (fliph)
			cached_poly.mirror(tilewidth / 2);
		if (flipv)
			cached_poly.flip(tileheight / 2);
		flipmap[fliph?1:0][flipv?1:0][flipd?1:0] = cached_poly;
	};
	typeProto.getTilePoly = function (id)
	{
		if (id === -1)
			return null;
		var tileid = (id & TILE_ID_MASK);
		if (tileid < 0 || tileid >= this.tile_polys.length)
			return null;		// out of range
		if (!this.tile_polys[tileid])
			return null;		// no poly for this tile
		var fliph = (id & TILE_FLIPPED_HORIZONTAL) ? 1 : 0;
		var flipv = (id & TILE_FLIPPED_VERTICAL) ? 1 : 0;
		var flipd = (id & TILE_FLIPPED_DIAGONAL) ? 1 : 0;
		return this.tile_polys[tileid].flipmap[fliph][flipv][flipd];
	};
	typeProto.freeCutTiles = function ()
	{
		var i, len;
		var glwrap = this.runtime.glwrap;
		if (glwrap)
		{
			for (i = 0, len = this.cut_tiles.length; i < len; ++i)
				glwrap.deleteTexture(this.cut_tiles[i]);
		}
		this.cut_tiles.length = 0;
		this.cut_tiles_valid = false;
	}
	typeProto.maybeCutTiles = function (tw, th, offx, offy, sepx, sepy, seamless)
	{
		if (this.cut_tiles_valid)
			return;		// no changed
		if (tw <= 0 || th <= 0)
			return;
		this.freeCutTiles();
		var img_width = this.texture_img.width;
		var img_height = this.texture_img.height;
		var x, y;
		for (y = offy; y + th <= img_height; y += (th + sepy))
		{
			for (x = offx; x + tw <= img_width; x += (tw + sepx))
			{
				this.cut_tiles.push(this.CutTileImage(x, y, tw, th, seamless));
			}
		}
		this.cut_tiles_valid = true;
	};
	typeProto.CutTileImage = function(x, y, w, h, seamless)
	{
		if (this.runtime.glwrap)
		{
			return this.DoCutTileImage(x, y, w, h, false, false, false, seamless);
		}
		else
		{
			var flipmap = [[[null, null], [null, null]], [[null, null], [null, null]]];
			flipmap[0][0][0] = this.DoCutTileImage(x, y, w, h, false, false, false, seamless);
			return {
				flipmap: flipmap,
				x: x,
				y: y,
				w: w,
				h: h
			};
		}
	};
	typeProto.GetFlippedTileImage = function (tileid, fliph, flipv, flipd, seamless)
	{
		if (tileid < 0 || tileid >= this.cut_tiles.length)
			return null;
		var tile = this.cut_tiles[tileid];
		var flipmap = tile.flipmap;
		var hi = (fliph ? 1 : 0);
		var vi = (flipv ? 1 : 0);
		var di = (flipd ? 1 : 0);
		var ret = flipmap[hi][vi][di];
		if (ret)
		{
			return ret;
		}
		else
		{
			ret = this.DoCutTileImage(tile.x, tile.y, tile.w, tile.h, hi!==0, vi!==0, di!==0, seamless);
			flipmap[hi][vi][di] = ret;
			return ret;
		}
	};
	typeProto.DoCutTileImage = function(x, y, w, h, fliph, flipv, flipd, seamless)
	{
		var dw = w;
		var dh = h;
		if (this.runtime.glwrap)
		{
			if (!cr.isPOT(dw))
				dw = cr.nextHighestPowerOfTwo(dw);
			if (!cr.isPOT(dh))
				dh = cr.nextHighestPowerOfTwo(dh);
		}
		var tmpcanvas = document.createElement("canvas");
		tmpcanvas.width = dw;
		tmpcanvas.height = dh;
		var tmpctx = tmpcanvas.getContext("2d");
		if (this.runtime.ctx)
		{
			if (fliph)
			{
				if (flipv)
				{
					if (flipd)
					{
						tmpctx.rotate(Math.PI / 2);
						tmpctx.scale(-1, 1);
						tmpctx.translate(-dw, -dh);
					}
					else
					{
						tmpctx.scale(-1, -1);
						tmpctx.translate(-dw, -dh);
					}
				}
				else
				{
					if (flipd)
					{
						tmpctx.rotate(Math.PI / 2);
						tmpctx.translate(0, -dh);
					}
					else
					{
						tmpctx.scale(-1, 1);
						tmpctx.translate(-dw, 0);
					}
				}
			}
			else
			{
				if (flipv)
				{
					if (flipd)
					{
						tmpctx.rotate(-Math.PI / 2);
						tmpctx.translate(-dw, 0);
					}
					else
					{
						tmpctx.scale(1, -1);
						tmpctx.translate(0, -dh);
					}
				}
				else
				{
					if (flipd)
					{
						tmpctx.scale(-1, 1);
						tmpctx.rotate(Math.PI / 2);
					}
				}
			}
			tmpctx.drawImage(this.texture_img, x, y, w, h, 0, 0, dw, dh);
			if (seamless)
				return tmpcanvas;
			else
				return this.runtime.ctx.createPattern(tmpcanvas, "repeat");
		}
		else
		{
;
			tmpctx.drawImage(this.texture_img, x, y, w, h, 0, 0, dw, dh);
			var tex = this.runtime.glwrap.createEmptyTexture(dw, dh, this.runtime.linearSampling, false, !seamless);
			this.runtime.glwrap.videoToTexture(tmpcanvas, tex);
			return tex;
		}
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		this.freeCutTiles();
	};
	typeProto.onRestoreWebGLContext = function ()
	{
	};
	typeProto.loadTextures = function ()
	{
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length)
			return;
		this.freeCutTiles();
	};
	typeProto.preloadCanvas2D = function (ctx)
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var TILE_FLIPPED_HORIZONTAL = -0x80000000		// note: pretend is a signed int, so negate
	var TILE_FLIPPED_VERTICAL = 0x40000000
	var TILE_FLIPPED_DIAGONAL = 0x20000000
	var TILE_FLAGS_MASK = 0xE0000000
	var TILE_ID_MASK = 0x1FFFFFFF
	function TileQuad()
	{
		this.id = -1;
		this.tileid = -1;
		this.horiz_flip = false;
		this.vert_flip = false;
		this.diag_flip = false;
		this.any_flip = false;
		this.rc = new cr.rect(0, 0, 0, 0);
	};
	var tilequad_cache = [];
	function allocTileQuad()
	{
		if (tilequad_cache.length)
			return tilequad_cache.pop();
		else
			return new TileQuad();
	};
	function freeTileQuad(tq)
	{
		if (tilequad_cache.length < 10000)
			tilequad_cache.push(tq);
	};
	function TileCollisionRect()
	{
		this.id = -1;
		this.rc = new cr.rect(0, 0, 0, 0);
		this.poly = null;
	}
	var collrect_cache = [];
	function allocCollRect()
	{
		if (collrect_cache.length)
			return collrect_cache.pop();
		else
			return new TileCollisionRect();
	};
	function freeCollRect(r)
	{
		if (collrect_cache.length < 10000)
			collrect_cache.push(r);
	};
	var tile_cell_cache = [];
	function allocTileCell(inst_, x_, y_)
	{
		var ret;
		if (tile_cell_cache.length)
		{
			ret = tile_cell_cache.pop();
			ret.inst = inst_;
			ret.x = x_;
			ret.y = y_;
			ret.left = ret.x * ret.inst.cellwidth * ret.inst.tilewidth;
			ret.top = ret.y * ret.inst.cellheight * ret.inst.tileheight;
			ret.clear();
			ret.quadmap_valid = false;
			return ret;
		}
		else
			return new TileCell(inst_, x_, y_);
	};
	function freeTileCell(tc)
	{
		var i, len;
		for (i = 0, len = tc.quads.length; i < len; ++i)
			freeTileQuad(tc.quads[i]);
		tc.quads.length = 0;
		for (i = 0, len = tc.collision_rects.length; i < len; ++i)
			freeCollRect(tc.collision_rects[i]);
		tc.collision_rects.length = 0;
		if (tile_cell_cache.length < 1000)
			tile_cell_cache.push(tc);
	};
	function TileCell(inst_, x_, y_)
	{
		this.inst = inst_;
		this.x = x_;
		this.y = y_;
		this.left = this.x * this.inst.cellwidth * this.inst.tilewidth;
		this.top = this.y * this.inst.cellheight * this.inst.tileheight;
		this.tiles = [];
		this.quads = [];
		this.collision_rects = [];
		this.quadmap_valid = false;
		var i, len, j, lenj, arr;
		for (i = 0, len = this.inst.cellheight; i < len; ++i)
		{
			arr = [];
			for (j = 0, lenj = this.inst.cellwidth; j < lenj; ++j)
				arr.push(-1);
			this.tiles.push(arr);
		}
	};
	TileCell.prototype.clear = function ()
	{
		var i, len, j, lenj, arr;
		this.tiles.length = this.inst.cellheight;
		for (i = 0, len = this.tiles.length; i < len; ++i)
		{
			arr = this.tiles[i];
			if (!arr)
			{
				arr = [];
				this.tiles[i] = arr;
			}
			arr.length = this.inst.cellwidth;
			for (j = 0, lenj = arr.length; j < lenj; ++j)
				arr[j] = -1;
		}
	};
	TileCell.prototype.maybeBuildQuadMap = function ()
	{
		if (this.quadmap_valid)
			return;		// not changed
		var tilewidth = this.inst.tilewidth;
		var tileheight = this.inst.tileheight;
		if (tilewidth <= 0 || tileheight <= 0)
			return;
		var i, j, len, y, leny, x, lenx, arr, t, p, q;
		for (i = 0, len = this.quads.length; i < len; ++i)
			freeTileQuad(this.quads[i]);
		for (i = 0, len = this.collision_rects.length; i < len; ++i)
			freeCollRect(this.collision_rects[i]);
		this.quads.length = 0;
		this.collision_rects.length = 0;
		var extentwidth = Math.floor(this.inst.width / tilewidth);
		var extentheight = Math.floor(this.inst.height / tileheight);
		extentwidth -= this.left / tilewidth;
		extentheight -= this.top / tileheight;
		if (extentwidth > this.inst.cellwidth)
			extentwidth = this.inst.cellwidth;
		if (extentheight > this.inst.cellheight)
			extentheight = this.inst.cellheight;
		var seamless = this.inst.seamless;
		var cur_quad = null;
		for (y = 0, leny = extentheight; y < leny; ++y)
		{
			arr = this.tiles[y];
			for (x = 0, lenx = extentwidth; x < lenx; ++x)
			{
				t = arr[x];
				if (t === -1)
				{
					if (cur_quad)
					{
						this.quads.push(cur_quad);
						cur_quad = null;
					}
					continue;
				}
				if (seamless || !cur_quad || t !== cur_quad.id)
				{
					if (cur_quad)
						this.quads.push(cur_quad);
					cur_quad = allocTileQuad();
					cur_quad.id = t;
					cur_quad.tileid = (t & TILE_ID_MASK);
					cur_quad.horiz_flip = (t & TILE_FLIPPED_HORIZONTAL) !== 0;
					cur_quad.vert_flip = (t & TILE_FLIPPED_VERTICAL) !== 0;
					cur_quad.diag_flip = (t & TILE_FLIPPED_DIAGONAL) !== 0;
					cur_quad.any_flip = (cur_quad.horiz_flip || cur_quad.vert_flip || cur_quad.diag_flip);
					cur_quad.rc.left = x * tilewidth + this.left;
					cur_quad.rc.top = y * tileheight + this.top;
					cur_quad.rc.right = cur_quad.rc.left + tilewidth;
					cur_quad.rc.bottom = cur_quad.rc.top + tileheight;
				}
				else
				{
					cur_quad.rc.right += tilewidth;
				}
			}
			if (cur_quad)
			{
				this.quads.push(cur_quad);
				cur_quad = null;
			}
		}
		var cur_rect = null;
		var tileid, tilepoly;
		var cur_has_poly = false;
		var rc;
		for (y = 0, leny = extentheight; y < leny; ++y)
		{
			arr = this.tiles[y];
			for (x = 0, lenx = extentwidth; x < lenx; ++x)
			{
				t = arr[x];
				if (t === -1)
				{
					if (cur_rect)
					{
						this.collision_rects.push(cur_rect);
						cur_rect = null;
						cur_has_poly = false;
					}
					continue;
				}
				tileid = (t & TILE_ID_MASK);
				tilepoly = this.inst.type.getTilePoly(t);
				if (!cur_rect || tilepoly || cur_has_poly)
				{
					if (cur_rect)
					{
						this.collision_rects.push(cur_rect);
						cur_rect = null;
					}
;
					cur_rect = allocCollRect();
					cur_rect.id = t;
					cur_rect.poly = tilepoly ? tilepoly : null;
					rc = cur_rect.rc;
					rc.left = x * tilewidth + this.left;
					rc.top = y * tileheight + this.top;
					rc.right = rc.left + tilewidth;
					rc.bottom = rc.top + tileheight;
					cur_has_poly = !!tilepoly;
				}
				else
				{
					cur_rect.rc.right += tilewidth;
				}
			}
			if (cur_rect)
			{
				this.collision_rects.push(cur_rect);
				cur_rect = null;
				cur_has_poly = false;
			}
		}
		if (!seamless)
		{
			len = this.quads.length;
			for (i = 0; i < len; ++i)
			{
				q = this.quads[i];
				for (j = i + 1; j < len; ++j)
				{
					p = this.quads[j];
					if (p.rc.top < q.rc.bottom)
						continue;
					if (p.rc.top > q.rc.bottom)
						break;
					if (p.rc.right > q.rc.right || p.rc.left > q.rc.left)
						break;
					if (p.id === q.id && p.rc.left === q.rc.left && p.rc.right === q.rc.right)
					{
						freeTileQuad(this.quads[j]);
						this.quads.splice(j, 1);
						--len;
						q.rc.bottom += tileheight;
						--j;		// look at same j index again
					}
				}
			}
		}
		len = this.collision_rects.length;
		var prc, qrc;
		for (i = 0; i < len; ++i)
		{
			q = this.collision_rects[i];
			if (q.poly)
				continue;
			qrc = q.rc;
			for (j = i + 1; j < len; ++j)
			{
				p = this.collision_rects[j];
				prc = p.rc;
				if (prc.top < qrc.bottom)
					continue;
				if (prc.top > qrc.bottom)
					break;
				if (prc.right > qrc.right || prc.left > qrc.left)
					break;
				if (p.poly)
					continue;
				if (prc.left === qrc.left && prc.right === qrc.right)
				{
					freeCollRect(this.collision_rects[j]);
					this.collision_rects.splice(j, 1);
					--len;
					qrc.bottom += tileheight;
					--j;		// look at same j index again
				}
			}
		}
		this.quadmap_valid = true;
	};
	TileCell.prototype.setTileAt = function (x_, y_, t_)
	{
		if (this.tiles[y_][x_] !== t_)
		{
			this.tiles[y_][x_] = t_;
			this.quadmap_valid = false;
			this.inst.any_quadmap_changed = true;
			this.inst.physics_changed = true;
			this.inst.runtime.redraw = true;
		}
	};
	instanceProto.onCreate = function()
	{
;
		var i, len, p;
		this.visible = (this.properties[0] === 0);
		this.tilewidth = this.properties[1];
		this.tileheight = this.properties[2];
		this.tilexoffset = this.properties[3];
		this.tileyoffset = this.properties[4];
		this.tilexspacing = this.properties[5];
		this.tileyspacing = this.properties[6];
		this.seamless = (this.properties[7] !== 0);
		this.mapwidth = this.tilemap_width;
		this.mapheight = this.tilemap_height;
		this.lastwidth = this.width;
		this.lastheight = this.height;
		var tw = this.tilewidth;
		var th = this.tileheight;
		if (tw === 0)
			tw = 1;
		if (th === 0)
			th = 1;
		this.cellwidth = Math.ceil(this.runtime.original_width / tw);
		this.cellheight = Math.ceil(this.runtime.original_height / th);
		if (!this.type.tile_polys_cached)
		{
			this.type.tile_polys_cached = true;
			for (i = 0, len = this.type.tile_polys.length; i < len; ++i)
			{
				p = this.type.tile_polys[i];
				if (!p)
					continue;
				this.type.cacheTilePoly(i, tw, th, false, false, false);
				this.type.cacheTilePoly(i, tw, th, false, false, true);
				this.type.cacheTilePoly(i, tw, th, false, true, false);
				this.type.cacheTilePoly(i, tw, th, false, true, true);
				this.type.cacheTilePoly(i, tw, th, true, false, false);
				this.type.cacheTilePoly(i, tw, th, true, false, true);
				this.type.cacheTilePoly(i, tw, th, true, true, false);
				this.type.cacheTilePoly(i, tw, th, true, true, true);
			}
		}
		if (!this.recycled)
			this.tilecells = [];
		this.maybeResizeTilemap(true);
		this.setTilesFromRLECSV(this.tilemap_data);
		this.type.maybeCutTiles(this.tilewidth, this.tileheight, this.tilexoffset, this.tileyoffset, this.tilexspacing, this.tileyspacing, this.seamless);
		this.physics_changed = false;		// to indicate to physics behavior to recreate body
		this.any_quadmap_changed = true;
		this.maybeBuildAllQuadMap();
	};
	instanceProto.maybeBuildAllQuadMap = function ()
	{
		if (!this.any_quadmap_changed)
			return;		// no change
		var i, len, j, lenj, arr;
		for (i = 0, len = this.tilecells.length; i < len; ++i)
		{
			arr = this.tilecells[i];
			for (j = 0, lenj = arr.length; j < lenj; ++j)
			{
				arr[j].maybeBuildQuadMap();
			}
		}
		this.any_quadmap_changed = false;
	};
	instanceProto.setAllQuadMapChanged = function ()
	{
		var i, len, j, lenj, arr;
		for (i = 0, len = this.tilecells.length; i < len; ++i)
		{
			arr = this.tilecells[i];
			for (j = 0, lenj = arr.length; j < lenj; ++j)
			{
				arr[j].quadmap_valid = false;
			}
		}
		this.any_quadmap_changed = true;
	};
	function RunLengthDecode(str)
	{
		var ret = [];
		var parts = str.split(",");
		var i, len, p, x, n, t, part;
		for (i = 0, len = parts.length; i < len; ++i)
		{
			p = parts[i];
			x = p.indexOf("x");
			if (x > -1)
			{
				n = parseInt(p.substring(0, x), 10);
				part = p.substring(x + 1);
				t = parseInt(part, 10);
				if (part.indexOf("h") > -1)
					t = t | TILE_FLIPPED_HORIZONTAL;
				if (part.indexOf("v") > -1)
					t = t | TILE_FLIPPED_VERTICAL;
				if (part.indexOf("d") > -1)
					t = t | TILE_FLIPPED_DIAGONAL;
				for ( ; n > 0; --n)
					ret.push(t);
			}
			else
			{
				t = parseInt(p, 10);
				if (p.indexOf("h") > -1)
					t = t | TILE_FLIPPED_HORIZONTAL;
				if (p.indexOf("v") > -1)
					t = t | TILE_FLIPPED_VERTICAL;
				if (p.indexOf("d") > -1)
					t = t | TILE_FLIPPED_DIAGONAL;
				ret.push(t);
			}
		}
		return ret;
	};
	instanceProto.maybeResizeTilemap = function (force)
	{
		var curwidth = cr.floor(this.width / this.tilewidth);
		var curheight = cr.floor(this.height / this.tileheight);
		if (curwidth <= this.mapwidth && curheight <= this.mapheight && !force)
			return;
		var vcells, hcells;
		if (force)
		{
			vcells = Math.ceil(this.mapheight / this.cellheight);
			hcells = Math.ceil(this.mapwidth / this.cellwidth);
		}
		else
		{
			vcells = this.tilecells.length;
			hcells = Math.ceil(this.mapwidth / this.cellwidth);
			if (curheight > this.mapheight)
			{
				this.mapheight = curheight;
				vcells = Math.ceil(this.mapheight / this.cellheight);
			}
			if (curwidth > this.mapwidth)
			{
				this.mapwidth = curwidth;
				hcells = Math.ceil(this.mapwidth / this.cellwidth);
			}
			this.setAllQuadMapChanged();
			this.physics_changed = true;
			this.runtime.redraw = true;
		}
		var y, x, arr;
		for (y = 0; y < vcells; ++y)
		{
			arr = this.tilecells[y];
			if (!arr)
			{
				arr = [];
				for (x = 0; x < hcells; ++x)
					arr.push(allocTileCell(this, x, y));
				this.tilecells[y] = arr;
			}
			else
			{
				for (x = arr.length; x < hcells; ++x)
					arr.push(allocTileCell(this, x, y));
			}
		}
	};
	instanceProto.cellAt = function (tx, ty)
	{
		if (tx < 0 || ty < 0)
			return null;
		var cy = cr.floor(ty / this.cellheight);
		if (cy >= this.tilecells.length)
			return null;
		var row = this.tilecells[cy];
		var cx = cr.floor(tx / this.cellwidth);
		if (cx >= row.length)
			return null;
		return row[cx];
	};
	instanceProto.cellAtIndex = function (cx, cy)
	{
		if (cx < 0 || cy < 0 || cy >= this.tilecells.length)
			return null;
		var row = this.tilecells[cy];
		if (cx >= row.length)
			return null;
		return row[cx];
	};
	instanceProto.setTilesFromRLECSV = function (str)
	{
		var tilestream = RunLengthDecode(str);
		var next = 0;
		var y, x, arr, tile, cell;
		for (y = 0; y < this.mapheight; ++y)
		{
			for (x = 0; x < this.mapwidth; ++x)
			{
				tile = tilestream[next++];
				cell = this.cellAt(x, y);
				if (cell)
					cell.setTileAt(x % this.cellwidth, y % this.cellheight, tile);
			}
		}
	};
	instanceProto.getTilesAsRLECSV = function ()
	{
		var ret = "";
		if (this.mapwidth <= 0 || this.mapheight <= 0)
			return ret;
		var run_count = 1;
		var run_number = this.getTileAt(0, 0);
		var y, leny = this.mapheight, x, lenx = this.mapwidth, t;
		var tileid, horiz_flip, vert_flip, diag_flip;
		for (y = 0; y < leny; ++y)
		{
			for (x = (y === 0 ? 1 : 0) ; x < lenx; ++x)
			{
				t = this.getTileAt(x, y);
				if (t === run_number)
					++run_count;
				else
				{
					if (run_number === -1)
					{
						tileid = -1;
						horiz_flip = false;
						vert_flip = false;
						diag_flip = false;
					}
					else
					{
						tileid = (run_number & TILE_ID_MASK);
						horiz_flip = (run_number & TILE_FLIPPED_HORIZONTAL) !== 0;
						vert_flip = (run_number & TILE_FLIPPED_VERTICAL) !== 0;
						diag_flip = (run_number & TILE_FLIPPED_DIAGONAL) !== 0;
					}
					if (run_count === 1)
						ret += "" + tileid;
					else
						ret += "" + run_count + "x" + tileid;
					if (horiz_flip)
						ret += "h";
					if (vert_flip)
						ret += "v";
					if (diag_flip)
						ret += "d";
					ret += ",";
					run_count = 1;
					run_number = t;
				}
			}
		}
		if (run_number === -1)
		{
			tileid = -1;
			horiz_flip = false;
			vert_flip = false;
			diag_flip = false;
		}
		else
		{
			tileid = (run_number & TILE_ID_MASK);
			horiz_flip = (run_number & TILE_FLIPPED_HORIZONTAL) !== 0;
			vert_flip = (run_number & TILE_FLIPPED_VERTICAL) !== 0;
			diag_flip = (run_number & TILE_FLIPPED_DIAGONAL) !== 0;
		}
		if (run_count === 1)
			ret += "" + tileid;
		else
			ret += "" + run_count + "x" + tileid;
		if (horiz_flip)
			ret += "h";
		if (vert_flip)
			ret += "v";
		if (diag_flip)
			ret += "d";
		return ret;
	};
	instanceProto.getTileAt = function (x_, y_)
	{
		x_ = Math.floor(x_);
		y_ = Math.floor(y_);
		if (x_ < 0 || y_ < 0 || x_ >= this.mapwidth || y_ >= this.mapheight)
			return -1;
		var cell = this.cellAt(x_, y_);
		if (!cell)
			return -1;
		return cell.tiles[y_ % this.cellheight][x_ % this.cellwidth];
	};
	instanceProto.setTileAt = function (x_, y_, t_)
	{
		x_ = Math.floor(x_);
		y_ = Math.floor(y_);
		if (x_ < 0 || y_ < 0 || x_ >= this.mapwidth || y_ >= this.mapheight)
			return -1;
		var cell = this.cellAt(x_, y_);
		if (!cell)
			return -1;
		cell.setTileAt(x_ % this.cellwidth, y_ % this.cellheight, t_);
	};
	instanceProto.worldToCellX = function (x)
	{
		return Math.floor((x - this.x) / (this.cellwidth * this.tilewidth));
	};
	instanceProto.worldToCellY = function (y)
	{
		return Math.floor((y - this.y) / (this.cellheight * this.tileheight));
	};
	instanceProto.getCollisionRectCandidates = function (bbox, candidates)
	{
		var firstCellX = this.worldToCellX(bbox.left);
		var firstCellY = this.worldToCellY(bbox.top);
		var lastCellX = this.worldToCellX(bbox.right);
		var lastCellY = this.worldToCellY(bbox.bottom);
		var cx, cy, cell;
		for (cx = firstCellX; cx <= lastCellX; ++cx)
		{
			for (cy = firstCellY; cy <= lastCellY; ++cy)
			{
				cell = this.cellAtIndex(cx, cy);
				if (!cell)
					continue;
				cell.maybeBuildQuadMap();
				cr.appendArray(candidates, cell.collision_rects);
			}
		}
	};
	instanceProto.getAllCollisionRects = function (candidates)
	{
		var i, len, j, lenj, row, cell;
		for (i = 0, len = this.tilecells.length; i < len; ++i)
		{
			row = this.tilecells[i];
			for (j = 0, lenj = row.length; j < lenj; ++j)
			{
				cell = row[j];
				cell.maybeBuildQuadMap();
				cr.appendArray(candidates, cell.collision_rects);
			}
		}
	};
	instanceProto.onDestroy = function ()
	{
		var i, len, j, lenj, arr;
		for (i = 0, len = this.tilecells.length; i < len; ++i)
		{
			arr = this.tilecells[i];
			for (j = 0, lenj = arr.length; j < lenj; ++j)
			{
				freeTileCell(arr[j]);
			}
			arr.length = 0;
		}
		this.tilecells.length = 0;
	};
	instanceProto.saveToJSON = function ()
	{
		return {
			"w": this.mapwidth,
			"h": this.mapheight,
			"d": this.getTilesAsRLECSV()
		};
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.mapwidth = o["w"];
		this.mapheight = o["h"];
		this.setTilesFromRLECSV(o["d"]);
		this.physics_changed = true;
		this.setAllQuadMapChanged();
	};
	instanceProto.draw = function(ctx)
	{
		if (this.tilewidth <= 0 || this.tileheight <= 0)
			return;
		this.type.maybeCutTiles(this.tilewidth, this.tileheight, this.tilexoffset, this.tileyoffset, this.tilexspacing, this.tileyspacing, this.seamless);
		if (this.width !== this.lastwidth || this.height !== this.lastheight)
		{
			this.physics_changed = true;
			this.setAllQuadMapChanged();
			this.maybeBuildAllQuadMap();
			this.lastwidth = this.width;
			this.lastheight = this.height;
		}
		ctx.globalAlpha = this.opacity;
		var layer = this.layer;
		var viewLeft = layer.viewLeft;
		var viewTop = layer.viewTop;
		var viewRight = layer.viewRight;
		var viewBottom = layer.viewBottom;
		var myx = this.x;
		var myy = this.y;
		var seamless = this.seamless;
		var qrc;
		if (this.runtime.pixel_rounding)
		{
			myx = (myx + 0.5) | 0;
			myy = (myy + 0.5) | 0;
		}
		var cellWidthPx = this.cellwidth * this.tilewidth;
		var cellHeightPx = this.cellheight * this.tileheight;
		var firstCellX = Math.floor((viewLeft - myx) / cellWidthPx);
		var lastCellX = Math.floor((viewRight - myx) / cellWidthPx);
		var firstCellY = Math.floor((viewTop - myy) / cellHeightPx);
		var lastCellY = Math.floor((viewBottom - myy) / cellHeightPx);
		var offx = myx % this.tilewidth;
		var offy = myy % this.tileheight;
		if (this.seamless)
		{
			offx = 0;
			offy = 0;
		}
		if (offx !== 0 || offy !== 0)
		{
			ctx.save();
			ctx.translate(offx, offy);
			myx -= offx;
			myy -= offy;
			viewLeft -= offx;
			viewTop -= offy;
			viewRight -= offx;
			viewBottom -= offy;
		}
		var cx, cy, cell, i, len, q, qleft, qtop, qright, qbottom, img;
		for (cx = firstCellX; cx <= lastCellX; ++cx)
		{
			for (cy = firstCellY; cy <= lastCellY; ++cy)
			{
				cell = this.cellAtIndex(cx, cy);
				if (!cell)
					continue;
				cell.maybeBuildQuadMap();
				for (i = 0, len = cell.quads.length; i < len; ++i)
				{
					q = cell.quads[i];
					if (q.id === -1)
						continue;
					qrc = q.rc;
					qleft = qrc.left + myx;
					qtop = qrc.top + myy;
					qright = qrc.right + myx;
					qbottom = qrc.bottom + myy;
					if (qleft > viewRight || qright < viewLeft || qtop > viewBottom || qbottom < viewTop)
						continue;
					img = this.type.GetFlippedTileImage(q.tileid, q.horiz_flip, q.vert_flip, q.diag_flip, this.seamless);
					if (seamless)
					{
						ctx.drawImage(img, qleft, qtop);
					}
					else
					{
						ctx.fillStyle = this.type.GetFlippedTileImage(q.tileid, q.horiz_flip, q.vert_flip, q.diag_flip, this.seamless);
						ctx.fillRect(qleft, qtop, qright - qleft, qbottom - qtop);
					}
				}
				/*
				for (i = 0, len = cell.collision_rects.length; i < len; ++i)
				{
					qrc = cell.collision_rects[i].rc;
					qleft = qrc.left + myx;
					qtop = qrc.top + myy;
					qright = qrc.right + myx;
					qbottom = qrc.bottom + myy;
					ctx.strokeRect(qleft, qtop, qright - qleft, qbottom - qtop);
				}
				*/
			}
		}
		if (offx !== 0 || offy !== 0)
			ctx.restore();
	};
	var tmp_rect = new cr.rect(0, 0, 1, 1);
	instanceProto.drawGL = function (glw)
	{
		if (this.tilewidth <= 0 || this.tileheight <= 0)
			return;
		this.type.maybeCutTiles(this.tilewidth, this.tileheight, this.tilexoffset, this.tileyoffset, this.tilexspacing, this.tileyspacing, this.seamless);
		if (this.width !== this.lastwidth || this.height !== this.lastheight)
		{
			this.physics_changed = true;
			this.setAllQuadMapChanged();
			this.maybeBuildAllQuadMap();
			this.lastwidth = this.width;
			this.lastheight = this.height;
		}
		glw.setOpacity(this.opacity);
		var cut_tiles = this.type.cut_tiles;
		var layer = this.layer;
		var viewLeft = layer.viewLeft;
		var viewTop = layer.viewTop;
		var viewRight = layer.viewRight;
		var viewBottom = layer.viewBottom;
		var myx = this.x;
		var myy = this.y;
		var qrc;
		if (this.runtime.pixel_rounding)
		{
			myx = (myx + 0.5) | 0;
			myy = (myy + 0.5) | 0;
		}
		var cellWidthPx = this.cellwidth * this.tilewidth;
		var cellHeightPx = this.cellheight * this.tileheight;
		var firstCellX = Math.floor((viewLeft - myx) / cellWidthPx);
		var lastCellX = Math.floor((viewRight - myx) / cellWidthPx);
		var firstCellY = Math.floor((viewTop - myy) / cellHeightPx);
		var lastCellY = Math.floor((viewBottom - myy) / cellHeightPx);
		var i, len, q, qleft, qtop, qright, qbottom;
		var qtlx, qtly, qtrx, qtry, qbrx, qbry, qblx, qbly, temp;
		var cx, cy, cell;
		for (cx = firstCellX; cx <= lastCellX; ++cx)
		{
			for (cy = firstCellY; cy <= lastCellY; ++cy)
			{
				cell = this.cellAtIndex(cx, cy);
				if (!cell)
					continue;
				cell.maybeBuildQuadMap();
				for (i = 0, len = cell.quads.length; i < len; ++i)
				{
					q = cell.quads[i];
					if (q.id === -1)
						continue;
					qrc = q.rc;
					qleft = qrc.left + myx;
					qtop = qrc.top + myy;
					qright = qrc.right + myx;
					qbottom = qrc.bottom + myy;
					if (qleft > viewRight || qright < viewLeft || qtop > viewBottom || qbottom < viewTop)
						continue;
					glw.setTexture(cut_tiles[q.tileid]);
					tmp_rect.right = (qright - qleft) / this.tilewidth;
					tmp_rect.bottom = (qbottom - qtop) / this.tileheight;
					if (q.any_flip)
					{
						if (q.diag_flip)
						{
							temp = tmp_rect.right;
							tmp_rect.right = tmp_rect.bottom;
							tmp_rect.bottom = temp;
						}
						qtlx = 0;
						qtly = 0;
						qtrx = tmp_rect.right;
						qtry = 0;
						qbrx = tmp_rect.right;
						qbry = tmp_rect.bottom;
						qblx = 0;
						qbly = tmp_rect.bottom;
						if (q.diag_flip)
						{
							temp = qblx;		qblx = qtrx;		qtrx = temp;
							temp = qbly;		qbly = qtry;		qtry = temp;
						}
						if (q.horiz_flip)
						{
							temp = qtlx;		qtlx = qtrx;		qtrx = temp;
							temp = qtly;		qtly = qtry;		qtry = temp;
							temp = qblx;		qblx = qbrx;		qbrx = temp;
							temp = qbly;		qbly = qbry;		qbry = temp;
						}
						if (q.vert_flip)
						{
							temp = qtlx;		qtlx = qblx;		qblx = temp;
							temp = qtly;		qtly = qbly;		qbly = temp;
							temp = qtrx;		qtrx = qbrx;		qbrx = temp;
							temp = qtry;		qtry = qbry;		qbry = temp;
						}
						glw.quadTexUV(qleft, qtop, qright, qtop, qright, qbottom, qleft, qbottom, qtlx, qtly, qtrx, qtry, qbrx, qbry, qblx, qbly);
					}
					else
					{
						glw.quadTex(qleft, qtop, qright, qtop, qright, qbottom, qleft, qbottom, tmp_rect);
					}
				}
			}
		}
	};
	function Cnds() {};
	Cnds.prototype.CompareTileAt = function (tx, ty, cmp, t)
	{
		var tile = this.getTileAt(tx, ty);
		if (tile !== -1)
			tile = (tile & TILE_ID_MASK);
		return cr.do_cmp(tile, cmp, t);
	};
	function StateComboToFlags(state)
	{
		switch (state) {
		case 0:		// normal
			return 0;
		case 1:		// flipped horizontal
			return TILE_FLIPPED_HORIZONTAL;
		case 2:		// flipped vertical
			return TILE_FLIPPED_VERTICAL;
		case 3:		// rotated 90
			return TILE_FLIPPED_HORIZONTAL | TILE_FLIPPED_DIAGONAL;
		case 4:		// rotated 180
			return TILE_FLIPPED_HORIZONTAL | TILE_FLIPPED_VERTICAL;
		case 5:		// rotated 270
			return TILE_FLIPPED_VERTICAL | TILE_FLIPPED_DIAGONAL;
		case 6:		// rotated 90, flipped vertical
			return TILE_FLIPPED_HORIZONTAL | TILE_FLIPPED_VERTICAL | TILE_FLIPPED_DIAGONAL;
		case 7:		// rotated 270, flipped vertical
			return TILE_FLIPPED_DIAGONAL;
		default:
			return 0;
		}
	};
	Cnds.prototype.CompareTileStateAt = function (tx, ty, state)
	{
		var tile = this.getTileAt(tx, ty);
		var flags = 0;
		if (tile !== -1)
			flags = (tile & TILE_FLAGS_MASK);
		return flags === StateComboToFlags(state);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.EraseTile = function (tx, ty)
	{
		this.maybeResizeTilemap();
		this.setTileAt(tx, ty, -1);
	};
	Acts.prototype.SetTile = function (tx, ty, t, state)
	{
		this.maybeResizeTilemap();
		this.setTileAt(tx, ty, (t & TILE_ID_MASK) | StateComboToFlags(state));
	};
	Acts.prototype.SetTileState = function (tx, ty, state)
	{
		var t = this.getTileAt(tx, ty);
		if (t !== -1)
		{
			this.maybeResizeTilemap();
			this.setTileAt(tx, ty, (t & TILE_ID_MASK) | StateComboToFlags(state));
		}
	};
	Acts.prototype.EraseTileRange = function (tx, ty, tw, th)
	{
		var fromx = Math.floor(cr.max(tx, 0));
		var fromy = Math.floor(cr.max(ty, 0));
		var tox = Math.floor(cr.min(tx + tw, this.mapwidth));
		var toy = Math.floor(cr.min(ty + th, this.mapheight));
		var x, y;
		for (y = fromy; y < toy; ++y)
		{
			for (x = fromx; x < tox; ++x)
			{
				this.setTileAt(x, y, -1);
			}
		}
	};
	Acts.prototype.SetTileRange = function (tx, ty, tw, th, t, state)
	{
		this.maybeResizeTilemap();
		var fromx = Math.floor(cr.max(tx, 0));
		var fromy = Math.floor(cr.max(ty, 0));
		var tox = Math.floor(cr.min(tx + tw, this.mapwidth));
		var toy = Math.floor(cr.min(ty + th, this.mapheight));
		var settile = (t & TILE_ID_MASK) | StateComboToFlags(state);
		var x, y;
		for (y = fromy; y < toy; ++y)
		{
			for (x = fromx; x < tox; ++x)
			{
				this.setTileAt(x, y, settile);
			}
		}
	};
	Acts.prototype.SetTileStateRange = function (tx, ty, tw, th, state)
	{
		this.maybeResizeTilemap();
		var fromx = Math.floor(cr.max(tx, 0));
		var fromy = Math.floor(cr.max(ty, 0));
		var tox = Math.floor(cr.min(tx + tw, this.mapwidth));
		var toy = Math.floor(cr.min(ty + th, this.mapheight));
		var setstate = StateComboToFlags(state);
		var x, y, t;
		for (y = fromy; y < toy; ++y)
		{
			for (x = fromx; x < tox; ++x)
			{
				t = this.getTileAt(x, y);
				if (t !== -1)
					this.setTileAt(x, y, (t & TILE_ID_MASK) | setstate);
			}
		}
	};
	Acts.prototype.LoadFromJSON = function (str)
	{
		var o;
		try {
			o = JSON.parse(str);
		}
		catch (e) {
			return;
		}
		if (!o["c2tilemap"])
			return;		// not a known tilemap data format
		this.mapwidth = o["width"];
		this.mapheight = o["height"];
		this.setTilesFromRLECSV(o["data"]);
		this.setAllQuadMapChanged();
		this.physics_changed = true;
	};
	Acts.prototype.JSONDownload = function (filename)
	{
		var a = document.createElement("a");
		var o = {
			"c2tilemap": true,
			"width": this.mapwidth,
			"height": this.mapheight,
			"data": this.getTilesAsRLECSV()
		};
		if (typeof a.download === "undefined")
		{
			var str = 'data:text/html,' + encodeURIComponent("<p><a download='data.json' href=\"data:application/json,"
				+ encodeURIComponent(JSON.stringify(o))
				+ "\">Download link</a></p>");
			window.open(str);
		}
		else
		{
			var body = document.getElementsByTagName("body")[0];
			a.textContent = filename;
			a.href = "data:application/json," + encodeURIComponent(JSON.stringify(o));
			a.download = filename;
			body.appendChild(a);
			var clickEvent = document.createEvent("MouseEvent");
			clickEvent.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			a.dispatchEvent(clickEvent);
			body.removeChild(a);
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.TileAt = function (ret, tx, ty)
	{
		var tile = this.getTileAt(tx, ty);
		ret.set_int(tile === -1 ? -1 : (tile & TILE_ID_MASK));
	};
	Exps.prototype.PositionToTileX = function (ret, x_)
	{
		ret.set_float(Math.floor((x_ - this.x) / this.tilewidth));
	};
	Exps.prototype.PositionToTileY = function (ret, y_)
	{
		ret.set_float(Math.floor((y_ - this.y) / this.tileheight));
	};
	Exps.prototype.TileToPositionX = function (ret, x_)
	{
		ret.set_float((x_ * this.tilewidth) + this.x + (this.tilewidth / 2));
	};
	Exps.prototype.TileToPositionY = function (ret, y_)
	{
		ret.set_float((y_ * this.tileheight) + this.y + (this.tileheight / 2));
	};
	Exps.prototype.SnapX = function (ret, x_)
	{
		ret.set_float((Math.floor((x_ - this.x) / this.tilewidth) * this.tilewidth) + this.x + (this.tilewidth / 2));
	};
	Exps.prototype.SnapY = function (ret, y_)
	{
		ret.set_float((Math.floor((y_ - this.y) / this.tileheight) * this.tileheight) + this.y + (this.tileheight / 2));
	};
	Exps.prototype.TilesJSON = function (ret)
	{
		ret.set_string(JSON.stringify({
			"c2tilemap": true,
			"width": this.mapwidth,
			"height": this.mapheight,
			"data": this.getTilesAsRLECSV()
		}));
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Touch = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Touch.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.touches = [];
		this.mouseDown = false;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var dummyoffset = {left: 0, top: 0};
	instanceProto.findTouch = function (id)
	{
		var i, len;
		for (i = 0, len = this.touches.length; i < len; i++)
		{
			if (this.touches[i]["id"] === id)
				return i;
		}
		return -1;
	};
	var appmobi_accx = 0;
	var appmobi_accy = 0;
	var appmobi_accz = 0;
	function AppMobiGetAcceleration(evt)
	{
		appmobi_accx = evt.x;
		appmobi_accy = evt.y;
		appmobi_accz = evt.z;
	};
	var pg_accx = 0;
	var pg_accy = 0;
	var pg_accz = 0;
	function PhoneGapGetAcceleration(evt)
	{
		pg_accx = evt.x;
		pg_accy = evt.y;
		pg_accz = evt.z;
	};
	var theInstance = null;
	var touchinfo_cache = [];
	function AllocTouchInfo(x, y, id, index)
	{
		var ret;
		if (touchinfo_cache.length)
			ret = touchinfo_cache.pop();
		else
			ret = new TouchInfo();
		ret.init(x, y, id, index);
		return ret;
	};
	function ReleaseTouchInfo(ti)
	{
		if (touchinfo_cache.length < 100)
			touchinfo_cache.push(ti);
	};
	var GESTURE_HOLD_THRESHOLD = 15;		// max px motion for hold gesture to register
	var GESTURE_HOLD_TIMEOUT = 500;			// time for hold gesture to register
	var GESTURE_TAP_TIMEOUT = 333;			// time for tap gesture to register
	var GESTURE_DOUBLETAP_THRESHOLD = 25;	// max distance apart for taps to be
	function TouchInfo()
	{
		this.starttime = 0;
		this.time = 0;
		this.lasttime = 0;
		this.startx = 0;
		this.starty = 0;
		this.x = 0;
		this.y = 0;
		this.lastx = 0;
		this.lasty = 0;
		this["id"] = 0;
		this.startindex = 0;
		this.triggeredHold = false;
		this.tooFarForHold = false;
	};
	TouchInfo.prototype.init = function (x, y, id, index)
	{
		var nowtime = cr.performance_now();
		this.time = nowtime;
		this.lasttime = nowtime;
		this.starttime = nowtime;
		this.startx = x;
		this.starty = y;
		this.x = x;
		this.y = y;
		this.lastx = x;
		this.lasty = y;
		this["id"] = id;
		this.startindex = index;
		this.triggeredHold = false;
		this.tooFarForHold = false;
	};
	TouchInfo.prototype.update = function (nowtime, x, y)
	{
		this.lasttime = this.time;
		this.time = nowtime;
		this.lastx = this.x;
		this.lasty = this.y;
		this.x = x;
		this.y = y;
		if (!this.tooFarForHold && cr.distanceTo(this.startx, this.starty, this.x, this.y) >= GESTURE_HOLD_THRESHOLD)
		{
			this.tooFarForHold = true;
		}
	};
	TouchInfo.prototype.maybeTriggerHold = function (inst, index)
	{
		if (this.triggeredHold)
			return;		// already triggered this gesture
		var nowtime = cr.performance_now();
		if (nowtime - this.starttime >= GESTURE_HOLD_TIMEOUT && !this.tooFarForHold && cr.distanceTo(this.startx, this.starty, this.x, this.y) < GESTURE_HOLD_THRESHOLD)
		{
			this.triggeredHold = true;
			inst.trigger_index = this.startindex;
			inst.trigger_id = this["id"];
			inst.getTouchIndex = index;
			inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnHoldGesture, inst);
			inst.curTouchX = this.x;
			inst.curTouchY = this.y;
			inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnHoldGestureObject, inst);
			inst.getTouchIndex = 0;
		}
	};
	var lastTapX = -1000;
	var lastTapY = -1000;
	var lastTapTime = -10000;
	TouchInfo.prototype.maybeTriggerTap = function (inst, index)
	{
		if (this.triggeredHold)
			return;
		var nowtime = cr.performance_now();
		if (nowtime - this.starttime <= GESTURE_TAP_TIMEOUT && !this.tooFarForHold && cr.distanceTo(this.startx, this.starty, this.x, this.y) < GESTURE_HOLD_THRESHOLD)
		{
			inst.trigger_index = this.startindex;
			inst.trigger_id = this["id"];
			inst.getTouchIndex = index;
			if ((nowtime - lastTapTime <= GESTURE_TAP_TIMEOUT * 2) && cr.distanceTo(lastTapX, lastTapY, this.x, this.y) < GESTURE_DOUBLETAP_THRESHOLD)
			{
				inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnDoubleTapGesture, inst);
				inst.curTouchX = this.x;
				inst.curTouchY = this.y;
				inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnDoubleTapGestureObject, inst);
				lastTapX = -1000;
				lastTapY = -1000;
				lastTapTime = -10000;
			}
			else
			{
				inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTapGesture, inst);
				inst.curTouchX = this.x;
				inst.curTouchY = this.y;
				inst.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTapGestureObject, inst);
				lastTapX = this.x;
				lastTapY = this.y;
				lastTapTime = nowtime;
			}
			inst.getTouchIndex = 0;
		}
	};
	instanceProto.onCreate = function()
	{
		theInstance = this;
		this.isWindows8 = !!(typeof window["c2isWindows8"] !== "undefined" && window["c2isWindows8"]);
		this.orient_alpha = 0;
		this.orient_beta = 0;
		this.orient_gamma = 0;
		this.acc_g_x = 0;
		this.acc_g_y = 0;
		this.acc_g_z = 0;
		this.acc_x = 0;
		this.acc_y = 0;
		this.acc_z = 0;
		this.curTouchX = 0;
		this.curTouchY = 0;
		this.trigger_index = 0;
		this.trigger_id = 0;
		this.getTouchIndex = 0;
		this.useMouseInput = (this.properties[0] !== 0);
		var elem = (this.runtime.fullscreen_mode > 0) ? document : this.runtime.canvas;
		var elem2 = document;
		if (this.runtime.isDirectCanvas)
			elem2 = elem = window["Canvas"];
		else if (this.runtime.isCocoonJs)
			elem2 = elem = window;
		var self = this;
		if (window.navigator["pointerEnabled"])
		{
			elem.addEventListener("pointerdown",
				function(info) {
					self.onPointerStart(info);
				},
				false
			);
			elem.addEventListener("pointermove",
				function(info) {
					self.onPointerMove(info);
				},
				false
			);
			elem2.addEventListener("pointerup",
				function(info) {
					self.onPointerEnd(info, false);
				},
				false
			);
			elem2.addEventListener("pointercancel",
				function(info) {
					self.onPointerEnd(info, true);
				},
				false
			);
			if (this.runtime.canvas)
			{
				this.runtime.canvas.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
				document.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
				this.runtime.canvas.addEventListener("gesturehold", function(e) {
					e.preventDefault();
				}, false);
				document.addEventListener("gesturehold", function(e) {
					e.preventDefault();
				}, false);
			}
		}
		else if (window.navigator["msPointerEnabled"])
		{
			elem.addEventListener("MSPointerDown",
				function(info) {
					self.onPointerStart(info);
				},
				false
			);
			elem.addEventListener("MSPointerMove",
				function(info) {
					self.onPointerMove(info);
				},
				false
			);
			elem2.addEventListener("MSPointerUp",
				function(info) {
					self.onPointerEnd(info, false);
				},
				false
			);
			elem2.addEventListener("MSPointerCancel",
				function(info) {
					self.onPointerEnd(info, true);
				},
				false
			);
			if (this.runtime.canvas)
			{
				this.runtime.canvas.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
				document.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
			}
		}
		else
		{
			elem.addEventListener("touchstart",
				function(info) {
					self.onTouchStart(info);
				},
				false
			);
			elem.addEventListener("touchmove",
				function(info) {
					self.onTouchMove(info);
				},
				false
			);
			elem2.addEventListener("touchend",
				function(info) {
					self.onTouchEnd(info, false);
				},
				false
			);
			elem2.addEventListener("touchcancel",
				function(info) {
					self.onTouchEnd(info, true);
				},
				false
			);
		}
		if (this.isWindows8)
		{
			var win8accelerometerFn = function(e) {
					var reading = e["reading"];
					self.acc_x = reading["accelerationX"];
					self.acc_y = reading["accelerationY"];
					self.acc_z = reading["accelerationZ"];
				};
			var win8inclinometerFn = function(e) {
					var reading = e["reading"];
					self.orient_alpha = reading["yawDegrees"];
					self.orient_beta = reading["pitchDegrees"];
					self.orient_gamma = reading["rollDegrees"];
				};
			var accelerometer = Windows["Devices"]["Sensors"]["Accelerometer"]["getDefault"]();
            if (accelerometer)
			{
                accelerometer["reportInterval"] = Math.max(accelerometer["minimumReportInterval"], 16);
				accelerometer.addEventListener("readingchanged", win8accelerometerFn);
            }
			var inclinometer = Windows["Devices"]["Sensors"]["Inclinometer"]["getDefault"]();
			if (inclinometer)
			{
				inclinometer["reportInterval"] = Math.max(inclinometer["minimumReportInterval"], 16);
				inclinometer.addEventListener("readingchanged", win8inclinometerFn);
			}
			document.addEventListener("visibilitychange", function(e) {
				if (document["hidden"] || document["msHidden"])
				{
					if (accelerometer)
						accelerometer.removeEventListener("readingchanged", win8accelerometerFn);
					if (inclinometer)
						inclinometer.removeEventListener("readingchanged", win8inclinometerFn);
				}
				else
				{
					if (accelerometer)
						accelerometer.addEventListener("readingchanged", win8accelerometerFn);
					if (inclinometer)
						inclinometer.addEventListener("readingchanged", win8inclinometerFn);
				}
			}, false);
		}
		else
		{
			window.addEventListener("deviceorientation", function (eventData) {
				self.orient_alpha = eventData["alpha"] || 0;
				self.orient_beta = eventData["beta"] || 0;
				self.orient_gamma = eventData["gamma"] || 0;
			}, false);
			window.addEventListener("devicemotion", function (eventData) {
				if (eventData["accelerationIncludingGravity"])
				{
					self.acc_g_x = eventData["accelerationIncludingGravity"]["x"] || 0;
					self.acc_g_y = eventData["accelerationIncludingGravity"]["y"] || 0;
					self.acc_g_z = eventData["accelerationIncludingGravity"]["z"] || 0;
				}
				if (eventData["acceleration"])
				{
					self.acc_x = eventData["acceleration"]["x"] || 0;
					self.acc_y = eventData["acceleration"]["y"] || 0;
					self.acc_z = eventData["acceleration"]["z"] || 0;
				}
			}, false);
		}
		if (this.useMouseInput && !this.runtime.isDomFree)
		{
			jQuery(document).mousemove(
				function(info) {
					self.onMouseMove(info);
				}
			);
			jQuery(document).mousedown(
				function(info) {
					self.onMouseDown(info);
				}
			);
			jQuery(document).mouseup(
				function(info) {
					self.onMouseUp(info);
				}
			);
		}
		if (this.runtime.isAppMobi && !this.runtime.isDirectCanvas)
		{
			AppMobi["accelerometer"]["watchAcceleration"](AppMobiGetAcceleration, { "frequency": 40, "adjustForRotation": true });
		}
		if (this.runtime.isPhoneGap && navigator["accelerometer"] && navigator["accelerometer"]["watchAcceleration"])
		{
			navigator["accelerometer"]["watchAcceleration"](PhoneGapGetAcceleration, null, { "frequency": 40 });
		}
		this.runtime.tick2Me(this);
	};
	instanceProto.onPointerMove = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault)
			info.preventDefault();
		var i = this.findTouch(info["pointerId"]);
		var nowtime = cr.performance_now();
		if (i >= 0)
		{
			var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
			var t = this.touches[i];
			if (nowtime - t.time < 2)
				return;
			t.update(nowtime, info.pageX - offset.left, info.pageY - offset.top);
		}
	};
	instanceProto.onPointerStart = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault && cr.isCanvasInputEvent(info))
			info.preventDefault();
		var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
		var touchx = info.pageX - offset.left;
		var touchy = info.pageY - offset.top;
		var nowtime = cr.performance_now();
		this.trigger_index = this.touches.length;
		this.trigger_id = info["pointerId"];
		this.touches.push(AllocTouchInfo(touchx, touchy, info["pointerId"], this.trigger_index));
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchStart, this);
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchStart, this);
		this.curTouchX = touchx;
		this.curTouchY = touchy;
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchObject, this);
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.onPointerEnd = function (info, isCancel)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault && cr.isCanvasInputEvent(info))
			info.preventDefault();
		var i = this.findTouch(info["pointerId"]);
		this.trigger_index = (i >= 0 ? this.touches[i].startindex : -1);
		this.trigger_id = (i >= 0 ? this.touches[i]["id"] : -1);
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchEnd, this);
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchEnd, this);
		if (i >= 0)
		{
			if (!isCancel)
				this.touches[i].maybeTriggerTap(this, i);
			ReleaseTouchInfo(this.touches[i]);
			this.touches.splice(i, 1);
		}
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.onTouchMove = function (info)
	{
		if (info.preventDefault)
			info.preventDefault();
		var nowtime = cr.performance_now();
		var i, len, t, u;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			var j = this.findTouch(t["identifier"]);
			if (j >= 0)
			{
				var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
				u = this.touches[j];
				if (nowtime - u.time < 2)
					continue;
				u.update(nowtime, t.pageX - offset.left, t.pageY - offset.top);
			}
		}
	};
	instanceProto.onTouchStart = function (info)
	{
		if (info.preventDefault && cr.isCanvasInputEvent(info))
			info.preventDefault();
		var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
		var nowtime = cr.performance_now();
		this.runtime.isInUserInputEvent = true;
		var i, len, t, j;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			j = this.findTouch(t["identifier"]);
			if (j !== -1)
				continue;
			var touchx = t.pageX - offset.left;
			var touchy = t.pageY - offset.top;
			this.trigger_index = this.touches.length;
			this.trigger_id = t["identifier"];
			this.touches.push(AllocTouchInfo(touchx, touchy, t["identifier"], this.trigger_index));
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchStart, this);
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchStart, this);
			this.curTouchX = touchx;
			this.curTouchY = touchy;
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchObject, this);
		}
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.onTouchEnd = function (info, isCancel)
	{
		if (info.preventDefault && cr.isCanvasInputEvent(info))
			info.preventDefault();
		this.runtime.isInUserInputEvent = true;
		var i, len, t, j;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			j = this.findTouch(t["identifier"]);
			if (j >= 0)
			{
				this.trigger_index = this.touches[j].startindex;
				this.trigger_id = this.touches[j]["id"];
				this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchEnd, this);
				this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchEnd, this);
				if (!isCancel)
					this.touches[j].maybeTriggerTap(this, j);
				ReleaseTouchInfo(this.touches[j]);
				this.touches.splice(j, 1);
			}
		}
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.getAlpha = function ()
	{
		if (this.runtime.isAppMobi && this.orient_alpha === 0 && appmobi_accz !== 0)
			return appmobi_accz * 90;
		else if (this.runtime.isPhoneGap  && this.orient_alpha === 0 && pg_accz !== 0)
			return pg_accz * 90;
		else
			return this.orient_alpha;
	};
	instanceProto.getBeta = function ()
	{
		if (this.runtime.isAppMobi && this.orient_beta === 0 && appmobi_accy !== 0)
			return appmobi_accy * -90;
		else if (this.runtime.isPhoneGap  && this.orient_beta === 0 && pg_accy !== 0)
			return pg_accy * -90;
		else
			return this.orient_beta;
	};
	instanceProto.getGamma = function ()
	{
		if (this.runtime.isAppMobi && this.orient_gamma === 0 && appmobi_accx !== 0)
			return appmobi_accx * 90;
		else if (this.runtime.isPhoneGap  && this.orient_gamma === 0 && pg_accx !== 0)
			return pg_accx * 90;
		else
			return this.orient_gamma;
	};
	var noop_func = function(){};
	instanceProto.onMouseDown = function(info)
	{
		if (info.preventDefault && this.runtime.had_a_click && !this.runtime.isMobile)
			info.preventDefault();
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchStart(fakeinfo);
		this.mouseDown = true;
	};
	instanceProto.onMouseMove = function(info)
	{
		if (!this.mouseDown)
			return;
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchMove(fakeinfo);
	};
	instanceProto.onMouseUp = function(info)
	{
		if (info.preventDefault && this.runtime.had_a_click && !this.runtime.isMobile)
			info.preventDefault();
		this.runtime.had_a_click = true;
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchEnd(fakeinfo);
		this.mouseDown = false;
	};
	instanceProto.tick2 = function()
	{
		var i, len, t;
		var nowtime = cr.performance_now();
		for (i = 0, len = this.touches.length; i < len; ++i)
		{
			t = this.touches[i];
			if (t.time <= nowtime - 50)
				t.lasttime = nowtime;
			t.maybeTriggerHold(this, i);
		}
	};
	function Cnds() {};
	Cnds.prototype.OnTouchStart = function ()
	{
		return true;
	};
	Cnds.prototype.OnTouchEnd = function ()
	{
		return true;
	};
	Cnds.prototype.IsInTouch = function ()
	{
		return this.touches.length;
	};
	Cnds.prototype.OnTouchObject = function (type)
	{
		if (!type)
			return false;
		return this.runtime.testAndSelectCanvasPointOverlap(type, this.curTouchX, this.curTouchY, false);
	};
	var touching = [];
	Cnds.prototype.IsTouchingObject = function (type)
	{
		if (!type)
			return false;
		var sol = type.getCurrentSol();
		var instances = sol.getObjects();
		var px, py;
		var i, leni, j, lenj;
		for (i = 0, leni = instances.length; i < leni; i++)
		{
			var inst = instances[i];
			inst.update_bbox();
			for (j = 0, lenj = this.touches.length; j < lenj; j++)
			{
				var touch = this.touches[j];
				px = inst.layer.canvasToLayer(touch.x, touch.y, true);
				py = inst.layer.canvasToLayer(touch.x, touch.y, false);
				if (inst.contains_pt(px, py))
				{
					touching.push(inst);
					break;
				}
			}
		}
		if (touching.length)
		{
			sol.select_all = false;
			cr.shallowAssignArray(sol.instances, touching);
			type.applySolToContainer();
			touching.length = 0;
			return true;
		}
		else
			return false;
	};
	Cnds.prototype.CompareTouchSpeed = function (index, cmp, s)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
			return false;
		var t = this.touches[index];
		var dist = cr.distanceTo(t.x, t.y, t.lastx, t.lasty);
		var timediff = (t.time - t.lasttime) / 1000;
		var speed = 0;
		if (timediff > 0)
			speed = dist / timediff;
		return cr.do_cmp(speed, cmp, s);
	};
	Cnds.prototype.OrientationSupported = function ()
	{
		return typeof window["DeviceOrientationEvent"] !== "undefined";
	};
	Cnds.prototype.MotionSupported = function ()
	{
		return typeof window["DeviceMotionEvent"] !== "undefined";
	};
	Cnds.prototype.CompareOrientation = function (orientation_, cmp_, angle_)
	{
		var v = 0;
		if (orientation_ === 0)
			v = this.getAlpha();
		else if (orientation_ === 1)
			v = this.getBeta();
		else
			v = this.getGamma();
		return cr.do_cmp(v, cmp_, angle_);
	};
	Cnds.prototype.CompareAcceleration = function (acceleration_, cmp_, angle_)
	{
		var v = 0;
		if (acceleration_ === 0)
			v = this.acc_g_x;
		else if (acceleration_ === 1)
			v = this.acc_g_y;
		else if (acceleration_ === 2)
			v = this.acc_g_z;
		else if (acceleration_ === 3)
			v = this.acc_x;
		else if (acceleration_ === 4)
			v = this.acc_y;
		else if (acceleration_ === 5)
			v = this.acc_z;
		return cr.do_cmp(v, cmp_, angle_);
	};
	Cnds.prototype.OnNthTouchStart = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return touch_ === this.trigger_index;
	};
	Cnds.prototype.OnNthTouchEnd = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return touch_ === this.trigger_index;
	};
	Cnds.prototype.HasNthTouch = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return this.touches.length >= touch_ + 1;
	};
	Cnds.prototype.OnHoldGesture = function ()
	{
		return true;
	};
	Cnds.prototype.OnTapGesture = function ()
	{
		return true;
	};
	Cnds.prototype.OnDoubleTapGesture = function ()
	{
		return true;
	};
	Cnds.prototype.OnHoldGestureObject = function (type)
	{
		if (!type)
			return false;
		return this.runtime.testAndSelectCanvasPointOverlap(type, this.curTouchX, this.curTouchY, false);
	};
	Cnds.prototype.OnTapGestureObject = function (type)
	{
		if (!type)
			return false;
		return this.runtime.testAndSelectCanvasPointOverlap(type, this.curTouchX, this.curTouchY, false);
	};
	Cnds.prototype.OnDoubleTapGestureObject = function (type)
	{
		if (!type)
			return false;
		return this.runtime.testAndSelectCanvasPointOverlap(type, this.curTouchX, this.curTouchY, false);
	};
	pluginProto.cnds = new Cnds();
	function Exps() {};
	Exps.prototype.TouchCount = function (ret)
	{
		ret.set_int(this.touches.length);
	};
	Exps.prototype.X = function (ret, layerparam)
	{
		var index = this.getTouchIndex;
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.XAt = function (ret, index, layerparam)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.XForID = function (ret, id, layerparam)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(touch.x, touch.y, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(touch.x, touch.y, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.Y = function (ret, layerparam)
	{
		var index = this.getTouchIndex;
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.YAt = function (ret, index, layerparam)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.YForID = function (ret, id, layerparam)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(touch.x, touch.y, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(touch.x, touch.y, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.AbsoluteX = function (ret)
	{
		if (this.touches.length)
			ret.set_float(this.touches[0].x);
		else
			ret.set_float(0);
	};
	Exps.prototype.AbsoluteXAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		ret.set_float(this.touches[index].x);
	};
	Exps.prototype.AbsoluteXForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(touch.x);
	};
	Exps.prototype.AbsoluteY = function (ret)
	{
		if (this.touches.length)
			ret.set_float(this.touches[0].y);
		else
			ret.set_float(0);
	};
	Exps.prototype.AbsoluteYAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		ret.set_float(this.touches[index].y);
	};
	Exps.prototype.AbsoluteYForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(touch.y);
	};
	Exps.prototype.SpeedAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var t = this.touches[index];
		var dist = cr.distanceTo(t.x, t.y, t.lastx, t.lasty);
		var timediff = (t.time - t.lasttime) / 1000;
		if (timediff === 0)
			ret.set_float(0);
		else
			ret.set_float(dist / timediff);
	};
	Exps.prototype.SpeedForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var dist = cr.distanceTo(touch.x, touch.y, touch.lastx, touch.lasty);
		var timediff = (touch.time - touch.lasttime) / 1000;
		if (timediff === 0)
			ret.set_float(0);
		else
			ret.set_float(dist / timediff);
	};
	Exps.prototype.AngleAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var t = this.touches[index];
		ret.set_float(cr.to_degrees(cr.angleTo(t.lastx, t.lasty, t.x, t.y)));
	};
	Exps.prototype.AngleForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(cr.to_degrees(cr.angleTo(touch.lastx, touch.lasty, touch.x, touch.y)));
	};
	Exps.prototype.Alpha = function (ret)
	{
		ret.set_float(this.getAlpha());
	};
	Exps.prototype.Beta = function (ret)
	{
		ret.set_float(this.getBeta());
	};
	Exps.prototype.Gamma = function (ret)
	{
		ret.set_float(this.getGamma());
	};
	Exps.prototype.AccelerationXWithG = function (ret)
	{
		ret.set_float(this.acc_g_x);
	};
	Exps.prototype.AccelerationYWithG = function (ret)
	{
		ret.set_float(this.acc_g_y);
	};
	Exps.prototype.AccelerationZWithG = function (ret)
	{
		ret.set_float(this.acc_g_z);
	};
	Exps.prototype.AccelerationX = function (ret)
	{
		ret.set_float(this.acc_x);
	};
	Exps.prototype.AccelerationY = function (ret)
	{
		ret.set_float(this.acc_y);
	};
	Exps.prototype.AccelerationZ = function (ret)
	{
		ret.set_float(this.acc_z);
	};
	Exps.prototype.TouchIndex = function (ret)
	{
		ret.set_int(this.trigger_index);
	};
	Exps.prototype.TouchID = function (ret)
	{
		ret.set_float(this.trigger_id);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.behaviors.Bullet = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Bullet.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		var speed = this.properties[0];
		this.acc = this.properties[1];
		this.g = this.properties[2];
		this.bounceOffSolid = (this.properties[3] !== 0);
		this.setAngle = (this.properties[4] !== 0);
		this.dx = Math.cos(this.inst.angle) * speed;
		this.dy = Math.sin(this.inst.angle) * speed;
		this.lastx = this.inst.x;
		this.lasty = this.inst.y;
		this.lastKnownAngle = this.inst.angle;
		this.travelled = 0;
		this.enabled = (this.properties[5] !== 0);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"acc": this.acc,
			"g": this.g,
			"dx": this.dx,
			"dy": this.dy,
			"lx": this.lastx,
			"ly": this.lasty,
			"lka": this.lastKnownAngle,
			"t": this.travelled,
			"e": this.enabled
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.acc = o["acc"];
		this.g = o["g"];
		this.dx = o["dx"];
		this.dy = o["dy"];
		this.lastx = o["lx"];
		this.lasty = o["ly"];
		this.lastKnownAngle = o["lka"];
		this.travelled = o["t"];
		this.enabled = o["e"];
	};
	behinstProto.tick = function ()
	{
		if (!this.enabled)
			return;
		var dt = this.runtime.getDt(this.inst);
		var s, a;
		var bounceSolid, bounceAngle;
		if (this.inst.angle !== this.lastKnownAngle)
		{
			if (this.setAngle)
			{
				s = cr.distanceTo(0, 0, this.dx, this.dy);
				this.dx = Math.cos(this.inst.angle) * s;
				this.dy = Math.sin(this.inst.angle) * s;
			}
			this.lastKnownAngle = this.inst.angle;
		}
		if (this.acc !== 0)
		{
			s = cr.distanceTo(0, 0, this.dx, this.dy);
			if (this.dx === 0 && this.dy === 0)
				a = this.inst.angle;
			else
				a = cr.angleTo(0, 0, this.dx, this.dy);
			s += this.acc * dt;
			if (s < 0)
				s = 0;
			this.dx = Math.cos(a) * s;
			this.dy = Math.sin(a) * s;
		}
		if (this.g !== 0)
			this.dy += this.g * dt;
		this.lastx = this.inst.x;
		this.lasty = this.inst.y;
		if (this.dx !== 0 || this.dy !== 0)
		{
			this.inst.x += this.dx * dt;
			this.inst.y += this.dy * dt;
			this.travelled += cr.distanceTo(0, 0, this.dx * dt, this.dy * dt)
			if (this.setAngle)
			{
				this.inst.angle = cr.angleTo(0, 0, this.dx, this.dy);
				this.inst.set_bbox_changed();
				this.lastKnownAngle = this.inst.angle;
			}
			this.inst.set_bbox_changed();
			if (this.bounceOffSolid)
			{
				bounceSolid = this.runtime.testOverlapSolid(this.inst);
				if (bounceSolid)
				{
					this.runtime.registerCollision(this.inst, bounceSolid);
					s = cr.distanceTo(0, 0, this.dx, this.dy);
					bounceAngle = this.runtime.calculateSolidBounceAngle(this.inst, this.lastx, this.lasty);
					this.dx = Math.cos(bounceAngle) * s;
					this.dy = Math.sin(bounceAngle) * s;
					this.inst.x += this.dx * dt;			// move out for one tick since the object can't have spent a tick in the solid
					this.inst.y += this.dy * dt;
					this.inst.set_bbox_changed();
					if (this.setAngle)
					{
						this.inst.angle = bounceAngle;
						this.lastKnownAngle = bounceAngle;
						this.inst.set_bbox_changed();
					}
					if (!this.runtime.pushOutSolid(this.inst, this.dx / s, this.dy / s, Math.max(s * 2.5 * dt, 30)))
						this.runtime.pushOutSolidNearest(this.inst, 100);
				}
			}
		}
	};
	function Cnds() {};
	Cnds.prototype.CompareSpeed = function (cmp, s)
	{
		return cr.do_cmp(cr.distanceTo(0, 0, this.dx, this.dy), cmp, s);
	};
	Cnds.prototype.CompareTravelled = function (cmp, d)
	{
		return cr.do_cmp(this.travelled, cmp, d);
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetSpeed = function (s)
	{
		var a = cr.angleTo(0, 0, this.dx, this.dy);
		this.dx = Math.cos(a) * s;
		this.dy = Math.sin(a) * s;
	};
	Acts.prototype.SetAcceleration = function (a)
	{
		this.acc = a;
	};
	Acts.prototype.SetGravity = function (g)
	{
		this.g = g;
	};
	Acts.prototype.SetAngleOfMotion = function (a)
	{
		a = cr.to_radians(a);
		var s = cr.distanceTo(0, 0, this.dx, this.dy)
		this.dx = Math.cos(a) * s;
		this.dy = Math.sin(a) * s;
	};
	Acts.prototype.Bounce = function (objtype)
	{
		if (!objtype)
			return;
		var otherinst = objtype.getFirstPicked(this.inst);
		if (!otherinst)
			return;
		var dt = this.runtime.getDt(this.inst);
		var s = cr.distanceTo(0, 0, this.dx, this.dy);
		var bounceAngle = this.runtime.calculateSolidBounceAngle(this.inst, this.lastx, this.lasty, otherinst);
		this.dx = Math.cos(bounceAngle) * s;
		this.dy = Math.sin(bounceAngle) * s;
		this.inst.x += this.dx * dt;			// move out for one tick since the object can't have spent a tick in the solid
		this.inst.y += this.dy * dt;
		this.inst.set_bbox_changed();
		if (this.setAngle)
		{
			this.inst.angle = bounceAngle;
			this.lastKnownAngle = bounceAngle;
			this.inst.set_bbox_changed();
		}
		if (this.bounceOffSolid)
		{
			if (!this.runtime.pushOutSolid(this.inst, this.dx / s, this.dy / s, Math.max(s * 2.5 * dt, 30)))
				this.runtime.pushOutSolidNearest(this.inst, 100);
		}
		else
		{
			this.runtime.pushOut(this.inst, this.dx / s, this.dy / s, Math.max(s * 2.5 * dt, 30), otherinst)
		}
	};
	Acts.prototype.SetEnabled = function (en)
	{
		this.enabled = (en === 1);
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Speed = function (ret)
	{
		var s = cr.distanceTo(0, 0, this.dx, this.dy);
		s = cr.round6dp(s);
		ret.set_float(s);
	};
	Exps.prototype.Acceleration = function (ret)
	{
		ret.set_float(this.acc);
	};
	Exps.prototype.AngleOfMotion = function (ret)
	{
		ret.set_float(cr.to_degrees(cr.angleTo(0, 0, this.dx, this.dy)));
	};
	Exps.prototype.DistanceTravelled = function (ret)
	{
		ret.set_float(this.travelled);
	};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Fade = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Fade.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		var active_at_start = this.properties[0] === 1;
		this.fadeInTime = this.properties[1];
		this.waitTime = this.properties[2];
		this.fadeOutTime = this.properties[3];
		this.destroy = this.properties[4];			// 0 = no, 1 = after fade out
		this.stage = active_at_start ? 0 : 3;		// 0 = fade in, 1 = wait, 2 = fade out, 3 = done
		if (this.recycled)
			this.stageTime.reset();
		else
			this.stageTime = new cr.KahanAdder();
		this.maxOpacity = (this.inst.opacity ? this.inst.opacity : 1.0);
		if (active_at_start)
		{
			if (this.fadeInTime === 0)
			{
				this.stage = 1;
				if (this.waitTime === 0)
					this.stage = 2;
			}
			else
			{
				this.inst.opacity = 0;
				this.runtime.redraw = true;
			}
		}
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"fit": this.fadeInTime,
			"wt": this.waitTime,
			"fot": this.fadeOutTime,
			"s": this.stage,
			"st": this.stageTime.sum,
			"mo": this.maxOpacity,
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.fadeInTime = o["fit"];
		this.waitTime = o["wt"];
		this.fadeOutTime = o["fot"];
		this.stage = o["s"];
		this.stageTime.reset();
		this.stageTime.sum = o["st"];
		this.maxOpacity = o["mo"];
	};
	behinstProto.tick = function ()
	{
		this.stageTime.add(this.runtime.getDt(this.inst));
		if (this.stage === 0)
		{
			this.inst.opacity = (this.stageTime.sum / this.fadeInTime) * this.maxOpacity;
			this.runtime.redraw = true;
			if (this.inst.opacity >= this.maxOpacity)
			{
				this.inst.opacity = this.maxOpacity;
				this.stage = 1;	// wait stage
				this.stageTime.reset();
			}
		}
		if (this.stage === 1)
		{
			if (this.stageTime.sum >= this.waitTime)
			{
				this.stage = 2;	// fade out stage
				this.stageTime.reset();
			}
		}
		if (this.stage === 2)
		{
			if (this.fadeOutTime !== 0)
			{
				this.inst.opacity = this.maxOpacity - ((this.stageTime.sum / this.fadeOutTime) * this.maxOpacity);
				this.runtime.redraw = true;
				if (this.inst.opacity < 0)
				{
					this.inst.opacity = 0;
					this.stage = 3;	// done
					this.stageTime.reset();
					this.runtime.trigger(cr.behaviors.Fade.prototype.cnds.OnFadeOutEnd, this.inst);
					if (this.destroy === 1)
						this.runtime.DestroyInstance(this.inst);
				}
			}
		}
	};
	behinstProto.doStart = function ()
	{
		this.stage = 0;
		this.stageTime.reset();
		if (this.fadeInTime === 0)
		{
			this.stage = 1;
			if (this.waitTime === 0)
				this.stage = 2;
		}
		else
		{
			this.inst.opacity = 0;
			this.runtime.redraw = true;
		}
	};
	function Cnds() {};
	Cnds.prototype.OnFadeOutEnd = function ()
	{
		return true;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.StartFade = function ()
	{
		if (this.stage === 3)
			this.doStart();
	};
	Acts.prototype.RestartFade = function ()
	{
		this.doStart();
	};
	behaviorProto.acts = new Acts();
}());
;
;
cr.behaviors.Flash = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Flash.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.ontime = 0;
		this.offtime = 0;
		this.stage = 0;			// 0 = on, 1 = off
		this.stagetimeleft = 0;
		this.timeleft = 0;
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"ontime": this.ontime,
			"offtime": this.offtime,
			"stage": this.stage,
			"stagetimeleft": this.stagetimeleft,
			"timeleft": this.timeleft
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.ontime = o["ontime"];
		this.offtime = o["offtime"];
		this.stage = o["stage"];
		this.stagetimeleft = o["stagetimeleft"];
		this.timeleft = o["timeleft"];
	};
	behinstProto.tick = function ()
	{
		if (this.timeleft <= 0)
			return;		// not flashing
		var dt = this.runtime.getDt(this.inst);
		this.timeleft -= dt;
		if (this.timeleft <= 0)
		{
			this.timeleft = 0;
			this.inst.visible = true;
			this.runtime.redraw = true;
			this.runtime.trigger(cr.behaviors.Flash.prototype.cnds.OnFlashEnded, this.inst);
			return;
		}
		this.stagetimeleft -= dt;
		if (this.stagetimeleft <= 0)
		{
			if (this.stage === 0)
			{
				this.inst.visible = false;
				this.stage = 1;
				this.stagetimeleft += this.offtime;
			}
			else
			{
				this.inst.visible = true;
				this.stage = 0;
				this.stagetimeleft += this.ontime;
			}
			this.runtime.redraw = true;
		}
	};
	function Cnds() {};
	Cnds.prototype.IsFlashing = function ()
	{
		return this.timeleft > 0;
	};
	Cnds.prototype.OnFlashEnded = function ()
	{
		return true;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Flash = function (on_, off_, dur_)
	{
		this.ontime = on_;
		this.offtime = off_;
		this.stage = 1;		// always start off
		this.stagetimeleft = off_;
		this.timeleft = dur_;
		this.inst.visible = false;
		this.runtime.redraw = true;
	};
	Acts.prototype.StopFlashing = function ()
	{
		this.timeleft = 0;
		this.inst.visible = true;
		this.runtime.redraw = true;
		return;
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Pin = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Pin.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.pinObject = null;
		this.pinObjectUid = -1;		// for loading
		this.pinAngle = 0;
		this.pinDist = 0;
		this.myStartAngle = 0;
		this.theirStartAngle = 0;
		this.lastKnownAngle = 0;
		this.mode = 0;				// 0 = position & angle; 1 = position; 2 = angle; 3 = rope; 4 = bar
		var self = this;
		if (!this.recycled)
		{
			this.myDestroyCallback = (function(inst) {
													self.onInstanceDestroyed(inst);
												});
		}
		this.runtime.addDestroyCallback(this.myDestroyCallback);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"uid": this.pinObject ? this.pinObject.uid : -1,
			"pa": this.pinAngle,
			"pd": this.pinDist,
			"msa": this.myStartAngle,
			"tsa": this.theirStartAngle,
			"lka": this.lastKnownAngle,
			"m": this.mode
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.pinObjectUid = o["uid"];		// wait until afterLoad to look up
		this.pinAngle = o["pa"];
		this.pinDist = o["pd"];
		this.myStartAngle = o["msa"];
		this.theirStartAngle = o["tsa"];
		this.lastKnownAngle = o["lka"];
		this.mode = o["m"];
	};
	behinstProto.afterLoad = function ()
	{
		if (this.pinObjectUid === -1)
			this.pinObject = null;
		else
		{
			this.pinObject = this.runtime.getObjectByUID(this.pinObjectUid);
;
		}
		this.pinObjectUid = -1;
	};
	behinstProto.onInstanceDestroyed = function (inst)
	{
		if (this.pinObject == inst)
			this.pinObject = null;
	};
	behinstProto.onDestroy = function()
	{
		this.pinObject = null;
		this.runtime.removeDestroyCallback(this.myDestroyCallback);
	};
	behinstProto.tick = function ()
	{
	};
	behinstProto.tick2 = function ()
	{
		if (!this.pinObject)
			return;
		if (this.lastKnownAngle !== this.inst.angle)
			this.myStartAngle = cr.clamp_angle(this.myStartAngle + (this.inst.angle - this.lastKnownAngle));
		var newx = this.inst.x;
		var newy = this.inst.y;
		if (this.mode === 3 || this.mode === 4)		// rope mode or bar mode
		{
			var dist = cr.distanceTo(this.inst.x, this.inst.y, this.pinObject.x, this.pinObject.y);
			if ((dist > this.pinDist) || (this.mode === 4 && dist < this.pinDist))
			{
				var a = cr.angleTo(this.pinObject.x, this.pinObject.y, this.inst.x, this.inst.y);
				newx = this.pinObject.x + Math.cos(a) * this.pinDist;
				newy = this.pinObject.y + Math.sin(a) * this.pinDist;
			}
		}
		else
		{
			newx = this.pinObject.x + Math.cos(this.pinObject.angle + this.pinAngle) * this.pinDist;
			newy = this.pinObject.y + Math.sin(this.pinObject.angle + this.pinAngle) * this.pinDist;
		}
		var newangle = cr.clamp_angle(this.myStartAngle + (this.pinObject.angle - this.theirStartAngle));
		this.lastKnownAngle = newangle;
		if ((this.mode === 0 || this.mode === 1 || this.mode === 3 || this.mode === 4)
			&& (this.inst.x !== newx || this.inst.y !== newy))
		{
			this.inst.x = newx;
			this.inst.y = newy;
			this.inst.set_bbox_changed();
		}
		if ((this.mode === 0 || this.mode === 2) && (this.inst.angle !== newangle))
		{
			this.inst.angle = newangle;
			this.inst.set_bbox_changed();
		}
	};
	function Cnds() {};
	Cnds.prototype.IsPinned = function ()
	{
		return !!this.pinObject;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Pin = function (obj, mode_)
	{
		if (!obj)
			return;
		var otherinst = obj.getFirstPicked(this.inst);
		if (!otherinst)
			return;
		this.pinObject = otherinst;
		this.pinAngle = cr.angleTo(otherinst.x, otherinst.y, this.inst.x, this.inst.y) - otherinst.angle;
		this.pinDist = cr.distanceTo(otherinst.x, otherinst.y, this.inst.x, this.inst.y);
		this.myStartAngle = this.inst.angle;
		this.lastKnownAngle = this.inst.angle;
		this.theirStartAngle = otherinst.angle;
		this.mode = mode_;
	};
	Acts.prototype.Unpin = function ()
	{
		this.pinObject = null;
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.PinnedUID = function (ret)
	{
		ret.set_int(this.pinObject ? this.pinObject.uid : -1);
	};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Platform = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Platform.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	var ANIMMODE_STOPPED = 0;
	var ANIMMODE_MOVING = 1;
	var ANIMMODE_JUMPING = 2;
	var ANIMMODE_FALLING = 3;
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
		this.leftkey = false;
		this.rightkey = false;
		this.jumpkey = false;
		this.jumped = false;			// prevent bunnyhopping
		this.ignoreInput = false;
		this.simleft = false;
		this.simright = false;
		this.simjump = false;
		this.lastFloorObject = null;
		this.loadFloorObject = -1;
		this.lastFloorX = 0;
		this.lastFloorY = 0;
		this.floorIsJumpthru = false;
		this.animMode = ANIMMODE_STOPPED;
		this.fallthrough = 0;			// fall through jump-thru.  >0 to disable, lasts a few ticks
		this.firstTick = true;
		this.dx = 0;
		this.dy = 0;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.updateGravity = function()
	{
		this.downx = Math.cos(this.ga);
		this.downy = Math.sin(this.ga);
		this.rightx = Math.cos(this.ga - Math.PI / 2);
		this.righty = Math.sin(this.ga - Math.PI / 2);
		this.downx = cr.round6dp(this.downx);
		this.downy = cr.round6dp(this.downy);
		this.rightx = cr.round6dp(this.rightx);
		this.righty = cr.round6dp(this.righty);
		this.g1 = this.g;
		if (this.g < 0)
		{
			this.downx *= -1;
			this.downy *= -1;
			this.g = Math.abs(this.g);
		}
	};
	behinstProto.onCreate = function()
	{
		this.maxspeed = this.properties[0];
		this.acc = this.properties[1];
		this.dec = this.properties[2];
		this.jumpStrength = this.properties[3];
		this.g = this.properties[4];
		this.g1 = this.g;
		this.maxFall = this.properties[5];
		this.defaultControls = (this.properties[6] === 1);	// 0=no, 1=yes
		this.enabled = (this.properties[7] !== 0);
		this.wasOnFloor = false;
		this.wasOverJumpthru = this.runtime.testOverlapJumpThru(this.inst);
		this.loadOverJumpthru = -1;
		this.ga = cr.to_radians(90);
		this.updateGravity();
		var self = this;
		if (this.defaultControls && !this.runtime.isDomFree)
		{
			jQuery(document).keydown(function(info) {
						self.onKeyDown(info);
					});
			jQuery(document).keyup(function(info) {
						self.onKeyUp(info);
					});
		}
		if (!this.recycled)
		{
			this.myDestroyCallback = function(inst) {
										self.onInstanceDestroyed(inst);
									};
		}
		this.runtime.addDestroyCallback(this.myDestroyCallback);
		this.inst.extra.isPlatformBehavior = true;
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"ii": this.ignoreInput,
			"lfx": this.lastFloorX,
			"lfy": this.lastFloorY,
			"lfo": (this.lastFloorObject ? this.lastFloorObject.uid : -1),
			"am": this.animMode,
			"en": this.enabled,
			"fall": this.fallthrough,
			"ft": this.firstTick,
			"dx": this.dx,
			"dy": this.dy,
			"ms": this.maxspeed,
			"acc": this.acc,
			"dec": this.dec,
			"js": this.jumpStrength,
			"g": this.g,
			"g1": this.g1,
			"mf": this.maxFall,
			"wof": this.wasOnFloor,
			"woj": (this.wasOverJumpthru ? this.wasOverJumpthru.uid : -1),
			"ga": this.ga
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.ignoreInput = o["ii"];
		this.lastFloorX = o["lfx"];
		this.lastFloorY = o["lfy"];
		this.loadFloorObject = o["lfo"];
		this.animMode = o["am"];
		this.enabled = o["en"];
		this.fallthrough = o["fall"];
		this.firstTick = o["ft"];
		this.dx = o["dx"];
		this.dy = o["dy"];
		this.maxspeed = o["ms"];
		this.acc = o["acc"];
		this.dec = o["dec"];
		this.jumpStrength = o["js"];
		this.g = o["g"];
		this.g1 = o["g1"];
		this.maxFall = o["mf"];
		this.wasOnFloor = o["wof"];
		this.loadOverJumpthru = o["woj"];
		this.ga = o["ga"];
		this.leftkey = false;
		this.rightkey = false;
		this.jumpkey = false;
		this.jumped = false;
		this.simleft = false;
		this.simright = false;
		this.simjump = false;
		this.updateGravity();
	};
	behinstProto.afterLoad = function ()
	{
		if (this.loadFloorObject === -1)
			this.lastFloorObject = null;
		else
			this.lastFloorObject = this.runtime.getObjectByUID(this.loadFloorObject);
		if (this.loadOverJumpthru === -1)
			this.wasOverJumpthru = null;
		else
			this.wasOverJumpthru = this.runtime.getObjectByUID(this.loadOverJumpthru);
	};
	behinstProto.onInstanceDestroyed = function (inst)
	{
		if (this.lastFloorObject == inst)
			this.lastFloorObject = null;
	};
	behinstProto.onDestroy = function ()
	{
		this.lastFloorObject = null;
		this.runtime.removeDestroyCallback(this.myDestroyCallback);
	};
	behinstProto.onKeyDown = function (info)
	{
		switch (info.which) {
		case 38:	// up
			info.preventDefault();
			this.jumpkey = true;
			break;
		case 37:	// left
			info.preventDefault();
			this.leftkey = true;
			break;
		case 39:	// right
			info.preventDefault();
			this.rightkey = true;
			break;
		}
	};
	behinstProto.onKeyUp = function (info)
	{
		switch (info.which) {
		case 38:	// up
			info.preventDefault();
			this.jumpkey = false;
			this.jumped = false;
			break;
		case 37:	// left
			info.preventDefault();
			this.leftkey = false;
			break;
		case 39:	// right
			info.preventDefault();
			this.rightkey = false;
			break;
		}
	};
	behinstProto.getGDir = function ()
	{
		if (this.g < 0)
			return -1;
		else
			return 1;
	};
	behinstProto.isOnFloor = function ()
	{
		var ret = null;
		var ret2 = null;
		var i, len, j;
		var oldx = this.inst.x;
		var oldy = this.inst.y;
		this.inst.x += this.downx;
		this.inst.y += this.downy;
		this.inst.set_bbox_changed();
		if (this.lastFloorObject && this.runtime.testOverlap(this.inst, this.lastFloorObject))
		{
			this.inst.x = oldx;
			this.inst.y = oldy;
			this.inst.set_bbox_changed();
			return this.lastFloorObject;
		}
		else
		{
			ret = this.runtime.testOverlapSolid(this.inst);
			if (!ret && this.fallthrough === 0)
				ret2 = this.runtime.testOverlapJumpThru(this.inst, true);
			this.inst.x = oldx;
			this.inst.y = oldy;
			this.inst.set_bbox_changed();
			if (ret)		// was overlapping solid
			{
				if (this.runtime.testOverlap(this.inst, ret))
					return null;
				else
				{
					this.floorIsJumpthru = false;
					return ret;
				}
			}
			if (ret2 && ret2.length)
			{
				for (i = 0, j = 0, len = ret2.length; i < len; i++)
				{
					ret2[j] = ret2[i];
					if (!this.runtime.testOverlap(this.inst, ret2[i]))
						j++;
				}
				if (j >= 1)
				{
					this.floorIsJumpthru = true;
					return ret2[0];
				}
			}
			return null;
		}
	};
	behinstProto.tick = function ()
	{
	};
	behinstProto.posttick = function ()
	{
		var dt = this.runtime.getDt(this.inst);
		var mx, my, obstacle, mag, allover, i, len, j, oldx, oldy;
		if (!this.jumpkey && !this.simjump)
			this.jumped = false;
		var left = this.leftkey || this.simleft;
		var right = this.rightkey || this.simright;
		var jump = (this.jumpkey || this.simjump) && !this.jumped;
		this.simleft = false;
		this.simright = false;
		this.simjump = false;
		if (!this.enabled)
			return;
		if (this.ignoreInput)
		{
			left = false;
			right = false;
			jump = false;
		}
		var lastFloor = this.lastFloorObject;
		var floor_moved = false;
		if (this.firstTick)
		{
			if (this.runtime.testOverlapSolid(this.inst) || this.runtime.testOverlapJumpThru(this.inst))
			{
				this.runtime.pushOutSolid(this.inst, -this.downx, -this.downy, 4, true);
			}
			this.firstTick = false;
		}
		if (lastFloor && this.dy === 0 && (lastFloor.y !== this.lastFloorY || lastFloor.x !== this.lastFloorX))
		{
			mx = (lastFloor.x - this.lastFloorX);
			my = (lastFloor.y - this.lastFloorY);
			this.inst.x += mx;
			this.inst.y += my;
			this.inst.set_bbox_changed();
			this.lastFloorX = lastFloor.x;
			this.lastFloorY = lastFloor.y;
			floor_moved = true;
			if (this.runtime.testOverlapSolid(this.inst))
			{
				this.runtime.pushOutSolid(this.inst, -mx, -my, Math.sqrt(mx * mx + my * my) * 2.5);
			}
		}
		var floor_ = this.isOnFloor();
		var collobj = this.runtime.testOverlapSolid(this.inst);
		if (collobj)
		{
			if (this.inst.extra.inputPredicted)
			{
				this.runtime.pushOutSolid(this.inst, -this.downx, -this.downy, 10, false);
			}
			else if (this.runtime.pushOutSolidNearest(this.inst, Math.max(this.inst.width, this.inst.height) / 2))
			{
				this.runtime.registerCollision(this.inst, collobj);
			}
			else
				return;
		}
		if (floor_)
		{
			if (this.dy > 0)
			{
				if (!this.wasOnFloor)
				{
					this.runtime.pushInFractional(this.inst, -this.downx, -this.downy, floor_, 16);
					this.wasOnFloor = true;
				}
				this.dy = 0;
			}
			if (lastFloor != floor_)
			{
				this.lastFloorObject = floor_;
				this.lastFloorX = floor_.x;
				this.lastFloorY = floor_.y;
				this.runtime.registerCollision(this.inst, floor_);
			}
			else if (floor_moved)
			{
				collobj = this.runtime.testOverlapSolid(this.inst);
				if (collobj)
				{
					this.runtime.registerCollision(this.inst, collobj);
					if (mx !== 0)
					{
						if (mx > 0)
							this.runtime.pushOutSolid(this.inst, -this.rightx, -this.righty);
						else
							this.runtime.pushOutSolid(this.inst, this.rightx, this.righty);
					}
					this.runtime.pushOutSolid(this.inst, -this.downx, -this.downy);
				}
			}
			if (jump)
			{
				oldx = this.inst.x;
				oldy = this.inst.y;
				this.inst.x -= this.downx;
				this.inst.y -= this.downy;
				this.inst.set_bbox_changed();
				if (!this.runtime.testOverlapSolid(this.inst))
				{
					this.runtime.trigger(cr.behaviors.Platform.prototype.cnds.OnJump, this.inst);
					this.animMode = ANIMMODE_JUMPING;
					this.dy = -this.jumpStrength;
					this.jumped = true;
				}
				else
					jump = false;
				this.inst.x = oldx;
				this.inst.y = oldy;
				this.inst.set_bbox_changed();
			}
		}
		else
		{
			this.lastFloorObject = null;
			this.dy += this.g * dt;
			if (this.dy > this.maxFall)
				this.dy = this.maxFall;
			if (jump)
				this.jumped = true;
		}
		this.wasOnFloor = !!floor_;
		if (left == right)	// both up or both down
		{
			if (this.dx < 0)
			{
				this.dx += this.dec * dt;
				if (this.dx > 0)
					this.dx = 0;
			}
			else if (this.dx > 0)
			{
				this.dx -= this.dec * dt;
				if (this.dx < 0)
					this.dx = 0;
			}
		}
		if (left && !right)
		{
			if (this.dx > 0)
				this.dx -= (this.acc + this.dec) * dt;
			else
				this.dx -= this.acc * dt;
		}
		if (right && !left)
		{
			if (this.dx < 0)
				this.dx += (this.acc + this.dec) * dt;
			else
				this.dx += this.acc * dt;
		}
		if (this.dx > this.maxspeed)
			this.dx = this.maxspeed;
		else if (this.dx < -this.maxspeed)
			this.dx = -this.maxspeed;
		var landed = false;
		if (this.dx !== 0)
		{
			oldx = this.inst.x;
			oldy = this.inst.y;
			mx = this.dx * dt * this.rightx;
			my = this.dx * dt * this.righty;
			this.inst.x += this.rightx * (this.dx > 1 ? 1 : -1) - this.downx;
			this.inst.y += this.righty * (this.dx > 1 ? 1 : -1) - this.downy;
			this.inst.set_bbox_changed();
			var is_jumpthru = false;
			var slope_too_steep = this.runtime.testOverlapSolid(this.inst);
			/*
			if (!slope_too_steep && floor_)
			{
				slope_too_steep = this.runtime.testOverlapJumpThru(this.inst);
				is_jumpthru = true;
				if (slope_too_steep)
				{
					this.inst.x = oldx;
					this.inst.y = oldy;
					this.inst.set_bbox_changed();
					if (this.runtime.testOverlap(this.inst, slope_too_steep))
					{
						slope_too_steep = null;
						is_jumpthru = false;
					}
				}
			}
			*/
			this.inst.x = oldx + mx;
			this.inst.y = oldy + my;
			this.inst.set_bbox_changed();
			obstacle = this.runtime.testOverlapSolid(this.inst);
			if (!obstacle && floor_)
			{
				obstacle = this.runtime.testOverlapJumpThru(this.inst);
				if (obstacle)
				{
					this.inst.x = oldx;
					this.inst.y = oldy;
					this.inst.set_bbox_changed();
					if (this.runtime.testOverlap(this.inst, obstacle))
					{
						obstacle = null;
						is_jumpthru = false;
					}
					else
						is_jumpthru = true;
					this.inst.x = oldx + mx;
					this.inst.y = oldy + my;
					this.inst.set_bbox_changed();
				}
			}
			if (obstacle)
			{
				var push_dist = Math.abs(this.dx * dt) + 2;
				if (slope_too_steep || !this.runtime.pushOutSolid(this.inst, -this.downx, -this.downy, push_dist, is_jumpthru, obstacle))
				{
					this.runtime.registerCollision(this.inst, obstacle);
					push_dist = Math.max(Math.abs(this.dx * dt * 2.5), 30);
					if (!this.runtime.pushOutSolid(this.inst, this.rightx * (this.dx < 0 ? 1 : -1), this.righty * (this.dx < 0 ? 1 : -1), push_dist, false))
					{
						this.inst.x = oldx;
						this.inst.y = oldy;
						this.inst.set_bbox_changed();
					}
					else if (floor_ && !is_jumpthru && !this.floorIsJumpthru)
					{
						oldx = this.inst.x;
						oldy = this.inst.y;
						this.inst.x += this.downx;
						this.inst.y += this.downy;
						if (this.runtime.testOverlapSolid(this.inst))
						{
							if (!this.runtime.pushOutSolid(this.inst, -this.downx, -this.downy, 3, false))
							{
								this.inst.x = oldx;
								this.inst.y = oldy;
								this.inst.set_bbox_changed();
							}
						}
						else
						{
							this.inst.x = oldx;
							this.inst.y = oldy;
							this.inst.set_bbox_changed();
						}
					}
					if (!is_jumpthru)
						this.dx = 0;	// stop
				}
				else if (!slope_too_steep && !jump && (Math.abs(this.dy) < Math.abs(this.jumpStrength / 4)))
				{
					this.dy = 0;
					if (!floor_)
						landed = true;
				}
			}
			else
			{
				var newfloor = this.isOnFloor();
				if (floor_ && !newfloor)
				{
					mag = Math.ceil(Math.abs(this.dx * dt)) + 2;
					oldx = this.inst.x;
					oldy = this.inst.y;
					this.inst.x += this.downx * mag;
					this.inst.y += this.downy * mag;
					this.inst.set_bbox_changed();
					if (this.runtime.testOverlapSolid(this.inst) || this.runtime.testOverlapJumpThru(this.inst))
						this.runtime.pushOutSolid(this.inst, -this.downx, -this.downy, mag + 2, true);
					else
					{
						this.inst.x = oldx;
						this.inst.y = oldy;
						this.inst.set_bbox_changed();
					}
				}
				else if (newfloor && this.dy === 0)
				{
					this.runtime.pushInFractional(this.inst, -this.downx, -this.downy, newfloor, 16);
				}
			}
		}
		if (this.dy !== 0)
		{
			oldx = this.inst.x;
			oldy = this.inst.y;
			this.inst.x += this.dy * dt * this.downx;
			this.inst.y += this.dy * dt * this.downy;
			var newx = this.inst.x;
			var newy = this.inst.y;
			this.inst.set_bbox_changed();
			collobj = this.runtime.testOverlapSolid(this.inst);
			var fell_on_jumpthru = false;
			if (!collobj && (this.dy > 0) && !floor_)
			{
				allover = this.fallthrough > 0 ? null : this.runtime.testOverlapJumpThru(this.inst, true);
				if (allover && allover.length)
				{
					if (this.wasOverJumpthru)
					{
						this.inst.x = oldx;
						this.inst.y = oldy;
						this.inst.set_bbox_changed();
						for (i = 0, j = 0, len = allover.length; i < len; i++)
						{
							allover[j] = allover[i];
							if (!this.runtime.testOverlap(this.inst, allover[i]))
								j++;
						}
						allover.length = j;
						this.inst.x = newx;
						this.inst.y = newy;
						this.inst.set_bbox_changed();
					}
					if (allover.length >= 1)
						collobj = allover[0];
				}
				fell_on_jumpthru = !!collobj;
			}
			if (collobj)
			{
				this.runtime.registerCollision(this.inst, collobj);
				var push_dist = (fell_on_jumpthru ? Math.abs(this.dy * dt * 2.5 + 10) : Math.max(Math.abs(this.dy * dt * 2.5 + 10), 30));
				if (!this.runtime.pushOutSolid(this.inst, this.downx * (this.dy < 0 ? 1 : -1), this.downy * (this.dy < 0 ? 1 : -1), push_dist, fell_on_jumpthru, collobj))
				{
					this.inst.x = oldx;
					this.inst.y = oldy;
					this.inst.set_bbox_changed();
					this.wasOnFloor = true;		// prevent adjustment for unexpected floor landings
					if (!fell_on_jumpthru)
						this.dy = 0;	// stop
				}
				else
				{
					this.lastFloorObject = collobj;
					this.lastFloorX = collobj.x;
					this.lastFloorY = collobj.y;
					this.floorIsJumpthru = fell_on_jumpthru;
					if (fell_on_jumpthru)
						landed = true;
					this.dy = 0;	// stop
				}
			}
		}
		if (this.animMode !== ANIMMODE_FALLING && this.dy > 0 && !floor_)
		{
			this.runtime.trigger(cr.behaviors.Platform.prototype.cnds.OnFall, this.inst);
			this.animMode = ANIMMODE_FALLING;
		}
		if (floor_ || landed)
		{
			if (this.animMode === ANIMMODE_FALLING || landed || (jump && this.dy === 0))
			{
				this.runtime.trigger(cr.behaviors.Platform.prototype.cnds.OnLand, this.inst);
				if (this.dx === 0 && this.dy === 0)
					this.animMode = ANIMMODE_STOPPED;
				else
					this.animMode = ANIMMODE_MOVING;
			}
			else
			{
				if (this.animMode !== ANIMMODE_STOPPED && this.dx === 0 && this.dy === 0)
				{
					this.runtime.trigger(cr.behaviors.Platform.prototype.cnds.OnStop, this.inst);
					this.animMode = ANIMMODE_STOPPED;
				}
				if (this.animMode !== ANIMMODE_MOVING && (this.dx !== 0 || this.dy !== 0) && !jump)
				{
					this.runtime.trigger(cr.behaviors.Platform.prototype.cnds.OnMove, this.inst);
					this.animMode = ANIMMODE_MOVING;
				}
			}
		}
		if (this.fallthrough > 0)
			this.fallthrough--;
		this.wasOverJumpthru = this.runtime.testOverlapJumpThru(this.inst);
	};
	function Cnds() {};
	Cnds.prototype.IsMoving = function ()
	{
		return this.dx !== 0 || this.dy !== 0;
	};
	Cnds.prototype.CompareSpeed = function (cmp, s)
	{
		var speed = Math.sqrt(this.dx * this.dx + this.dy * this.dy);
		return cr.do_cmp(speed, cmp, s);
	};
	Cnds.prototype.IsOnFloor = function ()
	{
		if (this.dy !== 0)
			return false;
		var ret = null;
		var ret2 = null;
		var i, len, j;
		var oldx = this.inst.x;
		var oldy = this.inst.y;
		this.inst.x += this.downx;
		this.inst.y += this.downy;
		this.inst.set_bbox_changed();
		ret = this.runtime.testOverlapSolid(this.inst);
		if (!ret && this.fallthrough === 0)
			ret2 = this.runtime.testOverlapJumpThru(this.inst, true);
		this.inst.x = oldx;
		this.inst.y = oldy;
		this.inst.set_bbox_changed();
		if (ret)		// was overlapping solid
		{
			return !this.runtime.testOverlap(this.inst, ret);
		}
		if (ret2 && ret2.length)
		{
			for (i = 0, j = 0, len = ret2.length; i < len; i++)
			{
				ret2[j] = ret2[i];
				if (!this.runtime.testOverlap(this.inst, ret2[i]))
					j++;
			}
			if (j >= 1)
				return true;
		}
		return false;
	};
	Cnds.prototype.IsByWall = function (side)
	{
		var ret = false;
		var oldx = this.inst.x;
		var oldy = this.inst.y;
		this.inst.x -= this.downx * 3;
		this.inst.y -= this.downy * 3;
		this.inst.set_bbox_changed();
		if (this.runtime.testOverlapSolid(this.inst))
		{
			this.inst.x = oldx;
			this.inst.y = oldy;
			this.inst.set_bbox_changed();
			return false;
		}
		if (side === 0)		// left
		{
			this.inst.x -= this.rightx * 2;
			this.inst.y -= this.righty * 2;
		}
		else
		{
			this.inst.x += this.rightx * 2;
			this.inst.y += this.righty * 2;
		}
		this.inst.set_bbox_changed();
		ret = this.runtime.testOverlapSolid(this.inst);
		this.inst.x = oldx;
		this.inst.y = oldy;
		this.inst.set_bbox_changed();
		return ret;
	};
	Cnds.prototype.IsJumping = function ()
	{
		return this.dy < 0;
	};
	Cnds.prototype.IsFalling = function ()
	{
		return this.dy > 0;
	};
	Cnds.prototype.OnJump = function ()
	{
		return true;
	};
	Cnds.prototype.OnFall = function ()
	{
		return true;
	};
	Cnds.prototype.OnStop = function ()
	{
		return true;
	};
	Cnds.prototype.OnMove = function ()
	{
		return true;
	};
	Cnds.prototype.OnLand = function ()
	{
		return true;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetIgnoreInput = function (ignoring)
	{
		this.ignoreInput = ignoring;
	};
	Acts.prototype.SetMaxSpeed = function (maxspeed)
	{
		this.maxspeed = maxspeed;
		if (this.maxspeed < 0)
			this.maxspeed = 0;
	};
	Acts.prototype.SetAcceleration = function (acc)
	{
		this.acc = acc;
		if (this.acc < 0)
			this.acc = 0;
	};
	Acts.prototype.SetDeceleration = function (dec)
	{
		this.dec = dec;
		if (this.dec < 0)
			this.dec = 0;
	};
	Acts.prototype.SetJumpStrength = function (js)
	{
		this.jumpStrength = js;
		if (this.jumpStrength < 0)
			this.jumpStrength = 0;
	};
	Acts.prototype.SetGravity = function (grav)
	{
		if (this.g1 === grav)
			return;		// no change
		this.g = grav;
		this.updateGravity();
		if (this.runtime.testOverlapSolid(this.inst))
		{
			this.runtime.pushOutSolid(this.inst, this.downx, this.downy, 10);
			this.inst.x += this.downx * 2;
			this.inst.y += this.downy * 2;
			this.inst.set_bbox_changed();
		}
		this.lastFloorObject = null;
	};
	Acts.prototype.SetMaxFallSpeed = function (mfs)
	{
		this.maxFall = mfs;
		if (this.maxFall < 0)
			this.maxFall = 0;
	};
	Acts.prototype.SimulateControl = function (ctrl)
	{
		switch (ctrl) {
		case 0:		this.simleft = true;	break;
		case 1:		this.simright = true;	break;
		case 2:		this.simjump = true;	break;
		}
	};
	Acts.prototype.SetVectorX = function (vx)
	{
		this.dx = vx;
	};
	Acts.prototype.SetVectorY = function (vy)
	{
		this.dy = vy;
	};
	Acts.prototype.SetGravityAngle = function (a)
	{
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (this.ga === a)
			return;		// no change
		this.ga = a;
		this.updateGravity();
		this.lastFloorObject = null;
	};
	Acts.prototype.SetEnabled = function (en)
	{
		if (this.enabled !== (en === 1))
		{
			this.enabled = (en === 1);
			if (!this.enabled)
				this.lastFloorObject = null;
		}
	};
	Acts.prototype.FallThrough = function ()
	{
		var oldx = this.inst.x;
		var oldy = this.inst.y;
		this.inst.x += this.downx;
		this.inst.y += this.downy;
		this.inst.set_bbox_changed();
		var overlaps = this.runtime.testOverlapJumpThru(this.inst, false);
		this.inst.x = oldx;
		this.inst.y = oldy;
		this.inst.set_bbox_changed();
		if (!overlaps)
			return;
		this.fallthrough = 3;			// disable jumpthrus for 3 ticks (1 doesn't do it, 2 does, 3 to be on safe side)
		this.lastFloorObject = null;
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Speed = function (ret)
	{
		ret.set_float(Math.sqrt(this.dx * this.dx + this.dy * this.dy));
	};
	Exps.prototype.MaxSpeed = function (ret)
	{
		ret.set_float(this.maxspeed);
	};
	Exps.prototype.Acceleration = function (ret)
	{
		ret.set_float(this.acc);
	};
	Exps.prototype.Deceleration = function (ret)
	{
		ret.set_float(this.dec);
	};
	Exps.prototype.JumpStrength = function (ret)
	{
		ret.set_float(this.jumpStrength);
	};
	Exps.prototype.Gravity = function (ret)
	{
		ret.set_float(this.g);
	};
	Exps.prototype.GravityAngle = function (ret)
	{
		ret.set_float(cr.to_degrees(this.ga));
	};
	Exps.prototype.MaxFallSpeed = function (ret)
	{
		ret.set_float(this.maxFall);
	};
	Exps.prototype.MovingAngle = function (ret)
	{
		ret.set_float(cr.to_degrees(Math.atan2(this.dy, this.dx)));
	};
	Exps.prototype.VectorX = function (ret)
	{
		ret.set_float(this.dx);
	};
	Exps.prototype.VectorY = function (ret)
	{
		ret.set_float(this.dy);
	};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Rex_MoveTo = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Rex_MoveTo.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
        this.activated = (this.properties[0] == 1);
        this.move = {"max":this.properties[1],
                     "acc":this.properties[2],
                     "dec":this.properties[3]};
        this.target = {"x":0 , "y":0, "a":0};
        this.is_moving = false;
        this.current_speed = 0;
        this.remain_distance = 0;
        this.is_hit_target = false;
        this._pre_pos = {"x":0,"y":0};
        this._moving_angle_info = {"x":0,"y":0,"a":(-1)};
        this._last_tick = null;
        this.is_my_call = false;
	};
	behinstProto.tick = function ()
	{
        if (this.is_hit_target)
        {
            this.is_my_call = true;
            this.runtime.trigger(cr.behaviors.Rex_MoveTo.prototype.cnds.OnHitTarget, this.inst);
            this.is_my_call = false;
            this.is_hit_target = false;
        }
        if ( (!this.activated) || (!this.is_moving) )
        {
            return;
        }
		var dt = this.runtime.getDt(this.inst);
        if (dt==0)   // can not move if dt == 0
            return;
        if ((this._pre_pos["x"] != this.inst.x) || (this._pre_pos["y"] != this.inst.y))
		    this._reset_current_pos();    // reset this.remain_distance
        var is_slow_down = false;
        if (this.move["dec"] != 0)
        {
            var _speed = this.current_speed;
            var _distance = (_speed*_speed)/(2*this.move["dec"]); // (v*v)/(2*a)
            is_slow_down = (_distance >= this.remain_distance);
        }
        var acc = (is_slow_down)? (-this.move["dec"]):this.move["acc"];
        if (acc != 0)
        {
            this.SetCurrentSpeed( this.current_speed + (acc * dt) );
        }
        var distance = this.current_speed * dt;
        this.remain_distance -= distance;
        if ( (this.remain_distance <= 0) || (this.current_speed <= 0) )
        {
            this.is_moving = false;
            this.inst.x = this.target["x"];
            this.inst.y = this.target["y"];
            this.SetCurrentSpeed(0);
            this.moving_angle_get();
            this.is_hit_target = true;
        }
        else
        {
            var angle = this.target["a"];
            this.inst.x += (distance * Math.cos(angle));
            this.inst.y += (distance * Math.sin(angle));
        }
		this.inst.set_bbox_changed();
		this._pre_pos["x"] = this.inst.x;
		this._pre_pos["y"] = this.inst.y;
	};
	behinstProto.tick2 = function ()
	{
        this._moving_angle_info["x"] = this.inst.x;
		this._moving_angle_info["y"] = this.inst.y;
    };
	behinstProto.SetCurrentSpeed = function(speed)
	{
        if (speed != null)
        {
            this.current_speed = (speed > this.move["max"])?
                                 this.move["max"]: speed;
        }
        else if (this.move["acc"]==0)
        {
            this.current_speed = this.move["max"];
        }
	};
	behinstProto._reset_current_pos = function ()
	{
        var dx = this.target["x"] - this.inst.x;
        var dy = this.target["y"] - this.inst.y;
        this.target["a"] = Math.atan2(dy, dx);
        this.remain_distance = Math.sqrt( (dx*dx) + (dy*dy) );
		this._pre_pos["x"] = this.inst.x;
		this._pre_pos["y"] = this.inst.y;
	};
	behinstProto.SetTargetPos = function (_x, _y)
	{
        this.is_moving = true;
		this.target["x"] = _x;
        this.target["y"] = _y;
        this._reset_current_pos();
        this.SetCurrentSpeed(null);
		this._moving_angle_info["x"] = this.inst.x;
		this._moving_angle_info["y"] = this.inst.y;
	};
	behinstProto.is_tick_changed = function ()
	{
	    var cur_tick = this.runtime.tickcount;
		var tick_changed = (this._last_tick != cur_tick);
        this._last_tick = cur_tick;
		return tick_changed;
	};
 	behinstProto.moving_angle_get = function (ret)
	{
        if (this.is_tick_changed())
        {
            var dx = this.inst.x - this._moving_angle_info["x"];
            var dy = this.inst.y - this._moving_angle_info["y"];
            if ((dx!=0) || (dy!=0))
                this._moving_angle_info["a"] = cr.to_clamped_degrees(Math.atan2(dy,dx));
        }
		return this._moving_angle_info["a"];
	};
	behinstProto.saveToJSON = function ()
	{
		return { "en": this.activated,
		         "v": this.move,
                 "t": this.target,
                 "is_m": this.is_moving,
                 "c_spd" : this.current_speed,
                 "rd" : this.remain_distance,
                 "is_ht" : this.is_hit_target,
                 "pp": this._pre_pos,
                 "ma": this._moving_angle_info,
                 "lt": this._last_tick,
               };
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.activated = o["en"];
		this.move = o["v"];
		this.target = o["t"];
		this.is_moving = o["is_m"];
		this.current_speed = o["c_spd"];
		this.remain_distance = o["rd"];
		this.is_hit_target = o["is_ht"];
        this._pre_pos = o["pp"];
        this._moving_angle_info = o["ma"];
        this._last_tick = o["lt"];
	};
	function Cnds() {};
	behaviorProto.cnds = new Cnds();
	Cnds.prototype.OnHitTarget = function ()
	{
		return (this.is_my_call);
	};
	Cnds.prototype.CompareSpeed = function (cmp, s)
	{
		return cr.do_cmp(this.current_speed, cmp, s);
	};
    Cnds.prototype.OnMoving = function ()  // deprecated
	{
		return false;
	};
	Cnds.prototype.IsMoving = function ()
	{
		return (this.activated && this.is_moving);
	};
	Cnds.prototype.CompareMovingAngle = function (cmp, s)
	{
        var angle = this.moving_angle_get();
        if (angle != (-1))
		    return cr.do_cmp(this.moving_angle_get(), cmp, s);
        else
            return false;
	};
	function Acts() {};
	behaviorProto.acts = new Acts();
	Acts.prototype.SetActivated = function (s)
	{
		this.activated = (s == 1);
	};
	Acts.prototype.SetMaxSpeed = function (s)
	{
		this.move["max"] = s;
        this.SetCurrentSpeed(null);
	};
	Acts.prototype.SetAcceleration = function (a)
	{
		this.move["acc"] = a;
        this.SetCurrentSpeed(null);
	};
	Acts.prototype.SetDeceleration = function (a)
	{
		this.move["dec"] = a;
	};
	Acts.prototype.SetTargetPos = function (_x, _y)
	{
        this.SetTargetPos(_x, _y)
	};
	Acts.prototype.SetCurrentSpeed = function (s)
	{
        this.SetCurrentSpeed(s);
	};
 	Acts.prototype.SetTargetPosOnObject = function (objtype)
	{
		if (!objtype)
			return;
		var inst = objtype.getFirstPicked();
        if (inst != null)
            this.SetTargetPos(inst.x, inst.y);
	};
 	Acts.prototype.SetTargetPosByDeltaXY = function (dx, dy)
	{
        this.SetTargetPos(this.inst.x + dx, this.inst.y + dy);
	};
 	Acts.prototype.SetTargetPosByDistanceAngle = function (distance, angle)
	{
        var a = cr.to_clamped_radians(angle);
        var dx = distance*Math.cos(a);
        var dy = distance*Math.sin(a);
        this.SetTargetPos(this.inst.x + dx, this.inst.y + dy);
	};
 	Acts.prototype.Stop = function ()
	{
        this.is_moving = false;
	};
	function Exps() {};
	behaviorProto.exps = new Exps();
	Exps.prototype.Activated = function (ret)
	{
		ret.set_int((this.activated)? 1:0);
	};
	Exps.prototype.Speed = function (ret)
	{
		ret.set_float(this.current_speed);
	};
	Exps.prototype.MaxSpeed = function (ret)
	{
		ret.set_float(this.move["max"]);
	};
	Exps.prototype.Acc = function (ret)
	{
		ret.set_float(this.move["acc"]);
	};
 	Exps.prototype.Dec = function (ret)
	{
		ret.set_float(this.move["dec"]);
	};
	Exps.prototype.TargetX = function (ret)
	{
		ret.set_float(this.target["x"]);
	};
 	Exps.prototype.TargetY = function (ret)
	{
		ret.set_float(this.target["y"]);
	};
 	Exps.prototype.MovingAngle = function (ret)
	{
		ret.set_float(this.moving_angle_get());
	};
}());
;
;
cr.behaviors.Rotate = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Rotate.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.speed = cr.to_radians(this.properties[0]);
		this.acc = cr.to_radians(this.properties[1]);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"speed": this.speed,
			"acc": this.acc
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.speed = o["speed"];
		this.acc = o["acc"];
	};
	behinstProto.tick = function ()
	{
		var dt = this.runtime.getDt(this.inst);
		if (dt === 0)
			return;
		if (this.acc !== 0)
			this.speed += this.acc * dt;
		if (this.speed !== 0)
		{
			this.inst.angle = cr.clamp_angle(this.inst.angle + this.speed * dt);
			this.inst.set_bbox_changed();
		}
	};
	function Cnds() {};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetSpeed = function (s)
	{
		this.speed = cr.to_radians(s);
	};
	Acts.prototype.SetAcceleration = function (a)
	{
		this.acc = cr.to_radians(a);
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Speed = function (ret)
	{
		ret.set_float(cr.to_degrees(this.speed));
	};
	Exps.prototype.Acceleration = function (ret)
	{
		ret.set_float(cr.to_degrees(this.acc));
	};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Sin = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Sin.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
		this.i = 0;		// period offset (radians)
	};
	var behinstProto = behaviorProto.Instance.prototype;
	var _2pi = 2 * Math.PI;
	var _pi_2 = Math.PI / 2;
	var _3pi_2 = (3 * Math.PI) / 2;
	behinstProto.onCreate = function()
	{
		this.active = (this.properties[0] === 1);
		this.movement = this.properties[1]; // 0=Horizontal|1=Vertical|2=Size|3=Width|4=Height|5=Angle|6=Opacity|7=Value only
		this.wave = this.properties[2];		// 0=Sine|1=Triangle|2=Sawtooth|3=Reverse sawtooth|4=Square
		this.period = this.properties[3];
		this.period += Math.random() * this.properties[4];								// period random
		if (this.period === 0)
			this.i = 0;
		else
		{
			this.i = (this.properties[5] / this.period) * _2pi;								// period offset
			this.i += ((Math.random() * this.properties[6]) / this.period) * _2pi;			// period offset random
		}
		this.mag = this.properties[7];													// magnitude
		this.mag += Math.random() * this.properties[8];									// magnitude random
		this.initialValue = 0;
		this.initialValue2 = 0;
		this.ratio = 0;
		this.init();
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"i": this.i,
			"a": this.active,
			"mv": this.movement,
			"w": this.wave,
			"p": this.period,
			"mag": this.mag,
			"iv": this.initialValue,
			"iv2": this.initialValue2,
			"r": this.ratio,
			"lkv": this.lastKnownValue,
			"lkv2": this.lastKnownValue2
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.i = o["i"];
		this.active = o["a"];
		this.movement = o["mv"];
		this.wave = o["w"];
		this.period = o["p"];
		this.mag = o["mag"];
		this.initialValue = o["iv"];
		this.initialValue2 = o["iv2"] || 0;
		this.ratio = o["r"];
		this.lastKnownValue = o["lkv"];
		this.lastKnownValue2 = o["lkv2"] || 0;
	};
	behinstProto.init = function ()
	{
		switch (this.movement) {
		case 0:		// horizontal
			this.initialValue = this.inst.x;
			break;
		case 1:		// vertical
			this.initialValue = this.inst.y;
			break;
		case 2:		// size
			this.initialValue = this.inst.width;
			this.ratio = this.inst.height / this.inst.width;
			break;
		case 3:		// width
			this.initialValue = this.inst.width;
			break;
		case 4:		// height
			this.initialValue = this.inst.height;
			break;
		case 5:		// angle
			this.initialValue = this.inst.angle;
			this.mag = cr.to_radians(this.mag);		// convert magnitude from degrees to radians
			break;
		case 6:		// opacity
			this.initialValue = this.inst.opacity;
			break;
		case 7:
			this.initialValue = 0;
			break;
		case 8:		// forwards/backwards
			this.initialValue = this.inst.x;
			this.initialValue2 = this.inst.y;
			break;
		default:
;
		}
		this.lastKnownValue = this.initialValue;
		this.lastKnownValue2 = this.initialValue2;
	};
	behinstProto.waveFunc = function (x)
	{
		x = x % _2pi;
		switch (this.wave) {
		case 0:		// sine
			return Math.sin(x);
		case 1:		// triangle
			if (x <= _pi_2)
				return x / _pi_2;
			else if (x <= _3pi_2)
				return 1 - (2 * (x - _pi_2) / Math.PI);
			else
				return (x - _3pi_2) / _pi_2 - 1;
		case 2:		// sawtooth
			return 2 * x / _2pi - 1;
		case 3:		// reverse sawtooth
			return -2 * x / _2pi + 1;
		case 4:		// square
			return x < Math.PI ? -1 : 1;
		};
		return 0;
	};
	behinstProto.tick = function ()
	{
		var dt = this.runtime.getDt(this.inst);
		if (!this.active || dt === 0)
			return;
		if (this.period === 0)
			this.i = 0;
		else
		{
			this.i += (dt / this.period) * _2pi;
			this.i = this.i % _2pi;
		}
		switch (this.movement) {
		case 0:		// horizontal
			if (this.inst.x !== this.lastKnownValue)
				this.initialValue += this.inst.x - this.lastKnownValue;
			this.inst.x = this.initialValue + this.waveFunc(this.i) * this.mag;
			this.lastKnownValue = this.inst.x;
			break;
		case 1:		// vertical
			if (this.inst.y !== this.lastKnownValue)
				this.initialValue += this.inst.y - this.lastKnownValue;
			this.inst.y = this.initialValue + this.waveFunc(this.i) * this.mag;
			this.lastKnownValue = this.inst.y;
			break;
		case 2:		// size
			this.inst.width = this.initialValue + this.waveFunc(this.i) * this.mag;
			this.inst.height = this.inst.width * this.ratio;
			break;
		case 3:		// width
			this.inst.width = this.initialValue + this.waveFunc(this.i) * this.mag;
			break;
		case 4:		// height
			this.inst.height = this.initialValue + this.waveFunc(this.i) * this.mag;
			break;
		case 5:		// angle
			if (this.inst.angle !== this.lastKnownValue)
				this.initialValue = cr.clamp_angle(this.initialValue + (this.inst.angle - this.lastKnownValue));
			this.inst.angle = cr.clamp_angle(this.initialValue + this.waveFunc(this.i) * this.mag);
			this.lastKnownValue = this.inst.angle;
			break;
		case 6:		// opacity
			this.inst.opacity = this.initialValue + (this.waveFunc(this.i) * this.mag) / 100;
			if (this.inst.opacity < 0)
				this.inst.opacity = 0;
			else if (this.inst.opacity > 1)
				this.inst.opacity = 1;
			break;
		case 8:		// forwards/backwards
			if (this.inst.x !== this.lastKnownValue)
				this.initialValue += this.inst.x - this.lastKnownValue;
			if (this.inst.y !== this.lastKnownValue2)
				this.initialValue2 += this.inst.y - this.lastKnownValue2;
			this.inst.x = this.initialValue + Math.cos(this.inst.angle) * this.waveFunc(this.i) * this.mag;
			this.inst.y = this.initialValue2 + Math.sin(this.inst.angle) * this.waveFunc(this.i) * this.mag;
			this.lastKnownValue = this.inst.x;
			this.lastKnownValue2 = this.inst.y;
			break;
		}
		this.inst.set_bbox_changed();
	};
	behinstProto.onSpriteFrameChanged = function (prev_frame, next_frame)
	{
		switch (this.movement) {
		case 2:	// size
			this.initialValue *= (next_frame.width / prev_frame.width);
			this.ratio = next_frame.height / next_frame.width;
			break;
		case 3:	// width
			this.initialValue *= (next_frame.width / prev_frame.width);
			break;
		case 4:	// height
			this.initialValue *= (next_frame.height / prev_frame.height);
			break;
		}
	};
	function Cnds() {};
	Cnds.prototype.IsActive = function ()
	{
		return this.active;
	};
	Cnds.prototype.CompareMovement = function (m)
	{
		return this.movement === m;
	};
	Cnds.prototype.ComparePeriod = function (cmp, v)
	{
		return cr.do_cmp(this.period, cmp, v);
	};
	Cnds.prototype.CompareMagnitude = function (cmp, v)
	{
		if (this.movement === 5)
			return cr.do_cmp(this.mag, cmp, cr.to_radians(v));
		else
			return cr.do_cmp(this.mag, cmp, v);
	};
	Cnds.prototype.CompareWave = function (w)
	{
		return this.wave === w;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetActive = function (a)
	{
		this.active = (a === 1);
	};
	Acts.prototype.SetPeriod = function (x)
	{
		this.period = x;
	};
	Acts.prototype.SetMagnitude = function (x)
	{
		this.mag = x;
		if (this.movement === 5)	// angle
			this.mag = cr.to_radians(this.mag);
	};
	Acts.prototype.SetMovement = function (m)
	{
		if (this.movement === 5)
			this.mag = cr.to_degrees(this.mag);
		this.movement = m;
		this.init();
	};
	Acts.prototype.SetWave = function (w)
	{
		this.wave = w;
	};
	Acts.prototype.SetPhase = function (x)
	{
		this.i = (x * _2pi) % _2pi;
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.CyclePosition = function (ret)
	{
		ret.set_float(this.i / _2pi);
	};
	Exps.prototype.Period = function (ret)
	{
		ret.set_float(this.period);
	};
	Exps.prototype.Magnitude = function (ret)
	{
		if (this.movement === 5)	// angle
			ret.set_float(cr.to_degrees(this.mag));
		else
			ret.set_float(this.mag);
	};
	Exps.prototype.Value = function (ret)
	{
		ret.set_float(this.waveFunc(this.i) * this.mag);
	};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Turret = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Turret.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
		this.targetTypes = [];						// object types to check for as targets
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.range = this.properties[0];
		this.rateOfFire = this.properties[1];
		this.rotateEnabled = (this.properties[2] !== 0);
		this.rotateSpeed = cr.to_radians(this.properties[3]);
		this.targetMode = this.properties[4];		// 0 = first, 1 = nearest
		this.predictiveAim = (this.properties[5] !== 0);
		this.projectileSpeed = this.properties[6];
		this.enabled = (this.properties[7] !== 0);
		this.useCollisionCells = (this.properties[8] !== 0);
		this.lastCheckTime = 0;						// last time checked for targets in range
		this.fireTimeCount = this.rateOfFire;		// counts up to rate of fire before shooting. starts in fully reloaded state
		this.currentTarget = null;					// current target object
		this.loadTargetUid = -1;
		this.oldTargetX = 0;
		this.oldTargetY = 0;
		this.lastSpeeds = [0, 0, 0, 0];
		this.speedsCount = 0;
		this.firstTickWithTarget = true;
		var self = this;
		if (!this.recycled)
		{
			this.myDestroyCallback = function(inst) {
										self.onInstanceDestroyed(inst);
									};
		}
		this.runtime.addDestroyCallback(this.myDestroyCallback);
	};
	behinstProto.saveToJSON = function ()
	{
		var o = {
			"r": this.range,
			"rof": this.rateOfFire,
			"re": this.rotateEnabled,
			"rs": this.rotateSpeed,
			"tm": this.targetMode,
			"pa": this.predictiveAim,
			"ps": this.projectileSpeed,
			"en": this.enabled,
			"lct": this.lastCheckTime,
			"ftc": this.fireTimeCount,
			"target": (this.currentTarget ? this.currentTarget.uid : -1),
			"ox": this.oldTargetX,
			"oy": this.oldTargetY,
			"ls": this.lastSpeeds,
			"sc": this.speedsCount,
			"targs": []
		};
		var i, len;
		for (i = 0, len = this.type.targetTypes.length; i < len; i++)
		{
			o["targs"].push(this.type.targetTypes[i].sid);
		}
		return o;
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.range = o["r"];
		this.rateOfFire = o["rof"];
		this.rotateEnabled = o["re"];
		this.rotateSpeed = o["rs"];
		this.targetMode = o["tm"];
		this.predictiveAim = o["pa"];
		this.projectileSpeed = o["ps"];
		this.enabled = o["en"];
		this.lastCheckTime = o["lct"];
		this.fireTimeCount = o["ftc"] || 0;		// not in <r154
		this.loadTargetUid = o["target"];
		this.oldTargetX = o["ox"];
		this.oldTargetY = o["oy"];
		this.lastSpeeds = o["ls"];
		this.speedsCount = o["sc"];
		this.type.targetTypes.length = 0;
		var i, len, t;
		for (i = 0, len = o["targs"].length; i < len; i++)
		{
			t = this.runtime.getObjectTypeBySid(o["targs"][i]);
			if (t)
				this.type.targetTypes.push(t);
		}
	};
	behinstProto.afterLoad = function ()
	{
		if (this.loadTargetUid === -1)
			this.currentTarget = null;
		else
			this.currentTarget = this.runtime.getObjectByUID(this.loadTargetUid);
	};
	behinstProto.onInstanceDestroyed = function (inst)
	{
		if (this.currentTarget == inst)
			this.currentTarget = null;
	};
	behinstProto.onDestroy = function ()
	{
		this.currentTarget = null;
		this.runtime.removeDestroyCallback(this.myDestroyCallback);
	};
	behinstProto.addSpeed = function (s)
	{
		if (this.speedsCount < 4)
		{
			this.lastSpeeds[this.speedsCount] = s;
			this.speedsCount++;
		}
		else
		{
			this.lastSpeeds.shift();
			this.lastSpeeds.push(s);
		}
	};
	behinstProto.getSpeed = function ()
	{
		var ret = 0;
		var i = 0;
		for ( ; i < this.speedsCount; i++)
		{
			ret += this.lastSpeeds[i];
		}
		return ret / this.speedsCount;
	};
	behinstProto.isInRange = function (obj_)
	{
		var inst = this.inst;
		var dx = obj_.x - inst.x;
		var dy = obj_.y - inst.y;
		return dx * dx + dy * dy <= this.range * this.range;
	};
	var tmpRect = new cr.rect(0, 0, 0, 0);
	var candidates = [];
	behinstProto.lookForFirstTarget = function ()
	{
		var i, len, rinst;
		tmpRect.left = this.inst.x - this.range;
		tmpRect.top = this.inst.y - this.range;
		tmpRect.right = this.inst.x + this.range;
		tmpRect.bottom = this.inst.y + this.range;
		if (this.useCollisionCells)
		{
			this.runtime.getTypesCollisionCandidates(null, this.type.targetTypes, tmpRect, candidates);
		}
		else
		{
			for (i = 0, len = this.type.targetTypes.length; i < len; ++i)
			{
				cr.appendArray(candidates, this.type.targetTypes[i].instances);
			}
		}
		for (i = 0, len = candidates.length; i < len; ++i)
		{
			rinst = candidates[i];
			if (this.isInRange(rinst))
			{
				this.currentTarget = rinst;
				candidates.length = 0;
				return;
			}
		}
		candidates.length = 0;
	};
	behinstProto.lookForNearestTarget = function ()
	{
		var i, len, rinst, dist, dx, dy;
		var myx = this.inst.x;
		var myy = this.inst.y;
		var closest = this.range * this.range;
		this.currentTarget = null;
		tmpRect.left = myx - this.range;
		tmpRect.top = myy - this.range;
		tmpRect.right = myx + this.range;
		tmpRect.bottom = myy + this.range;
		if (this.useCollisionCells)
		{
			this.runtime.getTypesCollisionCandidates(null, this.type.targetTypes, tmpRect, candidates);
		}
		else
		{
			for (i = 0, len = this.type.targetTypes.length; i < len; ++i)
			{
				cr.appendArray(candidates, this.type.targetTypes[i].instances);
			}
		}
		for (i = 0, len = candidates.length; i < len; ++i)
		{
			rinst = candidates[i];
			dx = myx - rinst.x;
			dy = myy - rinst.y;
			dist = dx * dx + dy * dy;
			if (dist < closest)
			{
				this.currentTarget = rinst;
				closest = dist;
			}
		}
		candidates.length = 0;
	};
	behinstProto.tick = function ()
	{
		var dt = this.runtime.getDt(this.inst);
		var nowtime = this.runtime.kahanTime.sum;
		var inst = this.inst;
		if (!this.enabled)
			return;
		if (this.currentTarget && !this.isInRange(this.currentTarget))
		{
			this.currentTarget = null;
			this.speedsCount = 0;
			this.firstTickWithTarget = true;
		}
		if (nowtime >= this.lastCheckTime + 0.1)
		{
			this.lastCheckTime = nowtime;
			if (this.targetMode === 0 && !this.currentTarget)
			{
				this.lookForFirstTarget();
				if (this.currentTarget)
				{
					this.speedsCount = 0;
					this.firstTickWithTarget = true;
					this.oldTargetX = this.currentTarget.x;
					this.oldTargetY = this.currentTarget.y;
					this.runtime.trigger(cr.behaviors.Turret.prototype.cnds.OnTargetAcquired, this.inst);
				}
			}
			else if (this.targetMode === 1)
			{
				var oldTarget = this.currentTarget;
				this.lookForNearestTarget();
				if (this.currentTarget && this.currentTarget !== oldTarget)
				{
					this.speedsCount = 0;
					this.firstTickWithTarget = true;
					this.oldTargetX = this.currentTarget.x;
					this.oldTargetY = this.currentTarget.y;
					this.runtime.trigger(cr.behaviors.Turret.prototype.cnds.OnTargetAcquired, this.inst);
				}
			}
		}
		this.fireTimeCount += dt;
		if (this.currentTarget)
		{
			var targetAngle = cr.angleTo(inst.x, inst.y, this.currentTarget.x, this.currentTarget.y);
			if (this.predictiveAim)
			{
				var Gx = inst.x;
				var Gy = inst.y;
				var Px = this.currentTarget.x;
				var Py = this.currentTarget.y;
				var h = cr.angleTo(Px, Py, this.oldTargetX, this.oldTargetY);
				if (!this.firstTickWithTarget)
					this.addSpeed(cr.distanceTo(Px, Py, this.oldTargetX, this.oldTargetY) / dt);
				var s = this.getSpeed();
				var q = Py - Gy;
				var r = Px - Gx;
				var w = (s * Math.sin(h) * (Gx - Px) - s * Math.cos(h) * (Gy - Py)) / this.projectileSpeed;
				var a = (Math.asin(w / Math.sqrt(q * q + r * r)) - Math.atan2(q, -r)) + Math.PI;
				if (!isNaN(a))
					targetAngle = a;
			}
			if (this.rotateEnabled)
			{
				inst.angle = cr.angleRotate(inst.angle, targetAngle, this.rotateSpeed * dt);
				inst.set_bbox_changed();
			}
			if ((this.fireTimeCount >= this.rateOfFire) &&
				cr.to_degrees(cr.angleDiff(inst.angle, targetAngle)) <= 0.1 &&
				(!this.predictiveAim || this.speedsCount >= 4))
			{
				this.fireTimeCount -= this.rateOfFire;
				if (this.fireTimeCount >= this.rateOfFire)
					this.fireTimeCount = 0;
				this.runtime.trigger(cr.behaviors.Turret.prototype.cnds.OnShoot, this.inst);
			}
			this.oldTargetX = this.currentTarget.x;
			this.oldTargetY = this.currentTarget.y;
			this.firstTickWithTarget = false;
		}
		if (this.fireTimeCount > this.rateOfFire)
			this.fireTimeCount = this.rateOfFire;
	};
	function Cnds() {};
	Cnds.prototype.HasTarget = function ()
	{
		return !!this.currentTarget;
	};
	Cnds.prototype.OnShoot = function ()
	{
		return true;
	};
	Cnds.prototype.OnTargetAcquired = function ()
	{
		return true;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.AcquireTarget = function (obj_)
	{
		if (!obj_)
			return;
		var instances = obj_.getCurrentSol().getObjects();
		var i, len, inst;
		for (i = 0, len = instances.length; i < len; ++i)
		{
			inst = instances[i];
			if (this.currentTarget !== inst && this.isInRange(inst))
			{
				this.currentTarget = inst;
				this.speedsCount = 0;
				this.firstTickWithTarget = true;
				this.oldTargetX = this.currentTarget.x;
				this.oldTargetY = this.currentTarget.y;
				this.runtime.trigger(cr.behaviors.Turret.prototype.cnds.OnTargetAcquired, this.inst);
				break;
			}
		}
	};
	Acts.prototype.AddTarget = function (obj_)
	{
		var targetTypes = this.type.targetTypes;
		if (targetTypes.indexOf(obj_) !== -1)
			return;
		var i, len, t;
		for (i = 0, len = targetTypes.length; i < len; i++)
		{
			t = targetTypes[i];
			if (t.is_family && t.members.indexOf(obj_) !== -1)
				return;
		}
		targetTypes.push(obj_);
	};
	Acts.prototype.ClearTargets = function ()
	{
		this.type.targetTypes.length = 0;
	};
	Acts.prototype.UnacquireTarget = function ()
	{
		this.currentTarget = null;
		this.speedsCount = 0;
		this.firstTickWithTarget = true;
	};
	Acts.prototype.SetEnabled = function (e)
	{
		this.enabled = (e !== 0);
	};
	Acts.prototype.SetRange = function (r)
	{
		this.range = r;
	};
	Acts.prototype.SetRateOfFire = function (r)
	{
		this.rateOfFire = r;
	};
	Acts.prototype.SetRotate = function (r)
	{
		this.rotateEnabled = (r !== 0);
	};
	Acts.prototype.SetRotateSpeed = function (r)
	{
		this.rotateSpeed = cr.to_radians(r);
	};
	Acts.prototype.SetTargetMode = function (s)
	{
		this.targetMode = s;
	};
	Acts.prototype.SetPredictiveAim = function (s)
	{
		this.predictiveAim = (s !== 0);
	};
	Acts.prototype.SetProjectileSpeed = function (s)
	{
		this.projectileSpeed = s;
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.TargetUID = function (ret)
	{
		ret.set_int(this.currentTarget ? this.currentTarget.uid : 0);
	};
	Exps.prototype.Range = function (ret)
	{
		ret.set_float(this.range);
	};
	Exps.prototype.RateOfFire = function (ret)
	{
		ret.set_float(this.rateOfFire);
	};
	Exps.prototype.RotateSpeed = function (ret)
	{
		ret.set_float(cr.to_degrees(this.rotateSpeed));
	};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.custom = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.custom.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;
		this.runtime = type.runtime;
		this.dx = 0;
		this.dy = 0;
		this.cancelStep = 0;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.stepMode = this.properties[0];	// 0=None, 1=Linear, 2=Horizontal then vertical, 3=Vertical then horizontal
		this.pxPerStep = this.properties[1];
		this.enabled = (this.properties[2] !== 0);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"dx": this.dx,
			"dy": this.dy,
			"cancelStep": this.cancelStep,
			"enabled": this.enabled,
			"stepMode": this.stepMode,
			"pxPerStep": this.pxPerStep
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.dx = o["dx"];
		this.dy = o["dy"];
		this.cancelStep = o["cancelStep"];
		this.enabled = o["enabled"];
		this.stepMode = o["stepMode"];
		this.pxPerStep = o["pxPerStep"];
	};
	behinstProto.getSpeed = function ()
	{
		return Math.sqrt(this.dx * this.dx + this.dy * this.dy);
	};
	behinstProto.getAngle = function ()
	{
		return Math.atan2(this.dy, this.dx);
	};
	function sign(x)
	{
		if (x === 0)
			return 0;
		else if (x < 0)
			return -1;
		else
			return 1;
	};
	behinstProto.step = function (x, y, trigmethod)
	{
		if (x === 0 && y === 0)
			return;
		var startx = this.inst.x;
		var starty = this.inst.y;
		var sx, sy, prog;
		var steps = Math.round(Math.sqrt(x * x + y * y) / this.pxPerStep);
		if (steps === 0)
			steps = 1;
		var i;
		for (i = 1; i <= steps; i++)
		{
			prog = i / steps;
			this.inst.x = startx + x * prog;
			this.inst.y = starty + y * prog;
			this.inst.set_bbox_changed();
			this.runtime.trigger(trigmethod, this.inst);
			if (this.cancelStep === 1)
			{
				i--;
				prog = i / steps;
				this.inst.x = startx + x * prog;
				this.inst.y = starty + y * prog;
				this.inst.set_bbox_changed();
				return;
			}
			else if (this.cancelStep === 2)
			{
				return;
			}
		}
	};
	behinstProto.tick = function ()
	{
		var dt = this.runtime.getDt(this.inst);
		var mx = this.dx * dt;
		var my = this.dy * dt;
		var i, steps;
		if ((this.dx === 0 && this.dy === 0) || !this.enabled)
			return;
		this.cancelStep = 0;
		if (this.stepMode === 0)		// none
		{
			this.inst.x += mx;
			this.inst.y += my;
		}
		else if (this.stepMode === 1)	// linear
		{
			this.step(mx, my, cr.behaviors.custom.prototype.cnds.OnCMStep);
		}
		else if (this.stepMode === 2)	// horizontal then vertical
		{
			this.step(mx, 0, cr.behaviors.custom.prototype.cnds.OnCMHorizStep);
			this.cancelStep = 0;
			this.step(0, my, cr.behaviors.custom.prototype.cnds.OnCMVertStep);
		}
		else if (this.stepMode === 3)	// vertical then horizontal
		{
			this.step(0, my, cr.behaviors.custom.prototype.cnds.OnCMVertStep);
			this.cancelStep = 0;
			this.step(mx, 0, cr.behaviors.custom.prototype.cnds.OnCMHorizStep);
		}
		this.inst.set_bbox_changed();
	};
	function Cnds() {};
	Cnds.prototype.IsMoving = function ()
	{
		return this.dx != 0 || this.dy != 0;
	};
	Cnds.prototype.CompareSpeed = function (axis, cmp, s)
	{
		var speed;
		switch (axis) {
		case 0:		speed = this.getSpeed();	break;
		case 1:		speed = this.dx;			break;
		case 2:		speed = this.dy;			break;
		}
		return cr.do_cmp(speed, cmp, s);
	};
	Cnds.prototype.OnCMStep = function ()
	{
		return true;
	};
	Cnds.prototype.OnCMHorizStep = function ()
	{
		return true;
	};
	Cnds.prototype.OnCMVertStep = function ()
	{
		return true;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Stop = function ()
	{
		this.dx = 0;
		this.dy = 0;
	};
	Acts.prototype.Reverse = function (axis)
	{
		switch (axis) {
		case 0:
			this.dx *= -1;
			this.dy *= -1;
			break;
		case 1:
			this.dx *= -1;
			break;
		case 2:
			this.dy *= -1;
			break;
		}
	};
	Acts.prototype.SetSpeed = function (axis, s)
	{
		var a;
		switch (axis) {
		case 0:
			a = this.getAngle();
			this.dx = Math.cos(a) * s;
			this.dy = Math.sin(a) * s;
			break;
		case 1:
			this.dx = s;
			break;
		case 2:
			this.dy = s;
			break;
		}
	};
	Acts.prototype.Accelerate = function (axis, acc)
	{
		var dt = this.runtime.getDt(this.inst);
		var ds = acc * dt;
		var a;
		switch (axis) {
		case 0:
			a = this.getAngle();
			this.dx += Math.cos(a) * ds;
			this.dy += Math.sin(a) * ds;
			break;
		case 1:
			this.dx += ds;
			break;
		case 2:
			this.dy += ds;
			break;
		}
	};
	Acts.prototype.AccelerateAngle = function (acc, a_)
	{
		var dt = this.runtime.getDt(this.inst);
		var ds = acc * dt;
		var a = cr.to_radians(a_);
		this.dx += Math.cos(a) * ds;
		this.dy += Math.sin(a) * ds;
	};
	Acts.prototype.AcceleratePos = function (acc, x, y)
	{
		var dt = this.runtime.getDt(this.inst);
		var ds = acc * dt;
		var a = Math.atan2(y - this.inst.y, x - this.inst.x);
		this.dx += Math.cos(a) * ds;
		this.dy += Math.sin(a) * ds;
	};
	Acts.prototype.SetAngleOfMotion = function (a_)
	{
		var a = cr.to_radians(a_);
		var s = this.getSpeed();
		this.dx = Math.cos(a) * s;
		this.dy = Math.sin(a) * s;
	};
	Acts.prototype.RotateAngleOfMotionClockwise = function (a_)
	{
		var a = this.getAngle() + cr.to_radians(a_);
		var s = this.getSpeed();
		this.dx = Math.cos(a) * s;
		this.dy = Math.sin(a) * s;
	};
	Acts.prototype.RotateAngleOfMotionCounterClockwise = function (a_)
	{
		var a = this.getAngle() - cr.to_radians(a_);
		var s = this.getSpeed();
		this.dx = Math.cos(a) * s;
		this.dy = Math.sin(a) * s;
	};
	Acts.prototype.StopStepping = function (mode)
	{
		this.cancelStep = mode + 1;
	};
	Acts.prototype.PushOutSolid = function (mode)
	{
		var a, ux, uy;
		switch (mode) {
		case 0:
			a = this.getAngle();
			ux = Math.cos(a);
			uy = Math.sin(a);
			this.runtime.pushOutSolid(this.inst, -ux, -uy, Math.max(this.getSpeed() * 3, 100));
			break;
		case 1:
			this.runtime.pushOutSolidNearest(this.inst);
			break;
		case 2:
			this.runtime.pushOutSolid(this.inst, 0, -1, Math.max(Math.abs(this.dy) * 3, 100));
			break;
		case 3:
			this.runtime.pushOutSolid(this.inst, 0, 1, Math.max(Math.abs(this.dy) * 3, 100));
			break;
		case 4:
			this.runtime.pushOutSolid(this.inst, -1, 0, Math.max(Math.abs(this.dx) * 3, 100));
			break;
		case 5:
			this.runtime.pushOutSolid(this.inst, 1, 0, Math.max(Math.abs(this.dx) * 3, 100));
			break;
		}
	};
	Acts.prototype.PushOutSolidAngle = function (a)
	{
		a = cr.to_radians(a);
		var ux = Math.cos(a);
		var uy = Math.sin(a);
		this.runtime.pushOutSolid(this.inst, ux, uy, Math.max(this.getSpeed() * 3, 100));
	};
	Acts.prototype.SetEnabled = function (en)
	{
		this.enabled = (en === 1);
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Speed = function (ret)
	{
		ret.set_float(this.getSpeed());
	};
	Exps.prototype.MovingAngle = function (ret)
	{
		ret.set_float(cr.to_degrees(this.getAngle()));
	};
	Exps.prototype.dx = function (ret)
	{
		ret.set_float(this.dx);
	};
	Exps.prototype.dy = function (ret)
	{
		ret.set_float(this.dy);
	};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.destroy = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.destroy.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
	};
	behinstProto.tick = function ()
	{
		this.inst.update_bbox();
		var bbox = this.inst.bbox;
		var layout = this.inst.layer.layout;
		if (bbox.right < 0 || bbox.bottom < 0 || bbox.left > layout.width || bbox.top > layout.height)
			this.runtime.DestroyInstance(this.inst);
	};
}());
var easeOutBounceArray = [];
var easeInElasticArray = [];
var easeOutElasticArray = [];
var easeInOutElasticArray = [];
var easeInCircle = [];
var easeOutCircle = [];
var easeInOutCircle = [];
var easeOutBack = [];
var easeInOutBack = [];
var litetween_precision = 10000;
var updateLimit = 0; //0.0165;
function easeOutBounce(t,b,c,d) {
	if ((t/=d) < (1/2.75)) {
		return c*(7.5625*t*t) + b;
	} else if (t < (2/2.75)) {
		return c*(7.5625*(t-=(1.5/2.75))*t + .75) + b;
	} else if (t < (2.5/2.75)) {
		return c*(7.5625*(t-=(2.25/2.75))*t + .9375) + b;
	} else {
		return c*(7.5625*(t-=(2.625/2.75))*t + .984375) + b;
	}
}
function integerize(t, d)
{
  return Math.round(t/d*litetween_precision);
}
function easeFunc(easing, t, b, c, d)
{
  switch (easing) {
	case 0:		// linear
		return c*t/d + b;
	case 1:		// easeInQuad
		return c*(t/=d)*t + b;
	case 2:		// easeOutQuad
		return -c *(t/=d)*(t-2) + b;
	case 3:		// easeInOutQuad
		if ((t/=d/2) < 1) return c/2*t*t + b;
		return -c/2 * ((--t)*(t-2) - 1) + b;
	case 4:		// easeInCubic
		return c*(t/=d)*t*t + b;
	case 5:		// easeOutCubic
		return c*((t=t/d-1)*t*t + 1) + b;
	case 6:		// easeInOutCubic
		if ((t/=d/2) < 1)
			return c/2*t*t*t + b;
		return c/2*((t-=2)*t*t + 2) + b;
	case 7:		// easeInQuart
		return c*(t/=d)*t*t*t + b;
	case 8:		// easeOutQuart
		return -c * ((t=t/d-1)*t*t*t - 1) + b;
	case 9:		// easeInOutQuart
		if ((t/=d/2) < 1) return c/2*t*t*t*t + b;
		return -c/2 * ((t-=2)*t*t*t - 2) + b;
	case 10:		// easeInQuint
		return c*(t/=d)*t*t*t*t + b;
	case 11:		// easeOutQuint
		return c*((t=t/d-1)*t*t*t*t + 1) + b;
	case 12:		// easeInOutQuint
		if ((t/=d/2) < 1) return c/2*t*t*t*t*t + b;
		return c/2*((t-=2)*t*t*t*t + 2) + b;
	case 13:		// easeInCircle
		return easeInCircle[integerize(t,d)];
	case 14:		// easeOutCircle
		return easeOutCircle[integerize(t,d)];;
	case 15:		// easeInOutCircle
		return easeInOutCircle[integerize(t,d)];;
	case 16:		// easeInBack
		var s = 0;
		if (s==0) s = 1.70158;
		return c*(t/=d)*t*((s+1)*t - s) + b;
	case 17:		// easeOutBack
		return easeOutBack[integerize(t,d)];
	case 18:		// easeInOutBack
		return easeInOutBack[integerize(t,d)];
	case 19:	//easeInElastic
		return easeInElasticArray[integerize(t, d)];
	case 20:	//easeOutElastic
    return easeOutElasticArray[integerize(t,d)];
	case 21:	//easeInOutElastic
    return easeInOutElasticArray[integerize(t,d)];
	case 22:	//easeInBounce
		return c - easeOutBounceArray[integerize(d-t, d)] + b;
	case 23:	//easeOutBounce
		return easeOutBounceArray[integerize(t, d)];
	case 24:	//easeInOutBounce
		if (t < d/2)
      return (c - easeOutBounceArray[integerize(d-(t*2), d)] + b) * 0.5 +b;
		else
      return easeOutBounceArray[integerize(t*2-d, d)] * .5 + c*.5 + b;
	case 25:	//easeInSmoothstep
		var mt = (t/d) / 2;
		return (2*(mt * mt * (3 - 2*mt)));
	case 26:	//easeOutSmoothstep
		var mt = ((t/d) + 1) / 2;
		return ((2*(mt * mt * (3 - 2*mt))) - 1);
	case 27:	//easeInOutSmoothstep
		var mt = (t / d);
		return (mt * mt * (3 - 2*mt));
	};
	return 0;
};
(function preCalculateArray() {
  var d = 1.0;
  var b = 0.0;
  var c = 1.0;
  var result = 0.0;
  var a = 0;
  var p = 0;
  var t = 0;
  var s = 0;
  for (var ti = 0; ti <= litetween_precision; ti++) {
    t = ti/litetween_precision;
  	if ((t/=d) < (1/2.75)) {
  		result = c*(7.5625*t*t) + b;
  	} else if (t < (2/2.75)) {
  		result = c*(7.5625*(t-=(1.5/2.75))*t + .75) + b;
  	} else if (t < (2.5/2.75)) {
  		result = c*(7.5625*(t-=(2.25/2.75))*t + .9375) + b;
  	} else {
  		result = c*(7.5625*(t-=(2.625/2.75))*t + .984375) + b;
  	}
    easeOutBounceArray[ti] = easeOutBounce(ti/litetween_precision, b, c, d);
    t = ti/litetween_precision; a = 0; p = 0;
    if (t==0) result = b; if ((t/=d)==1) result = b+c;
    if (p==0) p=d*.3;	if (a==0 || a < Math.abs(c)) { a=c; var s=p/4; }
    else var s = p/(2*Math.PI) * Math.asin (c/a);
		result = -(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )) + b;
    easeInElasticArray[ti] = result;
    t = ti/litetween_precision; a = 0; p = 0;
		if (t==0) result= b;  if ((t/=d)==1) result= b+c;  if (p == 0) p=d*.3;
		if (a==0 || a < Math.abs(c)) { a=c; var s=p/4; }
		else var s = p/(2*Math.PI) * Math.asin (c/a);
		result= (a*Math.pow(2,-10*t) * Math.sin( (t*d-s)*(2*Math.PI)/p ) + c + b);
    easeOutElasticArray[ti] = result;
    t = ti/litetween_precision; a = 0; p = 0;
		if (t==0) result = b;
		if ((t/=d/2)==2) result = b+c;
		if (p==0) p=d*(.3*1.5);
		if (a==0 || a < Math.abs(c)) { a=c; var s=p/4; }
		else var s = p/(2*Math.PI) * Math.asin (c/a);
		if (t < 1)
      result = -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )) + b
    else
		  result = a*Math.pow(2,-10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )*.5 + c + b;
    easeInOutElasticArray[ti] = result;
    t = ti/litetween_precision; easeInCircle[ti] = -(Math.sqrt(1-t*t) - 1);
    t = ti/litetween_precision; easeOutCircle[ti] = Math.sqrt(1 - ((t-1)*(t-1)));
    t = ti/litetween_precision;
		if ((t/=d/2) < 1) result = -c/2 * (Math.sqrt(1 - t*t) - 1) + b
    else result = c/2 * (Math.sqrt(1 - (t-=2)*t) + 1) + b;
    easeInOutCircle[ti] = result;
    t = ti/litetween_precision; s = 0;
		if (s==0) s = 1.70158;
		result = c*((t=t/d-1)*t*((s+1)*t + s) + 1) + b;
    easeOutBack[ti] = result;
    t = ti/litetween_precision; s = 0; if (s==0) s = 1.70158;
		if ((t/=d/2) < 1) result = c/2*(t*t*(((s*=(1.525))+1)*t - s)) + b;
		result = c/2*((t-=2)*t*(((s*=(1.525))+1)*t + s) + 2) + b;
    easeInOutBack[ti] = result;
	}
}())
var TweenObject = function()
{
	var constructor = function (tname, tweened, easefunc, initial, target, duration, enforce)
	{
    this.name = tname;
    this.value = 0;
    this.setInitial(initial);
    this.setTarget(target);
    this.easefunc = easefunc;
    this.tweened = tweened;
    this.duration = duration;
    this.progress = 0;
    this.state = 0;
    this.onStart = false;
    this.onEnd = false;
    this.onReverseStart = false;
    this.onReverseEnd = false;
    this.lastKnownValue = 0;
    this.lastKnownValue2 = 0;
    this.enforce = enforce;
    this.pingpong = 1.0;
	}
	return constructor;
}();
(function () {
	TweenObject.prototype = {
	};
  TweenObject.prototype.setInitial = function (initial)
  {
    this.initialparam1 = parseFloat(initial.split(",")[0]);
    this.initialparam2 = parseFloat(initial.split(",")[1]);
		this.lastKnownValue = 0;
		this.lastKnownValue2 = 0;
  }
  TweenObject.prototype.setTarget = function (target)
  {
    this.targetparam1 = parseFloat(target.split(",")[0]);
    this.targetparam2 = parseFloat(target.split(",")[1]);
    if (isNaN(this.targetparam2)) this.targetparam2 = this.targetparam1;
  }
  TweenObject.prototype.OnTick = function(dt)
  {
    if (this.state === 0) return -1.0;
    if (this.state === 1)
      this.progress += dt;
    if (this.state === 2)
      this.progress -= dt;
    if (this.state === 3) {
      this.state = 0;
    }
    if (this.state === 4) {
      this.progress += dt * this.pingpong;
    }
    if (this.state === 5) {
      this.progress += dt * this.pingpong;
    }
    if (this.progress < 0) {
      this.progress = 0;
      if (this.state !== 4) {
        this.state = 0;
      } else {
        this.pingpong = 1;
      }
      this.onReverseEnd = true;
      return 0.0;
    } else if (this.progress > this.duration) {
      this.progress = this.duration;
      if (this.state === 4) {
        this.pingpong = -1;
      } else if (this.state === 5) {
        this.progress = 0.0;
      } else {
        this.state = 0;
      }
      this.onEnd = true;
      return 1.0;
    } else {
      var factor = easeFunc(this.easefunc, this.progress, 0, 1, this.duration);
      return factor;
    }
  };
}());
;
;
function trim (str) {
    return str.replace(/^\s\s*/, '').replace(/\s\s*$/, '');
}
cr.behaviors.lunarray_LiteTween = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.lunarray_LiteTween.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
		this.i = 0;		// progress
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
    this.playmode = this.properties[0];
    this.active = (this.playmode == 1) || (this.playmode == 2) || (this.playmode == 4) || (this.playmode == 5);
		this.tweened = this.properties[1]; // 0=Position|1=Size|2=Width|3=Height|4=Angle|5=Opacity|6=Value only|7=Horizontal|8=Vertical
		this.easing = this.properties[2];
		this.target = this.properties[3];
		this.targetmode = this.properties[4];
    if (this.targetmode === 1) this.target = "relative("+this.target+")";
		this.duration = this.properties[5];
		this.enforce = (this.properties[6] === 1);
    this.value = 0;
    this.tween_list = {};
    this.addToTweenList("default", this.tweened, this.easing, "current", this.target, this.duration, this.enforce);
    if (this.properties[0] === 1) this.startTween(0)
    if (this.properties[0] === 2) this.startTween(2)
    if (this.properties[0] === 3) this.startTween(3)
	};
	behinstProto.parseCurrent = function(tweened, parseText)
  {
    if (parseText === undefined) parseText = "current";
    var parsed = trim(parseText);
    parseText = trim(parseText);
    var value = this.value;
    if (parseText === "current") {
      switch (tweened) {
        case 0: parsed = this.inst.x + "," + this.inst.y; break;
        case 1: parsed = this.inst.width + "," + this.inst.height; break;
        case 2: parsed = this.inst.width + "," + this.inst.height; break;
        case 3: parsed = this.inst.width + "," + this.inst.height; break;
        case 4: parsed = cr.to_degrees(this.inst.angle) + "," + cr.to_degrees(this.inst.angle); break;
        case 5: parsed = (this.inst.opacity*100) + "," + (this.inst.opacity*100); break;
        case 6: parsed = value + "," + value; break;
        case 7: parsed = this.inst.x + "," + this.inst.y; break;
        case 8: parsed = this.inst.x + "," + this.inst.y; break;
        default:  break;
      }
    }
    if (parseText.substring(0,8) === "relative") {
      var param1 = parseText.match(/\((.*?)\)/);
      if (param1) {
        var relativex = parseFloat(param1[1].split(",")[0]);
        var relativey = parseFloat(param1[1].split(",")[1]);
      }
      if (isNaN(relativex)) relativex = 0;
      if (isNaN(relativey)) relativey = 0;
      switch (tweened) {
        case 0: parsed = (this.inst.x+relativex) + "," + (this.inst.y+relativey); break;
        case 1: parsed = (this.inst.width+relativex) + "," + (this.inst.height+relativey); break;
        case 2: parsed = (this.inst.width+relativex) + "," + (this.inst.height+relativey); break;
        case 3: parsed = (this.inst.width+relativex) + "," + (this.inst.height+relativey); break;
        case 4: parsed = (cr.to_degrees(this.inst.angle)+relativex) + "," + (cr.to_degrees(this.inst.angle)+relativey); break;
        case 5: parsed = (this.inst.opacity*100+relativex) + "," + (this.inst.opacity*100+relativey); break;
        case 6: parsed = value+relativex + "," + value+relativex; break;
        case 7: parsed = (this.inst.x+relativex) + "," + (this.inst.y); break;
        case 8: parsed = (this.inst.x) + "," + (this.inst.y+relativex); break;
        default:  break;
      }
    }
    return parsed;
  };
	behinstProto.addToTweenList = function(tname, tweened, easing, init, targ, duration, enforce)
  {
    init = this.parseCurrent(tweened, init);
    targ = this.parseCurrent(tweened, targ);
    if (this.tween_list[tname] !== undefined) {
      delete this.tween_list[tname]
    }
    this.tween_list[tname] = new TweenObject(tname, tweened, easing, init, targ, duration, enforce);
  };
	behinstProto.saveToJSON = function ()
	{
	};
	behinstProto.loadFromJSON = function (o)
	{
	};
	behinstProto.setProgressTo = function (mark)
	{
    if (mark > 1.0) mark = 1.0;
    if (mark < 0.0) mark = 0.0;
    for (var i in this.tween_list) {
      var inst = this.tween_list[i];
      inst.lastKnownValue = 0;
      inst.lastKnownValue2 = 0;
      inst.state = 3;
      inst.progress = mark * inst.duration;
      var factor = inst.OnTick(0);
      this.updateTween(inst, factor);
    }
  }
	behinstProto.startTween = function (startMode)
	{
    for (var i in this.tween_list) {
      var inst = this.tween_list[i];
      if (startMode === 0) {
        inst.progress = 0.000001;
        inst.lastKnownValue = 0;
        inst.lastKnownValue2 = 0;
        inst.onStart = true;
        inst.state = 1;
      }
      if (startMode === 1) {
        inst.state = 1;
      }
      if (startMode === 2) {
        inst.progress = 0.000001;
        inst.lastKnownValue = 0;
        inst.lastKnownValue2 = 0;
        inst.onStart = true;
        inst.state = 4;
      }
      if (startMode === 3) {
        inst.progress = 0.000001;
        inst.lastKnownValue = 0;
        inst.lastKnownValue2 = 0;
        inst.onStart = true;
        inst.state = 5;
      }
    }
  }
	behinstProto.stopTween = function (stopMode)
	{
    for (var i in this.tween_list) {
      var inst = this.tween_list[i];
      if (stopMode === 1) inst.progress = 0.0;
      if (stopMode === 2) inst.progress = inst.duration;
      inst.state = 3;
      var factor = inst.OnTick(0);
      this.updateTween(inst, factor);
    }
  }
	behinstProto.reverseTween = function(reverseMode)
	{
    for (var i in this.tween_list) {
      var inst = this.tween_list[i];
      if (reverseMode === 1) {
        inst.progress = inst.duration;
        inst.lastKnownValue = 0;
        inst.lastKnownValue2 = 0;
        inst.onReverseStart = true;
      }
      inst.state = 2;
    }
  }
	behinstProto.updateTween = function (inst, factor)
	{
    if (inst.tweened === 0) {
      if (inst.enforce) {
	      this.inst.x = inst.initialparam1 + (inst.targetparam1 - inst.initialparam1) * factor;
        this.inst.y = inst.initialparam2 + (inst.targetparam2 - inst.initialparam2) * factor;
      } else {
        this.inst.x += ((inst.targetparam1 - inst.initialparam1) * factor) - inst.lastKnownValue;
        this.inst.y += ((inst.targetparam2 - inst.initialparam2) * factor) - inst.lastKnownValue2;
        inst.lastKnownValue = ((inst.targetparam1 - inst.initialparam1) * factor);
        inst.lastKnownValue2 = ((inst.targetparam2 - inst.initialparam2) * factor);
      }
    } else if (inst.tweened === 1) {
      if (inst.enforce) {
  			this.inst.width = inst.initialparam1 + (inst.targetparam1 - inst.initialparam1) * factor;
	   		this.inst.height = inst.initialparam2 + (inst.targetparam2 - inst.initialparam2) * factor;
      } else {
      	this.inst.width += ((inst.targetparam1 - inst.initialparam1) * factor) - inst.lastKnownValue;
      	this.inst.height += ((inst.targetparam2 - inst.initialparam2) * factor) - inst.lastKnownValue2;
        inst.lastKnownValue = ((inst.targetparam1 - inst.initialparam1) * factor);
        inst.lastKnownValue2 = ((inst.targetparam2 - inst.initialparam2) * factor);
      }
    } else if (inst.tweened === 2) {
      if (inst.enforce) {
      	this.inst.width = inst.initialparam1 + ((inst.targetparam1 - inst.initialparam1) * factor);
      } else {
      	this.inst.width += ((inst.targetparam1 - inst.initialparam1) * factor) - inst.lastKnownValue;
        inst.lastKnownValue = ((inst.targetparam1 - inst.initialparam1) * factor);
      }
    } else if (inst.tweened === 3) {
      if (inst.enforce) {
      	this.inst.height = inst.initialparam2 + ((inst.targetparam2 - inst.initialparam2) * factor);
      } else {
      	this.inst.height += ((inst.targetparam2 - inst.initialparam2) * factor) - inst.lastKnownValue2;
        inst.lastKnownValue2 = ((inst.targetparam2 - inst.initialparam2) * factor);
      }
    } else if (inst.tweened === 4) {
      if (inst.enforce) {
  		  var tangle = inst.initialparam1 + (inst.targetparam1 - inst.initialparam1) * factor;
  		  this.inst.angle = cr.clamp_angle(cr.to_radians(tangle));
      } else {
  		  var tangle = ((inst.targetparam1 - inst.initialparam1) * factor) - inst.lastKnownValue;
  		  this.inst.angle = cr.clamp_angle(this.inst.angle + cr.to_radians(tangle));
        inst.lastKnownValue = (inst.targetparam1 - inst.initialparam1) * factor;
      }
    } else if (inst.tweened === 5) {
      if (inst.enforce) {
  		  this.inst.opacity = (inst.initialparam1 + (inst.targetparam1 - inst.initialparam1) * factor) / 100;
      } else {
  		  this.inst.opacity += (((inst.targetparam1 - inst.initialparam1) * factor) - inst.lastKnownValue) / 100;
        inst.lastKnownValue = ((inst.targetparam1 - inst.initialparam1) * factor);
      }
    } else if (inst.tweened === 6) {
      if (inst.enforce) {
  		  this.value = (inst.initialparam1 + (inst.targetparam1 - inst.initialparam1) * factor);
      } else {
  		  this.value += (((inst.targetparam1 - inst.initialparam1) * factor) - inst.lastKnownValue);
        inst.lastKnownValue = ((inst.targetparam1 - inst.initialparam1) * factor);
      }
    } else if (inst.tweened === 7) {
      if (inst.enforce) {
	      this.inst.x = inst.initialparam1 + (inst.targetparam1 - inst.initialparam1) * factor;
      } else {
        this.inst.x += ((inst.targetparam1 - inst.initialparam1) * factor) - inst.lastKnownValue;
        inst.lastKnownValue = ((inst.targetparam1 - inst.initialparam1) * factor);
      }
    } else if (inst.tweened === 8) {
      if (inst.enforce) {
        this.inst.y = inst.initialparam2 + (inst.targetparam2 - inst.initialparam2) * factor;
      } else {
        this.inst.y += ((inst.targetparam2 - inst.initialparam2) * factor) - inst.lastKnownValue2;
        inst.lastKnownValue2 = ((inst.targetparam2 - inst.initialparam2) * factor);
      }
    }
    this.inst.set_bbox_changed();
  }
	behinstProto.tick = function ()
	{
		var dt = this.runtime.getDt(this.inst);
    var inst = this.tween_list["default"];
    if (inst.state !== 0) {
      if (inst.onStart) {
  			this.runtime.trigger(cr.behaviors.lunarray_LiteTween.prototype.cnds.OnStart, this.inst);
        inst.onStart = false;
      }
      if (inst.onReverseStart) {
  		  this.runtime.trigger(cr.behaviors.lunarray_LiteTween.prototype.cnds.OnReverseStart, this.inst);
        inst.onReverseStart = false;
      }
      this.active = (inst.state == 1) || (inst.state == 2) || (inst.state == 4) || (inst.state == 5);
      var factor = inst.OnTick(dt);
      this.updateTween(inst, factor);
      if (inst.onEnd) {
  		  this.runtime.trigger(cr.behaviors.lunarray_LiteTween.prototype.cnds.OnEnd, this.inst);
        inst.onEnd = false;
      }
      if (inst.onReverseEnd) {
  		  this.runtime.trigger(cr.behaviors.lunarray_LiteTween.prototype.cnds.OnReverseEnd, this.inst);
        inst.onReverseEnd = false;
      }
    }
	};
	behaviorProto.cnds = {};
	var cnds = behaviorProto.cnds;
	cnds.IsActive = function ()
	{
		return (this.tween_list["default"].state !== 0);
	};
	cnds.CompareProgress = function (cmp, v)
	{
    var inst = this.tween_list["default"];
		return cr.do_cmp((inst.progress / inst.duration), cmp, v);
	};
	cnds.OnStart = function ()
	{
    if (this.tween_list["default"] === undefined)
      return false;
    return this.tween_list["default"].onStart;
	};
	cnds.OnReverseStart = function ()
	{
    if (this.tween_list["default"] === undefined)
      return false;
    return this.tween_list["default"].onReverseStart;
	};
  cnds.OnEnd = function ()
	{
    if (this.tween_list["default"] === undefined)
      return false;
    return this.tween_list["default"].onEnd;
	};
  cnds.OnReverseEnd = function ()
	{
    if (this.tween_list["default"] === undefined)
      return false;
    return this.tween_list["default"].onReverseEnd;
	};
	behaviorProto.acts = {};
	var acts = behaviorProto.acts;
	acts.Start = function (startmode)
	{
    this.startTween(startmode);
	};
	acts.Stop = function (stopmode)
	{
    this.stopTween(stopmode);
	};
	acts.Reverse = function (revMode)
	{
    this.reverseTween(revMode);
	};
 	acts.ProgressTo = function (progress)
	{
    this.setProgressTo(progress);
	};
	acts.SetDuration = function (x)
	{
    if (isNaN(x)) return;
    if (x < 0) return;
    if (this.tween_list["default"] === undefined) return;
		this.tween_list["default"].duration = x;
	};
	acts.SetEnforce = function (x)
	{
    if (this.tween_list["default"] === undefined) return;
		this.tween_list["default"].enforce = (x===1);
	};
	acts.SetInitial = function (x)
	{
    if (this.tween_list["default"] === undefined) return;
    var init = this.parseCurrent(this.tween_list["default"].tweened, x);
		this.tween_list["default"].setInitial(init);
	};
	acts.SetTarget = function (targettype, absrel, x)
	{
    if (this.tween_list["default"] === undefined) return;
    if (isNaN(x)) return;
    var parsed = x + "";
    var inst = this.tween_list["default"];
    this.targetmode = absrel;
    if (absrel === 1) {
      switch (targettype) {
        case 0: parsed = (this.inst.x + x) + "," + inst.targetparam2; break;
        case 1: parsed = inst.targetparam1 + "," + (this.inst.y + x); break;
        case 2: parsed = "" + cr.to_degrees(this.inst.angle + cr.to_radians(x)); break; //angle
        case 3: parsed = "" + (this.inst.opacity*100) + x; break; //opacity
        case 4: parsed = (this.inst.width + x) + "," + inst.targetparam2; break; //width
        case 5: parsed = inst.targetparam1 + "," + (this.inst.height + x); break; //height
        case 6: parsed = x + "," + x; break; //value
        default:  break;
      }
    } else {
      switch (targettype) {
        case 0: parsed = x + "," + inst.targetparam2; break;
        case 1: parsed = inst.targetparam1 + "," + x; break;
        case 2: parsed = x+","+x; break; //angle
        case 3: parsed = x+","+x; break; //opacity
        case 4: parsed = x + "," + inst.targetparam2; break; //width
        case 5: parsed = inst.targetparam1 + "," + x; break; //height
        case 6: parsed = x + "," + x; break; //value
        default:  break;
      }
    }
    var init = this.parseCurrent(this.tween_list["default"].tweened, "current");
    var targ = this.parseCurrent(this.tween_list["default"].tweened, parsed);
 		inst.setInitial(init);
 		inst.setTarget(targ);
	};
	acts.SetTweenedProperty = function (x)
	{
    if (this.tween_list["default"] === undefined) return;
		this.tween_list["default"].tweened = x;
	};
	acts.SetEasing = function (x)
	{
    if (this.tween_list["default"] === undefined) return;
		this.tween_list["default"].easefunc = x;
	};
 	acts.SetValue = function (x)
	{
    var inst = this.tween_list["default"];
		this.value = x;
    if (inst.tweened === 6)
      inst.setInitial( this.parseCurrent(inst.tweened, "current") );
	};
	acts.SetParameter = function (tweened, easefunction, target, duration, enforce)
	{
    if (this.tween_list["default"] === undefined) {
      this.addToTweenList("default", tweened, easefunction, initial, target, duration, enforce);
    } else {
      var inst = this.tween_list["default"];
      inst.tweened = tweened;
  		inst.easefunc = easefunction;
      inst.setInitial( this.parseCurrent(tweened, "current") );
      inst.setTarget( this.parseCurrent(tweened, target) );
      inst.duration = duration;
      inst.enforce = (enforce === 1);
    }
	};
	behaviorProto.exps = {};
	var exps = behaviorProto.exps;
	exps.Progress = function (ret)
	{
    var progress = this.tween_list["default"].progress/this.tween_list["default"].duration;
    ret.set_float(progress);
	};
	exps.Duration = function (ret)
	{
    ret.set_float(this.tween_list["default"].duration);
	};
	exps.Target = function (ret)
	{
    var inst = this.tween_list["default"];
    var parsed = "N/A";
    switch (inst.tweened) {
      case 0: parsed = inst.targetparam1; break;
      case 1: parsed = inst.targetparam2; break;
      case 2: parsed = inst.targetparam1; break;
      case 3: parsed = inst.targetparam1; break;
      case 4: parsed = inst.targetparam1; break;
      case 5: parsed = inst.targetparam2; break;
      case 6: parsed = inst.targetparam1; break;
      default:  break;
    }
    ret.set_float(parsed);
	};
	exps.Value = function (ret)
	{
    var tval = this.value;
    ret.set_float(tval);
	};
}());
;
;
cr.behaviors.solid = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.solid.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.inst.extra.solidEnabled = (this.properties[0] !== 0);
	};
	behinstProto.tick = function ()
	{
	};
	function Cnds() {};
	Cnds.prototype.IsEnabled = function ()
	{
		return this.inst.extra.solidEnabled;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetEnabled = function (e)
	{
		this.inst.extra.solidEnabled = !!e;
	};
	behaviorProto.acts = new Acts();
}());
cr.getProjectModel = function() { return [
	null,
	"Menu",
	[
	[
		cr.plugins_.Audio,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Mouse,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Sprite,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		false
	]
,	[
		cr.plugins_.Spritefont2,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		true
	]
,	[
		cr.plugins_.Text,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		false
	]
,	[
		cr.plugins_.TiledBg,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		true
	]
,	[
		cr.plugins_.Tilemap,
		false,
		true,
		true,
		true,
		false,
		true,
		true,
		true,
		true
	]
,	[
		cr.plugins_.Touch,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.MagiCam,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
	],
	[
	[
		"t0",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6696167220540892,
			[
				["images/platform-sheet0.png", 2180, 0, 0, 64, 64, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			3947403186417932
		]
		],
		false,
		false,
		6284304404819803,
		[],
		null
	]
,	[
		"t1",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			554091824705982,
			[
				["images/platformleft-sheet0.png", 2778, 0, 0, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0,-0.5,0.5,-0.5,0.5,0.5,0,0.5,-0.46875,0.46875,-0.5,0],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			9216947502519198
		]
		],
		false,
		false,
		427723330199109,
		[],
		null
	]
,	[
		"t2",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1878882440297958,
			[
				["images/platformright-sheet0.png", 2789, 0, 0, 64, 64, 1, 0.5, 0.5,[],[-0.5,-0.5,0,-0.5,0.46875,-0.46875,0.5,0,0.46875,0.46875,0,0.5,-0.5,0.5],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			5238305396235241
		]
		],
		false,
		false,
		4251906213353278,
		[],
		null
	]
,	[
		"t3",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1635281582837503,
			[
				["images/platformmiddle-sheet0.png", 1227, 0, 0, 64, 64, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			7000141903117175
		]
		],
		false,
		false,
		756557138908371,
		[],
		null
	]
,	[
		"t4",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2309239799044748,
			[
				["images/lvl2platform-sheet0.png", 2098, 0, 0, 64, 64, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			7919600756591832
		]
		],
		false,
		false,
		4896854359180891,
		[],
		null
	]
,	[
		"t5",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6558595456129575,
			[
				["images/lvl2platformiddle-sheet0.png", 1248, 0, 0, 64, 64, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			2512904340070319
		]
		],
		false,
		false,
		4766691126676223,
		[],
		null
	]
,	[
		"t6",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9478256189503022,
			[
				["images/lvl2platformleft-sheet0.png", 2600, 0, 0, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0,-0.5,0.5,-0.5,0.5,0.5,0,0.5,-0.46875,0.46875,-0.5,0],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			5922986730337175
		]
		],
		false,
		false,
		197702551496486,
		[],
		null
	]
,	[
		"t7",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7469248211562392,
			[
				["images/lvl2platformright-sheet0.png", 2594, 0, 0, 64, 64, 1, 0.5, 0.5,[],[-0.5,-0.5,0,-0.5,0.46875,-0.46875,0.5,0,0.46875,0.46875,0,0.5,-0.5,0.5],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			1334982187905008
		]
		],
		false,
		false,
		1122247261265123,
		[],
		null
	]
,	[
		"t8",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7058799895188779,
			[
				["images/lvl3platformright-sheet0.png", 1193, 0, 0, 64, 64, 1, 0.5, 0.5,[],[-0.5,-0.5,0,-0.5,0.46875,-0.46875,0.5,0,0.46875,0.46875,0,0.5,-0.5,0.5],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			4676047220255956
		]
		],
		false,
		false,
		4431268945021477,
		[],
		null
	]
,	[
		"t9",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6864166083049448,
			[
				["images/lvl3platformleft-sheet0.png", 1167, 0, 0, 64, 64, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			318693477807822
		]
		],
		false,
		false,
		9085406304298369,
		[],
		null
	]
,	[
		"t10",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2646522565867621,
			[
				["images/lvl3platform-sheet0.png", 927, 0, 0, 64, 64, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			408503244075913
		]
		],
		false,
		false,
		9264957590052738,
		[],
		null
	]
,	[
		"t11",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2793014995106437,
			[
				["images/lvl3platformmiddle-sheet0.png", 804, 0, 0, 64, 64, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			5939666294062942
		]
		],
		false,
		false,
		7165675756888072,
		[],
		null
	]
,	[
		"t12",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8116503875774327,
			[
				["images/lvl3platform-sheet0.png", 927, 0, 0, 64, 64, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			4413021868344513
		]
		],
		false,
		false,
		3689585758849308,
		[],
		null
	]
,	[
		"t13",
		cr.plugins_.Sprite,
		false,
		[965593419207317],
		4,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3437899275768298,
			[
				["images/dash-sheet0.png", 92, 0, 0, 16, 16, 1, 0, 0.5,[],[],4]
			]
			]
		],
		[
		[
			"DestroyOutsideLayout",
			cr.behaviors.destroy,
			5397603616846786
		]
,		[
			"FadeIn",
			cr.behaviors.Fade,
			242774533673009
		]
,		[
			"FadeOut",
			cr.behaviors.Fade,
			8159207988147031
		]
,		[
			"Solid",
			cr.behaviors.solid,
			6050701542488939
		]
		],
		false,
		false,
		5617937181405727,
		[],
		null
	]
,	[
		"t14",
		cr.plugins_.Mouse,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7915507787410662,
		[],
		null
		,[]
	]
,	[
		"t15",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2629025572687306,
			[
				["images/sprite-sheet0.png", 146, 0, 0, 200, 200, 1, 0.5, 0.5,[],[],3]
			]
			]
		],
		[
		],
		false,
		false,
		4728821964586612,
		[],
		null
	]
,	[
		"t16",
		cr.plugins_.Sprite,
		false,
		[1097470302046482],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8139196447281733,
			[
				["images/playerrocket-sheet0.png", 1027, 0, 0, 32, 14, 1, 0.5, 0.5,[],[-0.4707030951976776,-0.4330357015132904,0,-0.2857140004634857,0.34375,-0.1428569853305817,0.40625,0,0.34375,0.1428570151329041,0,0.2857139706611633,-0.4667969048023224,0.4241070151329041,-0.40625,0],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			9043969313256249
		]
,		[
			"DestroyOutsideLayout",
			cr.behaviors.destroy,
			4684183829355165
		]
		],
		false,
		false,
		9260845788079237,
		[],
		null
	]
,	[
		"t17",
		cr.plugins_.Sprite,
		false,
		[],
		3,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3158300897331808,
			[
				["images/guy-sheet0.png", 27665, 1, 1, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0]
			]
			]
,			[
			"runRight",
			5,
			false,
			1,
			0,
			false,
			689407824456875,
			[
				["images/guy-sheet0.png", 27665, 1, 1, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0],
				["images/guy-sheet0.png", 27665, 67, 1, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0],
				["images/guy-sheet0.png", 27665, 133, 1, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0],
				["images/guy-sheet0.png", 27665, 1, 67, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0],
				["images/guy-sheet0.png", 27665, 67, 67, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0],
				["images/guy-sheet0.png", 27665, 133, 67, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0],
				["images/guy-sheet0.png", 27665, 1, 133, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0],
				["images/guy-sheet0.png", 27665, 67, 133, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0],
				["images/guy-sheet0.png", 27665, 133, 133, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0],
				["images/guy-sheet1.png", 23823, 1, 1, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0],
				["images/guy-sheet1.png", 23823, 67, 1, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0],
				["images/guy-sheet1.png", 23823, 133, 1, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0],
				["images/guy-sheet1.png", 23823, 1, 67, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0]
			]
			]
,			[
			"fall",
			5,
			false,
			1,
			0,
			false,
			374823520072958,
			[
				["images/guy-sheet1.png", 23823, 1, 1, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0]
			]
			]
,			[
			"womanStand",
			5,
			false,
			1,
			0,
			false,
			5473230124906904,
			[
				["images/guy-sheet1.png", 23823, 67, 67, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0]
			]
			]
,			[
			"womanRun",
			5,
			false,
			1,
			0,
			false,
			9162070880151605,
			[
				["images/guy-sheet1.png", 23823, 133, 67, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0],
				["images/guy-sheet1.png", 23823, 1, 133, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0],
				["images/guy-sheet1.png", 23823, 67, 133, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0],
				["images/guy-sheet1.png", 23823, 133, 133, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0],
				["images/guy-sheet2.png", 9413, 1, 1, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0],
				["images/guy-sheet2.png", 9413, 67, 1, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0]
			]
			]
,			[
			"womanFall",
			5,
			false,
			1,
			0,
			false,
			7095400452286832,
			[
				["images/guy-sheet2.png", 9413, 133, 1, 64, 64, 1, 0.5, 0.5,[],[-0.15625,-0.1328119933605194,-0.1640619933605194,0.3671879768371582,-0.003906011581420898,0.4726560115814209,0.1835939884185791,0.3476560115814209,0.1328129768371582,-0.1523439884185791],0]
			]
			]
,			[
			"manLie",
			5,
			false,
			1,
			0,
			false,
			259305637105245,
			[
				["images/guy-sheet2.png", 9413, 1, 67, 64, 64, 1, 0.5, 0.5,[],[-0.140625,0.140625,0.3320310115814209,0.0625,0.2578129768371582,0.25,0,0.359375,-0.3125,0.3125],0]
			]
			]
		],
		[
		[
			"Platform",
			cr.behaviors.Platform,
			6875540634412212
		]
,		[
			"Flash",
			cr.behaviors.Flash,
			500220531906167
		]
,		[
			"CustomMovement",
			cr.behaviors.custom,
			9948716747013445
		]
		],
		false,
		false,
		329373694793464,
		[],
		null
	]
,	[
		"t18",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		1,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			597840199164024,
			[
				["images/btnleft-sheet0.png", 982, 0, 0, 80, 80, 1, 0.5, 0.5,[],[-0.3499999940395355,-0.3499999940395355,0,-0.5,0.3500000238418579,-0.3499999940395355,0.5,0,0.3500000238418579,0.3500000238418579,0,0.5,-0.3499999940395355,0.3500000238418579,-0.5,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		2648782180713274,
		[["setcolor", "SetColor"]],
		null
	]
,	[
		"t19",
		cr.plugins_.Touch,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2438410604017473,
		[],
		null
		,[1]
	]
,	[
		"t20",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		1,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			165114427209159,
			[
				["images/btnright-sheet0.png", 977, 0, 0, 80, 80, 1, 0.5, 0.5,[],[-0.3499999940395355,-0.3499999940395355,0,-0.5,0.3500000238418579,-0.3499999940395355,0.5,0,0.3500000238418579,0.3500000238418579,0,0.5,-0.3499999940395355,0.3500000238418579,-0.5,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		8957309755090471,
		[["setcolor", "SetColor"]],
		null
	]
,	[
		"t21",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/tiledbackground.png", 71502, 1],
		null,
		[
		],
		false,
		false,
		3265234854100943,
		[],
		null
	]
,	[
		"t22",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		1,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9992098802897395,
			[
				["images/chalk-sheet0.png", 6442, 67, 1, 32, 16, 1, 0.5, 0.5,[],[-0.328125,-0.15625,0,-0.4375,0.3125,-0.125,0.234375,0,0.234375,-0.03125,0,0.25,-0.3125,0.125,-0.40625,0],0],
				["images/chalk-sheet0.png", 6442, 1, 1, 64, 32, 1, 0.5, 0.5,[],[-0.359375,-0.21875,0,-0.28125,0.359375,-0.21875,0.359375,0,0.3125,0.125,0,0.25,-0.328125,0.15625,-0.28125,0],0],
				["images/chalk-sheet0.png", 6442, 1, 35, 64, 32, 1, 0.5, 0.5,[],[-0.359375,-0.21875,0,-0.28125,0.359375,-0.21875,0.359375,0,0.3125,0.125,0,0.25,-0.328125,0.15625,-0.28125,0],0],
				["images/chalk-sheet0.png", 6442, 1, 69, 64, 32, 1, 0.5, 0.5,[],[-0.28125,-0.0625,0,-0.3125,0.265625,-0.03125,0.359375,0,0.359375,0.21875,0,0.15625,-0.328125,0.15625,-0.328125,0],0]
			]
			]
		],
		[
		[
			"Fade",
			cr.behaviors.Fade,
			5234581830007823
		]
		],
		false,
		false,
		8481932991306284,
		[["setcolor", "SetColor"]],
		null
	]
,	[
		"t23",
		cr.plugins_.MagiCam,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		6196723251111743,
		[],
		null
		,[]
	]
,	[
		"t24",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4315387091672011,
			[
				["images/spike-sheet0.png", 2243, 0, 0, 64, 64, 1, 0.5, 0.5,[],[-0.46875,0.4296879768371582,0.421875,0.4335939884185791,-0.0351560115814209,-0.3945310115814209],0]
			]
			]
		],
		[
		],
		false,
		false,
		3036105433869455,
		[],
		null
	]
,	[
		"t25",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9728177214405748,
			[
				["images/start-sheet0.png", 211, 0, 0, 24, 24, 1, 0.5, 0.7916666865348816,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5841915299003592,
		[],
		null
	]
,	[
		"t26",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		1,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5514743671239135,
			[
				["images/lifebar-sheet0.png", 218560, 1, 1, 495, 44, 1, 0.5010101199150085, 0.5,[],[-0.4666667282581329,-0.1136359870433807,-0.002020120620727539,-0.4090909063816071,0.48282790184021,-0.3181819915771484,0.4484848976135254,0,0.4505048990249634,-0.04545500874519348,-0.002020120620727539,0.3636360168457031,-0.4929293096065521,0.4090909957885742],0],
				["images/lifebar-sheet0.png", 218560, 1, 47, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet0.png", 218560, 1, 93, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet0.png", 218560, 1, 139, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet0.png", 218560, 1, 185, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet0.png", 218560, 1, 231, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet0.png", 218560, 1, 277, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet0.png", 218560, 1, 323, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet0.png", 218560, 1, 369, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet0.png", 218560, 1, 415, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet0.png", 218560, 1, 461, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet1.png", 20477, 1, 1, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet1.png", 20477, 1, 47, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet1.png", 20477, 1, 93, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet1.png", 20477, 1, 139, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet1.png", 20477, 1, 185, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet1.png", 20477, 1, 231, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet1.png", 20477, 1, 277, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet1.png", 20477, 1, 323, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet1.png", 20477, 1, 369, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet1.png", 20477, 1, 415, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet1.png", 20477, 1, 461, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet2.png", 17058, 1, 1, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet2.png", 17058, 1, 47, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet2.png", 17058, 1, 93, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet2.png", 17058, 1, 139, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet2.png", 17058, 1, 185, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet2.png", 17058, 1, 231, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet2.png", 17058, 1, 277, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0],
				["images/lifebar-sheet2.png", 17058, 1, 323, 495, 44, 1, 0.5010101199150085, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Flash",
			cr.behaviors.Flash,
			9385430227135421
		]
		],
		false,
		false,
		5140979496720248,
		[["setcolor", "SetColor"]],
		null
	]
,	[
		"t27",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		1,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8265969435858791,
			[
				["images/lifebartxt-sheet0.png", 4053, 0, 0, 196, 49, 1, 0.4132653176784515, 0.4897959232330322,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		9288917988526543,
		[["setcolor", "SetColor"]],
		null
	]
,	[
		"t28",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1792597431599509,
			[
				["images/cutter-sheet0.png", 14426, 0, 0, 186, 194, 1, 0.5, 0.530927836894989,[],[-0.01075300574302673,-0.396906852722168,0.3494619727134705,-0.2113398313522339,0.3655909895896912,0.04639214277267456,0.3172039985656738,0.3041241765022278,0.04838699102401733,0.3711341619491577,-0.2956990003585815,0.216495156288147,-0.3978489935398102,0.05154615640640259,-0.3467739820480347,-0.2525768280029297],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			2136382651509039
		]
,		[
			"Rotate",
			cr.behaviors.Rotate,
			3284182918809531
		]
		],
		false,
		false,
		239967114696527,
		[],
		null
	]
,	[
		"t29",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		1,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3837208126172636,
			[
				["images/morechalkbg-sheet0.png", 6342, 0, 0, 128, 120, 1, 0.5078125, 0.5083333253860474,[],[],0]
			]
			]
		],
		[
		[
			"Fade",
			cr.behaviors.Fade,
			3874750838876365
		]
		],
		false,
		false,
		499890777003317,
		[["setcolor", "SetColor"]],
		null
	]
,	[
		"t30",
		cr.plugins_.Sprite,
		false,
		[],
		3,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4298778887871773,
			[
				["images/morechalk-sheet0.png", 4974, 0, 0, 128, 128, 1, 0.5, 0.5,[],[-0.0820310115814209,-0.3125,0.0703129768371582,-0.3046869933605194,0.125,0.359375,-0.0507810115814209,0.375],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			1799664611133123
		]
,		[
			"LiteTween",
			cr.behaviors.lunarray_LiteTween,
			9182204001465112
		]
,		[
			"Fade",
			cr.behaviors.Fade,
			1355433994896876
		]
		],
		false,
		false,
		2921387818388004,
		[],
		null
	]
,	[
		"t31",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6723062742030336,
			[
				["images/chalkspawner-sheet0.png", 2556, 0, 0, 252, 121, 1, 0.5, 0.5785123705863953,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		9912078170146449,
		[],
		null
	]
,	[
		"t32",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8957779652787633,
			[
				["images/turretbase-sheet0.png", 7000, 0, 0, 95, 83, 1, 0.4947368502616882, 0.4457831382751465,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		6410315503839651,
		[],
		null
	]
,	[
		"t33",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1724655537096188,
			[
				["images/turretgun-sheet0.png", 2001, 0, 0, 79, 36, 1, 0.177215188741684, 0.5,[["Imagepoint 1", 1.126582264900208, 0.4722222089767456]],[0.8227847814559937,-0.5,0.8227847814559937,0.5,-0.177215188741684,0.5,-0.177215188741684,-0.5],0]
			]
			]
		],
		[
		[
			"Turret",
			cr.behaviors.Turret,
			3614339345395572
		]
		],
		false,
		false,
		5960218835377694,
		[],
		null
	]
,	[
		"t34",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		1,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			798182134909554,
			[
				["images/bullet-sheet0.png", 1418, 0, 0, 54, 33, 1, 0.4444444477558136, 0.4848484992980957,[],[-0.4074073433876038,-0.3712114989757538,-0.4166667461395264,0.4015154838562012,0.2083335220813751,0.4166665077209473,0.4675925672054291,0.0151515007019043,0.2037035524845123,-0.3560605049133301],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			1132679340525597
		]
		],
		false,
		false,
		9674889287839079,
		[["setcolor", "SetColor"]],
		null
	]
,	[
		"t35",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3988717144991973,
			[
				["images/sprite2-sheet0.png", 35536, 0, 0, 256, 256, 1, 0.5, 0.5,[],[-0.25,-0.25,0.2578129768371582,-0.2382810115814209,0.2578129768371582,0.2578129768371582,-0.2460939884185791,0.265625],0]
			]
			]
		],
		[
		[
			"LiteTween",
			cr.behaviors.lunarray_LiteTween,
			1750319570683323
		]
,		[
			"Fade",
			cr.behaviors.Fade,
			532099147050724
		]
		],
		false,
		false,
		3191034736118175,
		[],
		null
	]
,	[
		"t36",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		1,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5811839416866569,
			[
				["images/btnjump-sheet0.png", 979, 0, 0, 80, 80, 1, 0.5, 0.449999988079071,[],[-0.3499999940395355,-0.2999999821186066,0,-0.449999988079071,0.3500000238418579,-0.2999999821186066,0.5,0.05000001192092896,0.3500000238418579,0.4000000357627869,0,0.550000011920929,-0.3499999940395355,0.4000000357627869,-0.5,0.05000001192092896],0]
			]
			]
		],
		[
		],
		false,
		false,
		5305099238853934,
		[["setcolor", "SetColor"]],
		null
	]
,	[
		"t37",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/tiledbackgroundgreen.png", 24523, 1],
		null,
		[
		],
		false,
		false,
		6407923330836843,
		[],
		null
	]
,	[
		"t38",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			660082271194092,
			[
				["images/sprite3-sheet0.png", 79052, 1, 1, 256, 256, 1, 0.5, 0.5,[],[0.1367189884185791,0.1367189884185791,0,-0.3398439884185791,0.1914060115814209,-0.1914060115814209,0.2578129768371582,0,0.171875,0.171875,0,0.1914060115814209,-0.1796869933605194,0.1796879768371582,-0.2695310115814209,0],0],
				["images/sprite3-sheet0.png", 79052, 259, 1, 256, 256, 1, 0.5, 0.5,[],[],0],
				["images/sprite3-sheet0.png", 79052, 517, 1, 256, 256, 1, 0.5, 0.5,[],[],0],
				["images/sprite3-sheet0.png", 79052, 1, 259, 256, 256, 1, 0.5, 0.5,[],[],0],
				["images/sprite3-sheet0.png", 79052, 259, 259, 256, 256, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		573234424144467,
		[],
		null
	]
,	[
		"t39",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3232915250734724,
			[
				["images/sprite4-sheet0.png", 43884, 0, 0, 330, 128, 1, 0.5, 0.5,[],[-0.4515151977539063,-0.375,0,-0.4375,0.4484850168228149,-0.3671869933605194,0.4515150189399719,0.375,0,0.40625,-0.4484848082065582,0.3671879768371582],0]
			]
			]
		],
		[
		],
		false,
		false,
		7722793990799529,
		[],
		null
	]
,	[
		"t40",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3927722612610989,
			[
				["images/instrux-sheet0.png", 289963, 0, 0, 640, 512, 1, 0.5, 0.5,[],[-0.3765619993209839,-0.3457030057907105,0.3765619993209839,-0.3457030057907105,0.40625,0,0.3828129768371582,0.3535159826278687,0,0.3613280057907105,-0.378125011920929,0.3476560115814209,-0.4046874940395355,0],0]
			]
			]
		],
		[
		[
			"LiteTween",
			cr.behaviors.lunarray_LiteTween,
			4922850413742035
		]
,		[
			"Fade",
			cr.behaviors.Fade,
			4584794788543112
		]
		],
		false,
		false,
		7409904301817202,
		[],
		null
	]
,	[
		"t41",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7259603077514079,
			[
				["images/sprite5-sheet0.png", 265986, 0, 0, 640, 512, 1, 0.5, 0.5,[["Imagepoint 1", 0.2796874940395355, 0.685546875],["Imagepoint 2", 0.3734374940395355, 0.6875],["Imagepoint 3", 0.721875011920929, 0.689453125],["Imagepoint 4", 0.46875, 0.4921875]],[-0.3765619993209839,-0.3457030057907105,0.3765619993209839,-0.3457030057907105,0.40625,0,0.3828129768371582,0.3535159826278687,0,0.3613280057907105,-0.378125011920929,0.3476560115814209,-0.4046874940395355,0],0]
			]
			]
		],
		[
		[
			"LiteTween",
			cr.behaviors.lunarray_LiteTween,
			4144403336156366
		]
		],
		false,
		false,
		805469391979191,
		[],
		null
	]
,	[
		"t42",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5677359605894839,
			[
				["images/btnfb-sheet0.png", 6598, 0, 0, 64, 64, 1, 0.5, 0.5,[],[-0.40625,-0.40625,0.421875,-0.421875,0.34375,0,0.34375,0.34375,0,0.40625,-0.40625,0.40625,-0.421875,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			2075649886061804
		]
		],
		false,
		false,
		8966279123628515,
		[],
		null
	]
,	[
		"t43",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9474020898316285,
			[
				["images/btntweet-sheet0.png", 5316, 0, 0, 64, 64, 1, 0.5, 0.5,[],[-0.40625,-0.40625,0.390625,-0.390625,0.40625,0.40625,0,0.40625,-0.3125,0.3125,-0.421875,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			835275585180864
		]
		],
		false,
		false,
		1406040440801941,
		[],
		null
	]
,	[
		"t44",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3174050074295459,
			[
				["images/btnnext-sheet0.png", 6757, 0, 0, 64, 64, 1, 0.5, 0.5,[],[-0.390625,-0.390625,0.40625,-0.40625,0.46875,0,0.375,0.375,-0.390625,0.390625,-0.40625,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			1230216971730629
		]
		],
		false,
		false,
		6928980407786003,
		[],
		null
	]
,	[
		"t45",
		cr.plugins_.Spritefont2,
		false,
		[],
		1,
		0,
		["images/spritefont.png", 4673, 0],
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			804852443290286
		]
		],
		false,
		false,
		3042179490205748,
		[],
		null
	]
,	[
		"t46",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1393757410846054,
			[
				["images/sprite6-sheet0.png", 254277, 0, 0, 640, 512, 1, 0.5, 0.5,[],[-0.3765619993209839,-0.3457030057907105,0.3765619993209839,-0.3457030057907105,0.40625,0,0.3828129768371582,0.3535159826278687,0,0.3613280057907105,-0.378125011920929,0.3476560115814209,-0.4046874940395355,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		8406460866039474,
		[],
		null
	]
,	[
		"t47",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"man",
			5,
			false,
			1,
			0,
			false,
			8062777354791097,
			[
				["images/charselect-sheet0.png", 16155, 0, 0, 128, 128, 1, 0.5, 0.5,[],[-0.3359369933605194,-0.3359369933605194,0,-0.46875,0.28125,-0.28125,0.34375,0,0.3203129768371582,0.3203129768371582,0,0.5,-0.2890619933605194,0.2890629768371582,-0.3515619933605194,0],0]
			]
			]
,			[
			"woman",
			5,
			false,
			1,
			0,
			false,
			1163356776670294,
			[
				["images/charselect-sheet1.png", 17804, 0, 0, 128, 128, 1, 0.5, 0.5,[],[-0.3359369933605194,-0.3359369933605194,0,-0.46875,0.28125,-0.28125,0.34375,0,0.3203129768371582,0.3203129768371582,0,0.5,-0.2890619933605194,0.2890629768371582,-0.3515619933605194,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		5663102402727436,
		[],
		null
	]
,	[
		"t48",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6929839376480469,
			[
				["images/charselecterleft-sheet0.png", 7264, 0, 0, 81, 87, 1, 0.3580246865749359, 0.517241358757019,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5421032412857113,
		[],
		null
	]
,	[
		"t49",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3682506296393538,
		[],
		null
	]
,	[
		"t50",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7135282784726472,
			[
				["images/charselecterleft-sheet0.png", 7264, 0, 0, 81, 87, 1, 0.3580246865749359, 0.517241358757019,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		485048300402264,
		[],
		null
	]
,	[
		"t51",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/tiledbackgroundstreet.png", 138120, 1],
		null,
		[
		],
		false,
		false,
		4819550669303019,
		[],
		null
	]
,	[
		"t52",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"on",
			5,
			false,
			1,
			0,
			false,
			570181163219446,
			[
				["images/musicon-sheet0.png", 4348, 0, 0, 128, 128, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4188980294471456,
		[],
		null
	]
,	[
		"t53",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"off",
			5,
			false,
			1,
			0,
			false,
			8706558238073654,
			[
				["images/musicoff-sheet0.png", 7200, 0, 0, 128, 128, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4620947868859018,
		[],
		null
	]
,	[
		"t54",
		cr.plugins_.Audio,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7703636585249155,
		[],
		null
		,[0,0,1,1,600,600,10000,1,5000,1]
	]
,	[
		"t55",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8859596058585251,
			[
				["images/graffitiplatform1-sheet0.png", 8692, 0, 0, 256, 162, 1, 0.5, 0.5,[],[-0.1445310115814209,-0.3950619995594025,0,-0.4691357910633087,0.34375,-0.2530860006809235,0.5,0,0.25,0.1049379706382752,0.0585939884185791,0.4753090143203735,-0.5,0.08024698495864868,-0.4570311903953552,-0.2716050148010254],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			9856497651914619
		]
		],
		false,
		false,
		2255261425652935,
		[],
		null
	]
,	[
		"t56",
		cr.plugins_.Sprite,
		false,
		[],
		3,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9697210564814954,
			[
				["images/blade-sheet0.png", 89624, 0, 0, 222, 223, 1, 0.5090090036392212, 0.5112107396125794,[],[-0.3558560013771057,-0.3632287383079529,0,-0.4753363430500031,0.3423420190811157,-0.3497757315635681,0.4594590067863464,-0.008968710899353027,0.3423420190811157,0.3318382501602173,0,0.470852255821228,-0.3558560013771057,0.3452912569046021,-0.4819819927215576,-0.008968710899353027],0]
			]
			]
		],
		[
		[
			"Rotate",
			cr.behaviors.Rotate,
			4125626091809655
		]
,		[
			"Sine",
			cr.behaviors.Sin,
			8266136756735989
		]
,		[
			"Sine2",
			cr.behaviors.Sin,
			4715219300688819
		]
		],
		false,
		false,
		9512491315938742,
		[],
		null
	]
,	[
		"t57",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8019085095821493,
			[
				["images/bladeshadow-sheet0.png", 35394, 0, 0, 240, 240, 1, 0.5, 0.5,[],[-0.3166670203208923,-0.3166670203208923,0,-0.4333333075046539,0.3041669726371765,-0.3041670024394989,0.4166669845581055,0,0.300000011920929,0.300000011920929,0,0.4291669726371765,-0.3125,0.3125,-0.4333333075046539,0],0]
			]
			]
		],
		[
		[
			"Rotate",
			cr.behaviors.Rotate,
			391131746170029
		]
,		[
			"Pin",
			cr.behaviors.Pin,
			5345118908638178
		]
		],
		false,
		false,
		2730415596492562,
		[],
		null
	]
,	[
		"t58",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3796995398319734,
			[
				["images/graffitiplatform2-sheet0.png", 6713, 0, 0, 202, 162, 1, 0.5, 0.5,[],[-0.3960399925708771,-0.4197531044483185,-0.1138609945774078,-0.5,0.1336629986763001,-0.4197531044483185,0.3910890221595764,-0.3888890147209168,0.4801980257034302,0.1481480002403259,0.207921028137207,0.4444440007209778,-0.3762379884719849,0.345678985118866],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			2273360823840882
		]
		],
		false,
		false,
		5360914229498912,
		[],
		null
	]
,	[
		"t59",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3377726551459776,
			[
				["images/graffitiplatform3-sheet0.png", 6988, 0, 0, 174, 204, 1, 0.5, 0.5,[],[-0.2011489868164063,-0.4460783898830414,0,-0.4852941036224365,0.3275859951972961,-0.4509803950786591,0.4252870082855225,0,0.1379309892654419,0.2254899740219116,-0.1091949939727783,0.2549020051956177,-0.454023003578186,0],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			4075497648401317
		]
		],
		false,
		false,
		8722513634198938,
		[],
		null
	]
,	[
		"t60",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5983448377190831,
			[
				["images/graffiticloud-sheet0.png", 1318, 0, 0, 174, 62, 1, 0.5, 0.5,[],[-0.3965519964694977,-0.2096770107746124,0,-0.3064520061016083,0.2701150178909302,0.145160973072052,0.2241380214691162,0,0.4827589988708496,0.4516130089759827,0,0.4516130089759827,-0.4597700834274292,0.3870970010757446,-0.4885056912899017,0],0]
			]
			]
		],
		[
		[
			"MoveTo",
			cr.behaviors.Rex_MoveTo,
			6582863899848813
		]
		],
		false,
		false,
		143123137379795,
		[],
		null
	]
,	[
		"t61",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4810306249708886,
			[
				["images/graffitilightning-sheet0.png", 3396, 0, 0, 64, 100, 1, 0.609375, 0.5400000214576721,[],[-0.234375,-0.300000011920929,-0.109375,-0.4500000178813934,0.234375,-0.04000002145767212,-0.109375,0.35999995470047,-0.203125,0.199999988079071,-0.484375,-0.04000002145767212],0]
			]
			]
		],
		[
		[
			"Fade",
			cr.behaviors.Fade,
			2848239699433093
		]
,		[
			"CustomMovement",
			cr.behaviors.custom,
			3348481338563284
		]
		],
		false,
		false,
		82813856451541,
		[],
		null
	]
,	[
		"t62",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4417798088524375,
			[
				["images/sprite7-sheet0.png", 576556, 0, 0, 3146, 480, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		7066227719832027,
		[],
		null
	]
,	[
		"t63",
		cr.plugins_.Tilemap,
		false,
		[],
		0,
		0,
		["images/tilemap.png", 648, 1],
		null,
		[
		],
		false,
		false,
		9366972669190401,
		[],
		[
		]
	]
,	[
		"t64",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		1,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6965925462400845,
			[
				["images/sprite8-sheet0.png", 394247, 0, 0, 1521, 480, 1, 0.5003287196159363, 0.5,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		8796299315621911,
		[["gamma", "Gamma"]],
		null
	]
,	[
		"t65",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4820022995622059,
			[
				["images/cacti-sheet0.png", 38928, 0, 0, 256, 157, 1, 0.5, 0.5031847357749939,[],[-0.3984369933605194,-0.3375797271728516,0,-0.2484077215194702,0.2382810115814209,-0.0764327347278595,0.3085939884185791,-0.006369739770889282,0.3632810115814209,0.2738852500915527,0,0.4076432585716248,-0.3632810115814209,0.2738852500915527],0]
			]
			]
		],
		[
		],
		false,
		false,
		9244415589216831,
		[],
		null
	]
,	[
		"t66",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1856229587642988,
			[
				["images/sprite9-sheet0.png", 502615, 0, 0, 2048, 480, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		6051274879465866,
		[],
		null
	]
,	[
		"t67",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6714010792771537,
			[
				["images/sprite10-sheet0.png", 494133, 0, 0, 2030, 480, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		6919948488695871,
		[],
		null
	]
,	[
		"t68",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4724320278131153,
			[
				["images/gun-sheet0.png", 37740, 0, 0, 400, 222, 1, 0.5, 0.5,[["Imagepoint 1", 0.05750000104308128, 0.1846846789121628]],[-0.425000011920929,-0.3648650050163269,0,-0.3963960111141205,0.3025000095367432,-0.1441439986228943,0.3725000023841858,0,0.4300000071525574,0.3738740086555481,0,-0.08108100295066834,-0.09749999642372131,-0.2252250015735626,0.05500000715255737,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		1171465206901689,
		[],
		null
	]
,	[
		"t69",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9378737084467803,
			[
				["images/bullet2-sheet0.png", 2150, 0, 0, 64, 22, 1, 0.5, 0.5,[],[0.390625,0,0.375,0.1363639831542969,0,0.3636360168457031,-0.390625,0.1818180084228516,-0.390625,-0.1818180084228516,0,-0.3636360168457031,0.359375,-0.09090900421142578],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			4903701143978493
		]
		],
		false,
		false,
		4153147125371854,
		[],
		null
	]
,	[
		"t70",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3567880789523846,
			[
				["images/sprite12-sheet0.png", 225104, 0, 0, 2036, 480, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		9068093269802539,
		[],
		null
	]
,	[
		"t71",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3080600014880759,
			[
				["images/chopper-sheet0.png", 69811, 1, 1, 400, 172, 1, 0.5049999952316284, 0.4825581312179565,[],[-0.4874999821186066,-0.200218141078949,-0.4874999821186066,-0.313227117061615,0.3653259873390198,-0.2961481213569641,0.3677489757537842,-0.2000361382961273,0.03916198015213013,-0.2329211384057999,0.09062099456787109,0.3989828824996948,-0.2356989979743958,0.37372887134552,-0.2715989947319031,-0.1408071219921112],0],
				["images/chopper-sheet0.png", 69811, 1, 175, 400, 172, 1, 0.5049999952316284, 0.4825581312179565,[],[-0.4874999821186066,-0.200218141078949,-0.4874999821186066,-0.313227117061615,0.3653259873390198,-0.2961481213569641,0.3677489757537842,-0.2000361382961273,0.03916198015213013,-0.2329211384057999,0.09062099456787109,0.3989828824996948,-0.2356989979743958,0.37372887134552,-0.2715989947319031,-0.1408071219921112],0],
				["images/chopper-sheet1.png", 32434, 0, 0, 400, 172, 1, 0.5049999952316284, 0.4825581312179565,[],[-0.4874999821186066,-0.200218141078949,-0.4874999821186066,-0.313227117061615,0.3653259873390198,-0.2961481213569641,0.3677489757537842,-0.2000361382961273,0.03916198015213013,-0.2329211384057999,0.09062099456787109,0.3989828824996948,-0.2356989979743958,0.37372887134552,-0.2715989947319031,-0.1408071219921112],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			2852583139624986
		]
,		[
			"Sine2",
			cr.behaviors.Sin,
			2969353266976445
		]
		],
		false,
		false,
		7649378389517176,
		[],
		null
	]
,	[
		"t72",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9756856794300584,
			[
				["images/chopper-sheet0.png", 69811, 1, 1, 400, 172, 1, 0.5049999952316284, 0.4825581312179565,[],[-0.4874999821186066,-0.200218141078949,-0.4874999821186066,-0.313227117061615,0.3653259873390198,-0.2961481213569641,0.3677489757537842,-0.2000361382961273,0.03916198015213013,-0.2329211384057999,0.09062099456787109,0.3989828824996948,-0.2356989979743958,0.37372887134552,-0.2715989947319031,-0.1408071219921112],0],
				["images/chopper-sheet0.png", 69811, 1, 175, 400, 172, 1, 0.5049999952316284, 0.4825581312179565,[],[-0.4874999821186066,-0.200218141078949,-0.4874999821186066,-0.313227117061615,0.3653259873390198,-0.2961481213569641,0.3677489757537842,-0.2000361382961273,0.03916198015213013,-0.2329211384057999,0.09062099456787109,0.3989828824996948,-0.2356989979743958,0.37372887134552,-0.2715989947319031,-0.1408071219921112],0],
				["images/chopper-sheet1.png", 32434, 0, 0, 400, 172, 1, 0.5049999952316284, 0.4825581312179565,[],[-0.4874999821186066,-0.200218141078949,-0.4874999821186066,-0.313227117061615,0.3653259873390198,-0.2961481213569641,0.3677489757537842,-0.2000361382961273,0.03916198015213013,-0.2329211384057999,0.09062099456787109,0.3989828824996948,-0.2356989979743958,0.37372887134552,-0.2715989947319031,-0.1408071219921112],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			6113773287404407
		]
,		[
			"Sine2",
			cr.behaviors.Sin,
			3308328257743797
		]
		],
		false,
		false,
		1986305500393053,
		[],
		null
	]
,	[
		"t73",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4143212824522772,
			[
				["images/next-sheet0.png", 6278, 0, 0, 69, 71, 1, 0.5072463750839233, 0.5070422291755676,[],[-0.347826361656189,-0.3521122336387634,-0.01449236273765564,-0.5070422291755676,0.3333336114883423,-0.3521122336387634,0.4782606363296509,-0.01408421993255615,0.3333336114883423,0.3380277752876282,-0.01449236273765564,0.4507047533988953,-0.3333333730697632,0.3239437937736511,-0.4927535653114319,-0.01408421993255615],0]
			]
			]
		],
		[
		],
		false,
		false,
		7830373761069149,
		[],
		null
	]
,	[
		"t74",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2125512519130041,
			[
				["images/sprite14-sheet0.png", 693, 0, 0, 128, 768, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		6966874136243346,
		[],
		null
	]
,	[
		"t75",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		1,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7768954255869574,
			[
				["images/btnduck-sheet0.png", 991, 0, 0, 80, 80, 1, 0.5, 0.550000011920929,[],[-0.5,-0.05000001192092896,-0.3499999940395355,-0.4000000059604645,0,-0.550000011920929,0.3500000238418579,-0.4000000059604645,0.5,-0.05000001192092896,0.3500000238418579,0.300000011920929,0,0.449999988079071,-0.3499999940395355,0.300000011920929],0]
			]
			]
		],
		[
		],
		false,
		false,
		1401132218122456,
		[["setcolor", "SetColor"]],
		null
	]
,	[
		"t76",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7114161308687225,
			[
				["images/lift-sheet0.png", 4412, 0, 0, 192, 64, 1, 0.5, 0.5,[],[-0.4947916567325592,-0.46875,0.4895830154418945,-0.46875,0.4895830154418945,0,0.421875,0.265625,-0.421875,0.265625,-0.484375,0],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			9546218032560683
		]
,		[
			"Solid",
			cr.behaviors.solid,
			9370981971970362
		]
		],
		false,
		false,
		270276490027537,
		[],
		null
	]
,	[
		"t77",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3429331864669871,
			[
				["images/anvil-sheet0.png", 7566, 0, 0, 80, 199, 1, 0.5, 0.5075376629829407,[],[-0.09999999403953552,-0.5075376629829407,0.0625,-0.4974873661994934,0.07499998807907105,-0.01005065441131592,0.3374999761581421,0.4874373078346252,-0.300000011920929,0.4924623370170593,-0.08750000596046448,-0.01005065441131592],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			2166038400012117
		]
		],
		false,
		false,
		998681392788422,
		[],
		null
	]
,	[
		"t78",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3680337221384841,
			[
				["images/bat-sheet0.png", 3979, 1, 1, 80, 80, 1, 0.5, 0.5,[],[-0.2750000059604645,-0.2750000059604645,0,-0.175000011920929,0.2625000476837158,-0.262499988079071,0.3500000238418579,0,0.1000000238418579,0.1000000238418579,0,0.1874999403953552,-0.112500011920929,0.112500011920929,-0.375,0],0],
				["images/bat-sheet0.png", 3979, 83, 1, 80, 80, 1, 0.5, 0.5,[],[-0.25,-0.25,0,-0.175000011920929,0.2374999523162842,-0.237500011920929,0.2250000238418579,0,0,0.1874999403953552,-0.112500011920929,0.112500011920929,-0.25,0],0],
				["images/bat-sheet0.png", 3979, 165, 1, 80, 80, 1, 0.5, 0.5,[],[-0.2125000059604645,-0.2125000059604645,0,-0.175000011920929,0.199999988079071,-0.199999988079071,0.2749999761581421,0,0.08749997615814209,0.08749997615814209,0,0.1874999403953552,-0.09999999403953552,0.1000000238418579,-0.300000011920929,0],0],
				["images/bat-sheet0.png", 3979, 1, 83, 80, 80, 1, 0.5, 0.5,[],[-0.175000011920929,-0.175000011920929,0,-0.175000011920929,0.1499999761581421,-0.1500000059604645,0.1874999403953552,0,0.1874999403953552,0.1874999403953552,0,0.199999988079071,-0.1875,0.1874999403953552,-0.2125000059604645,0],0],
				["images/bat-sheet0.png", 3979, 165, 1, 80, 80, 1, 0.5, 0.5,[],[-0.2125000059604645,-0.2125000059604645,0,-0.175000011920929,0.199999988079071,-0.199999988079071,0.2749999761581421,0,0.08749997615814209,0.08749997615814209,0,0.1874999403953552,-0.09999999403953552,0.1000000238418579,-0.300000011920929,0],0],
				["images/bat-sheet0.png", 3979, 83, 1, 80, 80, 1, 0.5, 0.5,[],[-0.25,-0.25,0,-0.175000011920929,0.2374999523162842,-0.237500011920929,0.2250000238418579,0,0,0.1874999403953552,-0.112500011920929,0.112500011920929,-0.25,0],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			9424118518285588
		]
		],
		false,
		false,
		8114426609445849,
		[],
		null
	]
,	[
		"t79",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9157409030461943,
			[
				["images/drip-sheet0.png", 3899, 0, 0, 64, 64, 1, 0.609375, 0.515625,[],[-0.109375,-0.5,0.203125,-0.015625,0.203125,0.296875,-0.109375,0.46875,-0.40625,0.28125,-0.40625,-0.015625],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			9986152868608288
		]
		],
		false,
		false,
		5062462527155204,
		[],
		null
	]
,	[
		"t80",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4514605422947663,
			[
				["images/blob-sheet0.png", 13603, 1, 1, 64, 64, 1, 0.5, 0.5,[],[],0],
				["images/blob-sheet0.png", 13603, 67, 1, 64, 64, 1, 0.5, 0.5,[],[],0],
				["images/blob-sheet0.png", 13603, 133, 1, 64, 64, 1, 0.5, 0.5,[],[],0],
				["images/blob-sheet0.png", 13603, 1, 67, 64, 64, 1, 0.5, 0.5,[],[],0],
				["images/blob-sheet0.png", 13603, 133, 1, 64, 64, 1, 0.5, 0.5,[],[],0],
				["images/blob-sheet0.png", 13603, 67, 1, 64, 64, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Sine",
			cr.behaviors.Sin,
			3538569195614225
		]
		],
		false,
		false,
		1657642052694324,
		[],
		null
	]
,	[
		"t81",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4382545664844715,
			[
				["images/bullet2-sheet0.png", 2150, 0, 0, 64, 22, 1, 0.5, 0.5,[],[0.390625,0,0.375,0.1363639831542969,0,0.3636360168457031,-0.390625,0.1818180084228516,-0.390625,-0.1818180084228516,0,-0.3636360168457031,0.359375,-0.09090900421142578],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			5461332995229636
		]
		],
		false,
		false,
		283714638653437,
		[],
		null
	]
,	[
		"t82",
		cr.plugins_.Sprite,
		false,
		[1668729691478838],
		1,
		0,
		null,
		[
			[
			"rise",
			5,
			false,
			1,
			0,
			false,
			574746859317099,
			[
				["images/zomb-sheet0.png", 16083, 1, 1, 64, 64, 1, 0.5, 0.5,[],[],0],
				["images/zomb-sheet0.png", 16083, 67, 1, 64, 64, 1, 0.5, 0.5,[],[],0],
				["images/zomb-sheet0.png", 16083, 133, 1, 64, 64, 1, 0.5, 0.5,[],[],0],
				["images/zomb-sheet0.png", 16083, 1, 67, 64, 64, 1, 0.5, 0.5,[],[],0],
				["images/zomb-sheet0.png", 16083, 67, 67, 64, 64, 1, 0.5, 0.5,[],[],0],
				["images/zomb-sheet0.png", 16083, 133, 67, 64, 64, 1, 0.5, 0.5,[],[],0],
				["images/zomb-sheet0.png", 16083, 1, 133, 64, 64, 1, 0.5, 0.5,[],[-0.125,-0.125,0,-0.421875,0.171875,-0.171875,0.203125,0.203125,0,0.484375,-0.140625,0.140625,-0.234375,0],0],
				["images/zomb-sheet0.png", 16083, 1, 133, 64, 64, 1, 0.5, 0.5,[],[-0.125,-0.125,0,-0.421875,0.171875,-0.171875,0.203125,0.203125,0,0.484375,-0.140625,0.140625,-0.234375,0],0],
				["images/zomb-sheet0.png", 16083, 1, 133, 64, 64, 1, 0.5, 0.5,[],[-0.125,-0.125,0,-0.421875,0.171875,-0.171875,0.203125,0.203125,0,0.484375,-0.140625,0.140625,-0.234375,0],0],
				["images/zomb-sheet0.png", 16083, 1, 133, 64, 64, 1, 0.5, 0.5,[],[-0.125,-0.125,0,-0.421875,0.171875,-0.171875,0.203125,0.203125,0,0.484375,-0.140625,0.140625,-0.234375,0],0],
				["images/zomb-sheet0.png", 16083, 1, 133, 64, 64, 1, 0.5, 0.5,[],[-0.125,-0.125,0,-0.421875,0.171875,-0.171875,0.203125,0.203125,0,0.484375,-0.140625,0.140625,-0.234375,0],0]
			]
			]
,			[
			"walk",
			5,
			false,
			1,
			0,
			false,
			5186248045833524,
			[
				["images/zomb-sheet0.png", 16083, 67, 133, 64, 64, 1, 0.5, 0.5,[],[-0.125,-0.125,0,-0.421875,0.171875,-0.171875,0.203125,0.203125,0,0.484375,-0.140625,0.140625,-0.234375,0],0],
				["images/zomb-sheet0.png", 16083, 133, 133, 64, 64, 1, 0.5, 0.5,[],[-0.125,-0.125,0,-0.421875,0.171875,-0.171875,0.203125,0.203125,0,0.484375,-0.140625,0.140625,-0.234375,0],0],
				["images/zomb-sheet1.png", 24169, 1, 1, 64, 64, 1, 0.5, 0.5,[],[-0.125,-0.125,0,-0.421875,0.171875,-0.171875,0.203125,0.203125,0,0.484375,-0.140625,0.140625,-0.234375,0],0],
				["images/zomb-sheet1.png", 24169, 67, 1, 64, 64, 1, 0.5, 0.5,[],[-0.125,-0.125,0,-0.421875,0.171875,-0.171875,0.203125,0.203125,0,0.484375,-0.140625,0.140625,-0.234375,0],0],
				["images/zomb-sheet1.png", 24169, 133, 1, 64, 64, 1, 0.5, 0.5,[],[-0.125,-0.125,0,-0.421875,0.171875,-0.171875,0.203125,0.203125,0,0.484375,-0.140625,0.140625,-0.234375,0],0],
				["images/zomb-sheet1.png", 24169, 1, 67, 64, 64, 1, 0.5, 0.5,[],[-0.125,-0.125,0,-0.421875,0.171875,-0.171875,0.203125,0.203125,0,0.484375,-0.140625,0.140625,-0.234375,0],0],
				["images/zomb-sheet1.png", 24169, 67, 67, 64, 64, 1, 0.5, 0.5,[],[-0.125,-0.125,0,-0.421875,0.171875,-0.171875,0.203125,0.203125,0,0.484375,-0.140625,0.140625,-0.234375,0],0],
				["images/zomb-sheet1.png", 24169, 133, 67, 64, 64, 1, 0.5, 0.5,[],[-0.125,-0.125,0,-0.421875,0.171875,-0.171875,0.203125,0.203125,0,0.484375,-0.140625,0.140625,-0.234375,0],0]
			]
			]
,			[
			"die",
			5,
			false,
			1,
			0,
			false,
			8826193795416363,
			[
				["images/zomb-sheet0.png", 16083, 1, 133, 64, 64, 1, 0.5, 0.5,[],[-0.125,-0.125,0,-0.421875,0.171875,-0.171875,0.203125,0.203125,0,0.484375,-0.140625,0.140625,-0.234375,0],0],
				["images/zomb-sheet0.png", 16083, 1, 133, 64, 64, 1, 0.5, 0.5,[],[-0.125,-0.125,0,-0.421875,0.171875,-0.171875,0.203125,0.203125,0,0.484375,-0.140625,0.140625,-0.234375,0],0],
				["images/zomb-sheet0.png", 16083, 1, 133, 64, 64, 1, 0.5, 0.5,[],[-0.125,-0.125,0,-0.421875,0.171875,-0.171875,0.203125,0.203125,0,0.484375,-0.140625,0.140625,-0.234375,0],0],
				["images/zomb-sheet0.png", 16083, 133, 67, 64, 64, 1, 0.5, 0.5,[],[],0],
				["images/zomb-sheet0.png", 16083, 67, 67, 64, 64, 1, 0.5, 0.5,[],[],0],
				["images/zomb-sheet0.png", 16083, 1, 67, 64, 64, 1, 0.5, 0.5,[],[],0],
				["images/zomb-sheet0.png", 16083, 133, 1, 64, 64, 1, 0.5, 0.5,[],[],0],
				["images/zomb-sheet0.png", 16083, 67, 1, 64, 64, 1, 0.5, 0.5,[],[],0],
				["images/zomb-sheet0.png", 16083, 1, 1, 64, 64, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Platform",
			cr.behaviors.Platform,
			4286190449333216
		]
		],
		false,
		false,
		4043739140537241,
		[],
		null
	]
	],
	[
	],
	[
	[
		"Layout 1",
		2000,
		768,
		false,
		"Event sheet 1",
		2970892260413293,
		[
		[
			"BG",
			0,
			3840442904196844,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[32, -160, 0, 32, 16, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.8, 0, 1.5]]],
				22,
				9,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2515, 384, 0, 5030.1318359375, 767.4708862304688, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				62,
				102,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 704, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				8,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 640, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				61,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				62,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				104,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				105,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 768, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				106,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				110,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				111,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				42,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				112,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				113,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				12,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[896, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				118,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[832, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				1,
				119,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				2,
				114,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1056, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				120,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1408, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				115,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				1,
				121,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1472, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				2,
				122,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 0",
			1,
			6864319171794216,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[175.5992431640625, -15.69202423095703, 0, 16, 4, 0, 0, 0, 0, 0.5, 0, 0, []],
				13,
				0,
				[
					[-1]
				],
				[
				[
				],
				[
					1,
					0.5,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					2,
					1
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[325.8203735351563, -53.330078125, 0, 32, 14, 0, -1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				1,
				[
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1,
					1
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				3,
				[
				],
				[
				[
					330,
					1500,
					1500,
					400,
					1500,
					1000,
					1,
					1
				],
				[
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				4,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				11,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				14,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				15,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				16,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 288, 0, 24, 24, 0, 0, 1, 0.5, 0.7916666865348816, 0, 0, []],
				25,
				17,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				18,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				19,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				20,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				21,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				22,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				25,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[992, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				26,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				29,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				30,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1248, 416, 0, 186, 194, 0, 0, 1, 0.5, 0.530927836894989, 0, 0, []],
				28,
				28,
				[
				],
				[
				[
					1,
					1,
					1,
					4,
					0,
					0,
					0,
					100,
					0
				],
				[
					180,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[896, 256, 0, 128, 120, 0, 0, 1, 0.5078125, 0.5083333253860474, 0, 0, [[0, 1, 1]]],
				29,
				31,
				[
				],
				[
				[
					0,
					0,
					0,
					0.5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[887, 251, 0, 128, 128, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				30,
				32,
				[
				],
				[
				[
					1,
					5,
					0,
					2,
					0,
					0,
					0,
					20,
					0
				],
				[
					0,
					1,
					23,
					"0,0",
					0,
					1,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[896, 256, 0, 252, 121, 0, 0, 1, 0.5, 0.5785123705863953, 0, 0, []],
				31,
				33,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1856, 128, 0, 95, 83, 0, 0, 1, 0.4947368502616882, 0.4457831382751465, 0, 0, []],
				32,
				34,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1856, 128, 0, 79, 36, 0, 0, 1, 0.177215188741684, 0.5, 0, 0, []],
				33,
				35,
				[
				],
				[
				[
					500,
					2,
					1,
					180,
					0,
					0,
					500,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1472, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				37,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1536, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				38,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1600, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				39,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, -160, 0, 54, 33, 0, 0, 1, 0.4444444477558136, 0.4848484992980957, 0, 0, [[0, 0, 0]]],
				34,
				40,
				[
				],
				[
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[896, 544, 0, 256, 256, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				41,
				[
				],
				[
				[
					0,
					1,
					19,
					"0,0",
					0,
					2.5,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				46,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				47,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				50,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				51,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				52,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				53,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1920, 768, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				55,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1856, 768, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				56,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1792, 768, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				57,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1920, 1408, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				63,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1856, 1408, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				64,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1792, 1408, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				65,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1728, 1408, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				66,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1664, 1408, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				67,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				2,
				103,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				1,
				13,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1120, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				2,
				27,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1408, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				1,
				36,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1664, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				2,
				43,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				44,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 320, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				45,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				48,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				49,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				54,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				58,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				59,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1728, 768, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				1,
				60,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"UI",
			2,
			4596022599410808,
			true,
			[255, 255, 255],
			true,
			0.009999999776482582,
			0.009999999776482582,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[256, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				20,
				7,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[75, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				18,
				5,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 32, 0, 495, 44, 0, 0, 1, 0.5010101199150085, 0.5, 0, 0, [[1, 1, 0]]],
				26,
				23,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 32, 0, 196, 49, 0, 0, 1, 0.4132653176784515, 0.4897959232330322, 0, 0, [[1, 1, 0]]],
				27,
				24,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.449999988079071, 0, 0, [[1, 1, 1]]],
				36,
				68,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 1024, 0, 640, 512, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				72,
				[
				],
				[
				[
					0,
					0,
					23,
					"480, 384",
					0,
					1.5,
					0
				],
				[
					0,
					0,
					0,
					0.5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 64, 0, 69, 71, 0, 0, 1, 0.5072463750839233, 0.5070422291755676, 0, 0, []],
				73,
				385,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Layout 2",
		2400,
		768,
		false,
		"Event sheet 2",
		7997199528911029,
		[
		[
			"BG",
			0,
			3407796866517091,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[32, -160, 0, 32, 16, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.8, 0, 1.5]]],
				22,
				84,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 384, 0, 2432.7998046875, 767.7474975585938, 0, 0, 1, 0.5003287196159363, 0.5, 0, 0, [[0.5]]],
				64,
				83,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 0",
			1,
			5299481090191111,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[175.5992431640625, -15.69202423095703, 0, 16, 4, 0, 0, 0, 0, 0.5, 0, 0, []],
				13,
				85,
				[
					[-1]
				],
				[
				[
				],
				[
					1,
					0.5,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					2,
					1
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[325.8203735351563, -53.330078125, 0, 32, 14, 0, -1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				86,
				[
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1,
					1
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				87,
				[
				],
				[
				[
					330,
					1500,
					1500,
					400,
					1500,
					1000,
					1,
					1
				],
				[
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 160, 0, 24, 24, 0, 0, 1, 0.5, 0.7916666865348816, 0, 0, []],
				25,
				95,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 96, 0, 128, 120, 0, 0, 1, 0.5078125, 0.5083333253860474, 0, 0, [[1, 0, 0]]],
				29,
				107,
				[
				],
				[
				[
					0,
					0,
					0,
					0.5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 96, 0, 128, 128, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				30,
				108,
				[
				],
				[
				[
					1,
					5,
					0,
					2,
					0,
					0,
					0,
					20,
					0
				],
				[
					0,
					1,
					23,
					"0,0",
					0,
					1,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 96, 0, 252, 121, 0, 0, 1, 0.5, 0.5785123705863953, 0, 0, []],
				31,
				109,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, -160, 0, 54, 33, 0, 0, 1, 0.4444444477558136, 0.4848484992980957, 0, 0, [[0, 0, 0]]],
				34,
				116,
				[
				],
				[
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 384, 0, 256, 256, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				117,
				[
				],
				[
				[
					0,
					1,
					19,
					"0,0",
					0,
					2.5,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, -64, 0, 64, 100, 0, 0, 0, 0.609375, 0.5400000214576721, 0, 0, []],
				61,
				93,
				[
				],
				[
				[
					1,
					0.5,
					0,
					0,
					1
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 1664, 0, 202, 162, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				58,
				97,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1824, 1472, 0, -256, 162, 0, -0.2980712950229645, 1, 0.5, 0.5, 0, 0, []],
				55,
				99,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				88,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				89,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				90,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				91,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				92,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				94,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				96,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				98,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				123,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				124,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				125,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 320, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				126,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				127,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				128,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				129,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				130,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				7,
				132,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[192, 512, 0, 256, 157, 0, 0, 1, 0.5, 0.5031847357749939, 0, 0, []],
				65,
				133,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				134,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				135,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				136,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				137,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				131,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				6,
				138,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				139,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[384, 256, 0, 256, 157, 0, 3.141592741012573, 1, 0.5, 0.5031847357749939, 0, 0, []],
				65,
				175,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				182,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				183,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				184,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				190,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				191,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[992, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				7,
				192,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[704, 512, 0, 256, 157, 0, 0, 1, 0.5, 0.5031847357749939, 0, 0, []],
				65,
				193,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				194,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				195,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				196,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				197,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				198,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				6,
				199,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				200,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				7,
				201,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				202,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				203,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				204,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				205,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				206,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1056, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				214,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1056, 320, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				215,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1056, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				216,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1056, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				217,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1056, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				218,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1056, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				207,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1408, 192, 0, 400, 222, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				68,
				208,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[1344, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				210,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, 320, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				211,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				212,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				213,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				219,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				220,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, -64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				221,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				222,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				223,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1120, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				224,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1184, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				225,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1248, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				226,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1312, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				227,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 640, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				228,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1632, 640, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				229,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1696, 640, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				230,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1760, 640, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				231,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1952, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				232,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2016, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				233,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2080, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				234,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2144, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				235,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1920, 608, 0, 256, 157, 0, 0, 1, 0.5, 0.5031847357749939, 0, 0, []],
				65,
				236,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1472, 736, 0, 256, 157, 0, 0, 1, 0.5, 0.5031847357749939, 0, 0, []],
				65,
				237,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1824, 704, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				238,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1888, 704, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				239,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1952, 704, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				240,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2016, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				242,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2016, 640, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				243,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2016, 704, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				244,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 704, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				241,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 768, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				245,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1632, 704, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				246,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1696, 704, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				247,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1760, 704, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				248,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1632, 768, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				249,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1696, 768, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				250,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1760, 768, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				251,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1824, 768, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				252,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1888, 768, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				253,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1952, 768, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				254,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2016, 768, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				255,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"UI",
			2,
			2470321047986591,
			true,
			[255, 255, 255],
			true,
			0.009999999776482582,
			0.009999999776482582,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[256, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[0, 0, 0]]],
				20,
				144,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[75, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[0, 0, 0]]],
				18,
				145,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 32, 0, 495, 44, 0, 0, 1, 0.5010101199150085, 0.5, 0, 0, [[1, 1, 0]]],
				26,
				146,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 32, 0, 196, 49, 0, 0, 1, 0.4132653176784515, 0.4897959232330322, 0, 0, [[1, 1, 0]]],
				27,
				147,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.449999988079071, 0, 0, [[0, 0, 0]]],
				36,
				148,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 64, 0, 69, 71, 0, 0, 1, 0.5072463750839233, 0.5070422291755676, 0, 0, []],
				73,
				399,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Layout 3",
		3100,
		768,
		false,
		"Event sheet 3",
		9405956236463684,
		[
		[
			"BG",
			0,
			6674883559979301,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[32, -160, 0, 32, 16, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.8, 0, 1.5]]],
				22,
				100,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1566, 384, 0, 3125.994384765625, 769.4755249023438, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				66,
				101,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 0",
			1,
			2352650281176816,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[175.5992431640625, -15.69202423095703, 0, 16, 4, 0, 0, 0, 0, 0.5, 0, 0, []],
				13,
				140,
				[
					[-1]
				],
				[
				[
				],
				[
					1,
					0.5,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					2,
					1
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[325.8203735351563, -53.330078125, 0, 32, 14, 0, -1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				141,
				[
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1,
					1
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				142,
				[
				],
				[
				[
					330,
					1500,
					1500,
					400,
					1500,
					1000,
					1,
					1
				],
				[
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 160, 0, 24, 24, 0, 0, 1, 0.5, 0.7916666865348816, 0, 0, []],
				25,
				143,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1120, 160, 0, 128, 120, 0, 0, 1, 0.5078125, 0.5083333253860474, 0, 0, [[1, 0, 0]]],
				29,
				152,
				[
				],
				[
				[
					0,
					0,
					0,
					0.5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1120, 160, 0, 128, 128, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				30,
				153,
				[
				],
				[
				[
					1,
					5,
					0,
					2,
					0,
					0,
					0,
					20,
					0
				],
				[
					0,
					1,
					23,
					"0,0",
					0,
					1,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1120, 160, 0, 252, 121, 0, 0, 1, 0.5, 0.5785123705863953, 0, 0, []],
				31,
				154,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, -160, 0, 54, 33, 0, 0, 1, 0.4444444477558136, 0.4848484992980957, 0, 0, [[0, 0, 0]]],
				34,
				155,
				[
				],
				[
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2944, 608, 0, 256, 256, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				156,
				[
				],
				[
				[
					0,
					1,
					19,
					"0,0",
					0,
					2.5,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, -64, 0, 64, 100, 0, 0, 0, 0.609375, 0.5400000214576721, 0, 0, []],
				61,
				157,
				[
				],
				[
				[
					1,
					0.5,
					0,
					0,
					1
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 1664, 0, 202, 162, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				58,
				158,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1824, 1472, 0, -256, 162, 0, -0.2980712950229645, 1, 0.5, 0.5, 0, 0, []],
				55,
				159,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				160,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 224, 0, 400, 172, 0, 0, 1, 0.5049999952316284, 0.4825581312179565, 0, 0, []],
				71,
				258,
				[
				],
				[
				[
					1,
					5,
					0,
					4,
					0,
					0,
					0,
					10,
					0
				],
				[
					1,
					1,
					0,
					8,
					0,
					0,
					0,
					250,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				8,
				277,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				278,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				279,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				280,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				281,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1184, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				282,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1120, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				283,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1056, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				284,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[992, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				285,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				286,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3008, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				289,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2944, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				290,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2880, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				291,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2816, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				292,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2816, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				293,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2816, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				294,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2816, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				295,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2816, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				296,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3072, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				288,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3072, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				297,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3072, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				298,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3072, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				299,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3072, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				300,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3072, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				301,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3072, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				302,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3072, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				303,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3072, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				304,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2816, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				305,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3072, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				307,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3072, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				309,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3008, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				308,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2944, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				310,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2880, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				311,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2816, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				312,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2752, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				313,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2816, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				306,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2752, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				314,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2688, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				315,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2624, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				316,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2688, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				317,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2624, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				318,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				319,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				320,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				321,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				322,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				323,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[384, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				326,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[448, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				327,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[512, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				328,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[576, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				329,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[640, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				330,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[704, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				331,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[768, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				332,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[640, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				333,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[576, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				334,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[512, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				335,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[448, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				336,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[384, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				337,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[768, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				341,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[704, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				342,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1728, 672, 0, 400, 172, 0, 0, 1, 0.5049999952316284, 0.4825581312179565, 0, 0, []],
				72,
				324,
				[
				],
				[
				[
					1,
					0,
					0,
					4,
					0,
					0,
					0,
					100,
					0
				],
				[
					1,
					5,
					0,
					4,
					0,
					0,
					0,
					5,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1248, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				339,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1184, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				340,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1120, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				343,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1056, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				344,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1312, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				8,
				325,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1248, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				8,
				287,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2016, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				338,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1952, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				345,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1888, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				346,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1824, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				347,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2080, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				8,
				348,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"UI",
			2,
			7951182119372835,
			true,
			[255, 255, 255],
			true,
			0.009999999776482582,
			0.009999999776482582,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[256, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[0, 0, 0]]],
				20,
				185,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[75, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[0, 0, 0]]],
				18,
				186,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 32, 0, 495, 44, 0, 0, 1, 0.5010101199150085, 0.5, 0, 0, [[1, 1, 0]]],
				26,
				187,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 32, 0, 196, 49, 0, 0, 1, 0.4132653176784515, 0.4897959232330322, 0, 0, [[1, 1, 0]]],
				27,
				188,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.449999988079071, 0, 0, [[0, 0, 0]]],
				36,
				189,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 64, 0, 69, 71, 0, 0, 1, 0.5072463750839233, 0.5070422291755676, 0, 0, []],
				73,
				386,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Layout 4",
		3100,
		768,
		false,
		"Event sheet 4",
		6550713508603687,
		[
		[
			"BG",
			0,
			3605759199903758,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[32, -160, 0, 32, 16, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.8, 0, 1.5]]],
				22,
				161,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1632, 384, 0, 3273.896728515625, 774.1233520507813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				67,
				162,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 0",
			1,
			5643369350976085,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[175.5992431640625, -15.69202423095703, 0, 16, 4, 0, 0, 0, 0, 0.5, 0, 0, []],
				13,
				163,
				[
					[-1]
				],
				[
				[
				],
				[
					1,
					0.5,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					2,
					1
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[325.8203735351563, -53.330078125, 0, 32, 14, 0, -1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				164,
				[
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1,
					1
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				165,
				[
				],
				[
				[
					330,
					1500,
					1500,
					400,
					1500,
					1000,
					1,
					1
				],
				[
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 160, 0, 24, 24, 0, 0, 1, 0.5, 0.7916666865348816, 0, 0, []],
				25,
				166,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1248, 128, 0, 128, 120, 0, 0, 1, 0.5078125, 0.5083333253860474, 0, 0, [[1, 0, 0]]],
				29,
				167,
				[
				],
				[
				[
					0,
					0,
					0,
					0.5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1248, 128, 0, 128, 128, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				30,
				168,
				[
				],
				[
				[
					1,
					5,
					0,
					2,
					0,
					0,
					0,
					20,
					0
				],
				[
					0,
					1,
					23,
					"0,0",
					0,
					1,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1248, 128, 0, 252, 121, 0, 0, 1, 0.5, 0.5785123705863953, 0, 0, []],
				31,
				169,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, -160, 0, 54, 33, 0, 0, 1, 0.4444444477558136, 0.4848484992980957, 0, 0, [[0, 0, 0]]],
				34,
				170,
				[
				],
				[
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2272, 160, 0, 256, 256, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				171,
				[
				],
				[
				[
					0,
					1,
					19,
					"0,0",
					0,
					2.5,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, -64, 0, 64, 100, 0, 0, 0, 0.609375, 0.5400000214576721, 0, 0, []],
				61,
				172,
				[
				],
				[
				[
					1,
					0.5,
					0,
					0,
					1
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 1664, 0, 202, 162, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				58,
				173,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1824, 1472, 0, -256, 162, 0, -0.2980712950229645, 1, 0.5, 0.5, 0, 0, []],
				55,
				174,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				181,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				370,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				371,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				372,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				374,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				380,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				373,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				381,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				382,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				387,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				388,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				389,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				390,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				391,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				376,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				377,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				378,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				379,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				384,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				375,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				383,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				392,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				393,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				394,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				395,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				396,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				397,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				398,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				400,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				401,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				402,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				403,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				404,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				405,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				406,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				407,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				408,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				409,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				410,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				411,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				413,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				412,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1024, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				423,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				424,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1152, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				425,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				426,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				427,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				428,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				429,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				430,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				431,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				432,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[992, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				433,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				434,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1280, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				435,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1440, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				436,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1504, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				437,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				438,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				439,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				440,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				441,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				442,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				444,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				445,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1856, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				443,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1920, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				446,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				447,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2208, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				448,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2272, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				449,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2336, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				450,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				414,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				415,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[704, 384, 0, 64, 64, 0, 0, 1, 0.609375, 0.515625, 0, 0, []],
				79,
				416,
				[
				],
				[
				[
					1,
					1,
					2,
					2,
					0,
					1,
					0,
					450,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 384, 0, 64, 64, 0, 0, 1, 0.609375, 0.515625, 0, 0, []],
				79,
				417,
				[
				],
				[
				[
					1,
					1,
					2,
					2,
					0,
					0,
					0,
					450,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-61, 225, 0, 64, 22, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				81,
				418,
				[
				],
				[
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1696, 608, 0, 400, 172, 0, 0, 1, 0.5049999952316284, 0.4825581312179565, 0, 0, []],
				71,
				419,
				[
				],
				[
				[
					1,
					5,
					0,
					4,
					0,
					0,
					0,
					10,
					0
				],
				[
					1,
					0,
					0,
					8,
					0,
					0,
					0,
					250,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"UI",
			2,
			6072471614468453,
			true,
			[255, 255, 255],
			true,
			0.009999999776482582,
			0.009999999776482582,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[256, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				20,
				176,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[75, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				18,
				177,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 32, 0, 495, 44, 0, 0, 1, 0.5010101199150085, 0.5, 0, 0, [[1, 1, 0]]],
				26,
				178,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 32, 0, 196, 49, 0, 0, 1, 0.4132653176784515, 0.4897959232330322, 0, 0, [[1, 1, 0]]],
				27,
				179,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.449999988079071, 0, 0, [[1, 1, 1]]],
				36,
				180,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 64, 0, 69, 71, 0, 0, 1, 0.5072463750839233, 0.5070422291755676, 0, 0, []],
				73,
				420,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Layout 5",
		3100,
		768,
		false,
		"Event sheet 5",
		7782929847645461,
		[
		[
			"BG",
			0,
			2136755556128085,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[32, -160, 0, 32, 16, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.8, 0, 1.5]]],
				22,
				256,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1632, 384, 0, 3284.687255859375, 774.385986328125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				70,
				257,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 0",
			1,
			844246776219931,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[2048, 416, 0, 80, 199, 0, 0, 1, 0.5, 0.5075376629829407, 0, 0, []],
				77,
				472,
				[
				],
				[
				[
					1,
					1,
					0,
					4,
					0,
					0,
					0,
					192,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[192, -10, 0, 16, 4, 0, 0, 0, 0, 0.5, 0, 0, []],
				13,
				259,
				[
					[-1]
				],
				[
				[
				],
				[
					1,
					0.5,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					2,
					1
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[325.8203735351563, -53.330078125, 0, 32, 14, 0, -1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				260,
				[
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1,
					1
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				261,
				[
				],
				[
				[
					330,
					1500,
					1500,
					400,
					1500,
					1000,
					1,
					1
				],
				[
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 544, 0, 24, 24, 0, 0, 1, 0.5, 0.7916666865348816, 0, 0, []],
				25,
				262,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 288, 0, 128, 120, 0, 0, 1, 0.5078125, 0.5083333253860474, 0, 0, [[1, 0, 0]]],
				29,
				263,
				[
				],
				[
				[
					0,
					0,
					0,
					0.5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 288, 0, 128, 128, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				30,
				264,
				[
				],
				[
				[
					1,
					5,
					0,
					2,
					0,
					0,
					0,
					20,
					0
				],
				[
					0,
					1,
					23,
					"0,0",
					0,
					1,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 288, 0, 252, 121, 0, 0, 1, 0.5, 0.5785123705863953, 0, 0, []],
				31,
				265,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, -160, 0, 54, 33, 0, 0, 1, 0.4444444477558136, 0.4848484992980957, 0, 0, [[0, 0, 0]]],
				34,
				266,
				[
				],
				[
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 96, 0, 256, 256, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				267,
				[
				],
				[
				[
					0,
					1,
					19,
					"0,0",
					0,
					2.5,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, -64, 0, 64, 100, 0, 0, 0, 0.609375, 0.5400000214576721, 0, 0, []],
				61,
				268,
				[
				],
				[
				[
					1,
					0.5,
					0,
					0,
					1
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 1664, 0, 202, 162, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				58,
				269,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1824, 1472, 0, -256, 162, 0, -0.2980712950229645, 1, 0.5, 0.5, 0, 0, []],
				55,
				270,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				276,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				349,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				350,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				351,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				352,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				353,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				354,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				355,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				356,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				357,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				358,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				359,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				360,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				361,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				362,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				364,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				365,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				8,
				366,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				367,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				368,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				369,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				363,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				451,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				452,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				453,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				454,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				455,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				456,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				457,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				458,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				459,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				460,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				461,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				462,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				463,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				465,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				466,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				467,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				468,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				469,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[992, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				474,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[992, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				475,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				476,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				477,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				478,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				479,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				480,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				481,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				482,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				483,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				484,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[992, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				485,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[992, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				486,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[992, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				487,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				488,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				489,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				490,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				491,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				492,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				493,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				494,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				495,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1440, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				499,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1504, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				500,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				501,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1632, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				502,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1440, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				504,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1504, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				505,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				506,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1632, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				507,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1696, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				8,
				503,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1696, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				8,
				508,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				509,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				510,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				511,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				512,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				513,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				514,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				515,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				516,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				517,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				518,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2176, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				519,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				470,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1184, 320, 0, 192, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				76,
				521,
				[
				],
				[
				[
					1,
					1,
					0,
					4,
					0,
					0,
					0,
					250,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				464,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				471,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				473,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				496,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				497,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				498,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				522,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				523,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				524,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				525,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				526,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				527,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				528,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				529,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				530,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				531,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				532,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				533,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				534,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2528, 384, 0, 400, 172, 0, 0, 1, 0.5049999952316284, 0.4825581312179565, 0, 0, []],
				71,
				535,
				[
				],
				[
				[
					1,
					5,
					0,
					4,
					0,
					0,
					0,
					10,
					0
				],
				[
					1,
					0,
					0,
					8,
					0,
					0,
					0,
					180,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				536,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				540,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				541,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				542,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				543,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				547,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				548,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				549,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				550,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				554,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				555,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				556,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 202, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				78,
				539,
				[
				],
				[
				[
					1,
					0,
					0,
					8,
					0,
					0,
					0,
					300,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"UI",
			2,
			8814053541749845,
			true,
			[255, 255, 255],
			true,
			0.009999999776482582,
			0.009999999776482582,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[256, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				20,
				271,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[75, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				18,
				272,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 64, 0, 495, 44, 0, 0, 1, 0.5010101199150085, 0.5, 0, 0, [[1, 1, 0]]],
				26,
				273,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 64, 0, 196, 49, 0, 0, 1, 0.4132653176784515, 0.4897959232330322, 0, 0, [[1, 1, 0]]],
				27,
				274,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.449999988079071, 0, 0, [[1, 1, 1]]],
				36,
				275,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[812, 680, 0, 80, 80, 0, 0, 1, 0.5, 0.550000011920929, 0, 0, [[1, 1, 1]]],
				75,
				520,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 64, 0, 69, 71, 0, 0, 1, 0.5072463750839233, 0.5070422291755676, 0, 0, []],
				73,
				421,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Layout 6",
		3100,
		768,
		false,
		"Event sheet 6",
		870516749239888,
		[
		[
			"BG",
			0,
			8542341936489923,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[32, -160, 0, 32, 16, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.8, 0, 1.5]]],
				22,
				546,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 384, 0, 5030.1318359375, 767.4708862304688, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				62,
				553,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 0",
			1,
			9221732548047351,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[192, -12, 0, 16, 4, 0, 0, 0, 0, 0.5, 0, 0, []],
				13,
				558,
				[
					[-1]
				],
				[
				[
				],
				[
					1,
					0.5,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					2,
					1
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[325.8203735351563, -53.330078125, 0, 32, 14, 0, -1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				559,
				[
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1,
					1
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[101, 159, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				560,
				[
				],
				[
				[
					330,
					1500,
					1500,
					400,
					1500,
					1000,
					1,
					1
				],
				[
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[101, 159, 0, 24, 24, 0, 0, 1, 0.5, 0.7916666865348816, 0, 0, []],
				25,
				561,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1888, 448, 0, 128, 120, 0, 0, 1, 0.5078125, 0.5083333253860474, 0, 0, [[1, 0, 0]]],
				29,
				562,
				[
				],
				[
				[
					0,
					0,
					0,
					0.5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1888, 448, 0, 128, 128, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				30,
				563,
				[
				],
				[
				[
					1,
					5,
					0,
					2,
					0,
					0,
					0,
					20,
					0
				],
				[
					0,
					1,
					23,
					"0,0",
					0,
					1,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1888, 448, 0, 252, 121, 0, 0, 1, 0.5, 0.5785123705863953, 0, 0, []],
				31,
				564,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, -160, 0, 54, 33, 0, 0, 1, 0.4444444477558136, 0.4848484992980957, 0, 0, [[0, 0, 0]]],
				34,
				565,
				[
				],
				[
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2240, 128, 0, 256, 256, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				566,
				[
				],
				[
				[
					0,
					1,
					19,
					"0,0",
					0,
					2.5,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, -64, 0, 64, 100, 0, 0, 0, 0.609375, 0.5400000214576721, 0, 0, []],
				61,
				567,
				[
				],
				[
				[
					1,
					0.5,
					0,
					0,
					1
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 1664, 0, 202, 162, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				58,
				568,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1824, 1472, 0, -256, 162, 0, -0.2980712950229645, 1, 0.5, 0.5, 0, 0, []],
				55,
				569,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				570,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				571,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				574,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				575,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				576,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				577,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				578,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				579,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 320, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				580,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				581,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				582,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				583,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				584,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				585,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				586,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				8,
				587,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				588,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				589,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				590,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				591,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				592,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				593,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				594,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				595,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				596,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				602,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				603,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				604,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				605,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				609,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				612,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				613,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				614,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				615,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				616,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				617,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				618,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				619,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				620,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				621,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				622,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 320, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				623,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				624,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				625,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				626,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				627,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				642,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				643,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				644,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				646,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				647,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				648,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1728, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				649,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1792, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				650,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1856, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				651,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1920, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				652,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088, 352, 0, 192, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				76,
				654,
				[
				],
				[
				[
					1,
					1,
					0,
					4,
					0,
					0,
					0,
					250,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				655,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				656,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				657,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				659,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				664,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				665,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				666,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				667,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				668,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				669,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				670,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				671,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				672,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				673,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2176, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				675,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2368, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				676,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				677,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2240, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				681,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				682,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2656, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				683,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2304, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				687,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				688,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2656, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				689,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				572,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				573,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1280,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1281,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1282,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1284,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1285,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1286,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1287,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1288,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1289,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1290,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1291,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				597,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				598,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				599,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				600,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				601,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				8,
				693,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 160, 0, 192, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				76,
				606,
				[
				],
				[
				[
					1,
					0,
					0,
					4,
					0,
					0,
					0,
					250,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				607,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				608,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1664, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				610,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1920, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				557,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1856, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				611,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				628,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2336, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				629,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2400, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				630,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2464, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				631,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2272, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				632,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2528, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				633,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2592, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				634,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2656, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				635,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2656, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				636,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2656, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				637,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2656, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				638,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2656, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				639,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2656, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				640,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1440, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				641,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1504, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				645,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				653,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1632, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				658,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1696, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				660,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1760, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				661,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1824, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				662,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1888, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				663,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1952, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				674,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2016, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				678,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2080, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				679,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2144, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				680,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2208, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				684,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2272, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				685,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2336, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				686,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2400, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				690,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2464, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				691,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2528, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				692,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2592, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				1283,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2656, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				1293,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2720, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				1294,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2784, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				1295,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2848, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				1296,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2912, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				1297,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2976, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				1298,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3040, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				1299,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3104, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				1300,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3168, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				1301,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[384, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				80,
				537,
				[
				],
				[
				[
					1,
					0,
					0,
					10,
					0,
					0,
					0,
					150,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				538,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[576, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				80,
				544,
				[
				],
				[
				[
					1,
					0,
					0,
					10,
					0,
					0,
					0,
					100,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				545,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				551,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				552,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1081,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1082,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1083,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1084,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1085,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				80,
				1086,
				[
				],
				[
				[
					1,
					0,
					0,
					10,
					0,
					0,
					0,
					100,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1087,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1088,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1090,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1091,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1092,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1093,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1094,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1095,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1096,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1504, 512, 0, 186, 194, 0, 0, 1, 0.5, 0.530927836894989, 0, 0, []],
				28,
				1097,
				[
				],
				[
				[
					1,
					1,
					1,
					4,
					0,
					0,
					0,
					150,
					0
				],
				[
					180,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"UI",
			2,
			2110399064274657,
			true,
			[255, 255, 255],
			true,
			0.009999999776482582,
			0.009999999776482582,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[256, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				20,
				694,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[75, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				18,
				695,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 64, 0, 495, 44, 0, 0, 1, 0.5010101199150085, 0.5, 0, 0, [[1, 1, 0]]],
				26,
				696,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 64, 0, 196, 49, 0, 0, 1, 0.4132653176784515, 0.4897959232330322, 0, 0, [[1, 1, 0]]],
				27,
				697,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.449999988079071, 0, 0, [[1, 1, 1]]],
				36,
				698,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[812, 680, 0, 80, 80, 0, 0, 1, 0.5, 0.550000011920929, 0, 0, [[1, 1, 1]]],
				75,
				699,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 64, 0, 69, 71, 0, 0, 1, 0.5072463750839233, 0.5070422291755676, 0, 0, []],
				73,
				422,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Layout 7",
		2432,
		768,
		false,
		"Event sheet 7",
		5706025965152276,
		[
		[
			"BG",
			0,
			4518478618572606,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[32, -160, 0, 32, 16, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.8, 0, 1.5]]],
				22,
				700,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 384, 0, 2432.7998046875, 767.7474975585938, 0, 0, 1, 0.5003287196159363, 0.5, 0, 0, [[0.5]]],
				64,
				701,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 0",
			1,
			1282950235557774,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1701, 104, 0, 256, 157, 0, 1.933784604072571, 1, 0.5, 0.5031847357749939, 0, 0, []],
				65,
				797,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[192, -10, 0, 16, 4, 0, 0, 0, 0, 0.5, 0, 0, []],
				13,
				703,
				[
					[-1]
				],
				[
				[
				],
				[
					1,
					0.5,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					2,
					1
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[325.8203735351563, -53.330078125, 0, 32, 14, 0, -1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				704,
				[
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1,
					1
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				705,
				[
				],
				[
				[
					330,
					1500,
					1500,
					400,
					1500,
					1000,
					1,
					1
				],
				[
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 352, 0, 24, 24, 0, 0, 1, 0.5, 0.7916666865348816, 0, 0, []],
				25,
				706,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1504, 64, 0, 128, 120, 0, 0, 1, 0.5078125, 0.5083333253860474, 0, 0, [[1, 0, 0]]],
				29,
				707,
				[
				],
				[
				[
					0,
					0,
					0,
					0.5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1504, 64, 0, 128, 128, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				30,
				708,
				[
				],
				[
				[
					1,
					5,
					0,
					2,
					0,
					0,
					0,
					20,
					0
				],
				[
					0,
					1,
					23,
					"0,0",
					0,
					1,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1504, 64, 0, 252, 121, 0, 0, 1, 0.5, 0.5785123705863953, 0, 0, []],
				31,
				709,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, -160, 0, 54, 33, 0, 0, 1, 0.4444444477558136, 0.4848484992980957, 0, 0, [[0, 0, 0]]],
				34,
				710,
				[
				],
				[
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 416, 0, 256, 256, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				711,
				[
				],
				[
				[
					0,
					1,
					19,
					"0,0",
					0,
					2.5,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, -64, 0, 64, 100, 0, 0, 0, 0.609375, 0.5400000214576721, 0, 0, []],
				61,
				712,
				[
				],
				[
				[
					1,
					0.5,
					0,
					0,
					1
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 1664, 0, 202, 162, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				58,
				713,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1824, 1472, 0, -256, 162, 0, -0.2980712950229645, 1, 0.5, 0.5, 0, 0, []],
				55,
				714,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1760, 512, 0, 192, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				76,
				799,
				[
				],
				[
				[
					1,
					1,
					0,
					4,
					0,
					0,
					0,
					250,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				716,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				717,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				718,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				719,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				720,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				721,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				722,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				723,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				724,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				725,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				726,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				727,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				728,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				729,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				730,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				731,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				732,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				733,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				734,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				735,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				736,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				737,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				738,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				739,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				740,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				741,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				742,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				743,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				744,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				745,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				746,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				747,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 352, 0, 192, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				76,
				748,
				[
				],
				[
				[
					1,
					1,
					0,
					4,
					0,
					0,
					0,
					250,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1056, 224, 0, 400, 222, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				68,
				749,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[800, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				750,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				751,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				752,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				753,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				754,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				755,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				756,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				757,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				758,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				759,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				760,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				761,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1120, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				762,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1056, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				6,
				763,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1184, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				7,
				764,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1536, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				765,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1472, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				6,
				766,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1600, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				767,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1600, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				768,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1600, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				769,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1600, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				770,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1600, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				771,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1600, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				772,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1600, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				773,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1600, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				774,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1600, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				776,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1920, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				778,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1920, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				779,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1920, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				780,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1920, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				781,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1920, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				782,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				775,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				777,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				783,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				784,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				785,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				786,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2176, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				787,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2368, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				788,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2368, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				789,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2368, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				790,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2240, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				791,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2304, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				792,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2368, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				793,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2368, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				794,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2368, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				795,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2176, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				796,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2176, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				798,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2368, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				801,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2176, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				802,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1824, 64, 0, 256, 157, 0, -3.009853363037109, 1, 0.5, 0.5031847357749939, 0, 0, []],
				65,
				800,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"UI",
			2,
			9420694325684738,
			true,
			[255, 255, 255],
			true,
			0.009999999776482582,
			0.009999999776482582,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[256, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				20,
				839,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[75, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				18,
				840,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 64, 0, 495, 44, 0, 0, 1, 0.5010101199150085, 0.5, 0, 0, [[1, 1, 0]]],
				26,
				841,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 64, 0, 196, 49, 0, 0, 1, 0.4132653176784515, 0.4897959232330322, 0, 0, [[1, 1, 0]]],
				27,
				842,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.449999988079071, 0, 0, [[1, 1, 1]]],
				36,
				843,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[812, 680, 0, 80, 80, 0, 0, 1, 0.5, 0.550000011920929, 0, 0, [[1, 1, 1]]],
				75,
				844,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 64, 0, 69, 71, 0, 0, 1, 0.5072463750839233, 0.5070422291755676, 0, 0, []],
				73,
				1098,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Layout 8",
		3100,
		768,
		false,
		"Event sheet 8",
		64069412880156,
		[
		[
			"BG",
			0,
			6766143847367368,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[32, -160, 0, 32, 16, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.8, 0, 1.5]]],
				22,
				845,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1536, 384, 0, 3125.994384765625, 769.4755249023438, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				66,
				702,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 0",
			1,
			8174960073214199,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1120, 416, 0, 80, 199, 0, 0, 1, 0.5, 0.5075376629829407, 0, 0, []],
				77,
				866,
				[
				],
				[
				[
					1,
					1,
					0,
					4,
					0,
					0,
					0,
					96,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 416, 0, 80, 199, 0, 0, 1, 0.5, 0.5075376629829407, 0, 0, []],
				77,
				895,
				[
				],
				[
				[
					1,
					1,
					0,
					4,
					0,
					2,
					0,
					96,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[192, -10, 0, 16, 4, 0, 0, 0, 0, 0.5, 0, 0, []],
				13,
				848,
				[
					[-1]
				],
				[
				[
				],
				[
					1,
					0.5,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					2,
					1
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[325.8203735351563, -53.330078125, 0, 32, 14, 0, -1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				849,
				[
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1,
					1
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				850,
				[
				],
				[
				[
					330,
					1500,
					1500,
					400,
					1500,
					1000,
					1,
					1
				],
				[
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 544, 0, 24, 24, 0, 0, 1, 0.5, 0.7916666865348816, 0, 0, []],
				25,
				851,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 544, 0, 128, 120, 0, 0, 1, 0.5078125, 0.5083333253860474, 0, 0, [[1, 0, 0]]],
				29,
				852,
				[
				],
				[
				[
					0,
					0,
					0,
					0.5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 544, 0, 128, 128, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				30,
				853,
				[
				],
				[
				[
					1,
					5,
					0,
					2,
					0,
					0,
					0,
					20,
					0
				],
				[
					0,
					1,
					23,
					"0,0",
					0,
					1,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 544, 0, 252, 121, 0, 0, 1, 0.5, 0.5785123705863953, 0, 0, []],
				31,
				854,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, -160, 0, 54, 33, 0, 0, 1, 0.4444444477558136, 0.4848484992980957, 0, 0, [[0, 0, 0]]],
				34,
				855,
				[
				],
				[
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2880, 608, 0, 256, 256, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				856,
				[
				],
				[
				[
					0,
					1,
					19,
					"0,0",
					0,
					2.5,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, -64, 0, 64, 100, 0, 0, 0, 0.609375, 0.5400000214576721, 0, 0, []],
				61,
				857,
				[
				],
				[
				[
					1,
					0.5,
					0,
					0,
					1
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 1664, 0, 202, 162, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				58,
				858,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1824, 1472, 0, -256, 162, 0, -0.2980712950229645, 1, 0.5, 0.5, 0, 0, []],
				55,
				859,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				860,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				803,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				8,
				804,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1024, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				805,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				806,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1024, 640, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				807,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 640, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				808,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088, 640, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				809,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1152, 640, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				810,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 640, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				811,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				812,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1152, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				813,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				814,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1280, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				815,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				816,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1152, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				817,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				818,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1280, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				819,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088, 320, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				820,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1152, 320, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				821,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 320, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				822,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1280, 320, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				823,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1280, 640, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				828,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, 640, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				829,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1408, 640, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				830,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				831,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				832,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, 320, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				833,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1408, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				835,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1408, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				836,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1408, 320, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				837,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1472, 448, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				846,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1472, 384, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				847,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1472, 320, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				861,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1472, 640, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				863,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1472, 576, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				864,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1472, 512, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				865,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				867,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1152, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				868,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				869,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1280, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				870,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				871,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1408, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				872,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1472, 256, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				873,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				824,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1152, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				825,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				826,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1280, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				827,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				834,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1408, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				838,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1472, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				862,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				874,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1152, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				875,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				876,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1280, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				877,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				878,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1408, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				879,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1472, 128, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				880,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				881,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1152, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				882,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				883,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1280, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				884,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				885,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1408, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				886,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1472, 64, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				887,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				888,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1152, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				889,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				890,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1280, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				891,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1344, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				892,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1408, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				893,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1472, 0, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				894,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 320, 0, 95, 83, 0, 0, 1, 0.4947368502616882, 0.4457831382751465, 0, 0, []],
				32,
				896,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 320, 0, 79, 36, 0, 0, 1, 0.177215188741684, 0.5, 0, 0, []],
				33,
				897,
				[
				],
				[
				[
					500,
					2,
					1,
					180,
					0,
					0,
					500,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1728, 416, 0, 192, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				76,
				898,
				[
				],
				[
				[
					1,
					1,
					0,
					4,
					0,
					0,
					0,
					250,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2080, 416, 0, 192, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				76,
				899,
				[
				],
				[
				[
					1,
					1,
					0,
					4,
					0,
					2,
					0,
					250,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2816, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				900,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2880, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				901,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2944, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				8,
				902,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"UI",
			2,
			8554292931628218,
			true,
			[255, 255, 255],
			true,
			0.009999999776482582,
			0.009999999776482582,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[256, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				20,
				984,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[75, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				18,
				985,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 64, 0, 495, 44, 0, 0, 1, 0.5010101199150085, 0.5, 0, 0, [[1, 1, 0]]],
				26,
				986,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 64, 0, 196, 49, 0, 0, 1, 0.4132653176784515, 0.4897959232330322, 0, 0, [[1, 1, 0]]],
				27,
				987,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.449999988079071, 0, 0, [[1, 1, 1]]],
				36,
				988,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[812, 680, 0, 80, 80, 0, 0, 1, 0.5, 0.550000011920929, 0, 0, [[1, 1, 1]]],
				75,
				989,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 64, 0, 69, 71, 0, 0, 1, 0.5072463750839233, 0.5070422291755676, 0, 0, []],
				73,
				1099,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Layout 9",
		3100,
		768,
		false,
		"Event sheet 9",
		7678848565544844,
		[
		[
			"BG",
			0,
			9513149928391177,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[32, -160, 0, 32, 16, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.8, 0, 1.5]]],
				22,
				990,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1632, 384, 0, 3273.896728515625, 774.1233520507813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				67,
				715,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 0",
			1,
			2507357988301791,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[726, 57, 0, 222, 223, 0, 0, 1, 0.5090090036392212, 0.5112107396125794, 0, 0, []],
				56,
				1047,
				[
				],
				[
				[
					180,
					0
				],
				[
					1,
					0,
					1,
					4,
					0,
					0,
					0,
					180,
					0
				],
				[
					0,
					0,
					4,
					4,
					0,
					0,
					0,
					50,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[192, -10, 0, 16, 4, 0, 0, 0, 0, 0.5, 0, 0, []],
				13,
				993,
				[
					[-1]
				],
				[
				[
				],
				[
					1,
					0.5,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					2,
					1
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[325.8203735351563, -53.330078125, 0, 32, 14, 0, -1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				994,
				[
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1,
					1
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				995,
				[
				],
				[
				[
					330,
					1500,
					1500,
					400,
					1500,
					1000,
					1,
					1
				],
				[
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 288, 0, 24, 24, 0, 0, 1, 0.5, 0.7916666865348816, 0, 0, []],
				25,
				996,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 352, 0, 128, 120, 0, 0, 1, 0.5078125, 0.5083333253860474, 0, 0, [[1, 0, 0]]],
				29,
				997,
				[
				],
				[
				[
					0,
					0,
					0,
					0.5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 352, 0, 128, 128, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				30,
				998,
				[
				],
				[
				[
					1,
					5,
					0,
					2,
					0,
					0,
					0,
					20,
					0
				],
				[
					0,
					1,
					23,
					"0,0",
					0,
					1,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 352, 0, 252, 121, 0, 0, 1, 0.5, 0.5785123705863953, 0, 0, []],
				31,
				999,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, -160, 0, 54, 33, 0, 0, 1, 0.4444444477558136, 0.4848484992980957, 0, 0, [[0, 0, 0]]],
				34,
				1000,
				[
				],
				[
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3008, 160, 0, 256, 256, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				1001,
				[
				],
				[
				[
					0,
					1,
					19,
					"0,0",
					0,
					2.5,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, -64, 0, 64, 100, 0, 0, 0, 0.609375, 0.5400000214576721, 0, 0, []],
				61,
				1002,
				[
				],
				[
				[
					1,
					0.5,
					0,
					0,
					1
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 1664, 0, 202, 162, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				58,
				1003,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1824, 1472, 0, -256, 162, 0, -0.2980712950229645, 1, 0.5, 0.5, 0, 0, []],
				55,
				1004,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1120, 480, 0, 192, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				76,
				1089,
				[
				],
				[
				[
					1,
					0,
					0,
					4,
					0,
					0,
					0,
					200,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				903,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				904,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				905,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				906,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				907,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				908,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				909,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				910,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				911,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				912,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				913,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				914,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				915,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				916,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				917,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				918,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				919,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				921,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				920,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				922,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				923,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				925,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				926,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				927,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				928,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				929,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				930,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				924,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				931,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				932,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				933,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				934,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				935,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				936,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				937,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				938,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[576, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				939,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[576, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				940,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[576, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				941,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[576, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				942,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[576, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				943,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[576, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				944,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[576, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				946,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[576, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				947,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				948,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				949,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				950,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				951,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				952,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				953,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[576, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				954,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[640, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				955,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[704, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				945,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[768, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				956,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[832, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				957,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[896, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				958,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				959,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1024, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				960,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				961,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				962,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				963,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[992, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				964,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				967,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1632, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				968,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1504, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				1,
				965,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1696, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				2,
				966,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				969,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				970,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				971,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				972,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				973,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				974,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				975,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				976,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				977,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				978,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				979,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				980,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				981,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				982,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				983,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				991,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				992,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1005,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1006,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1007,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2784, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1008,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2784, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1009,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2784, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1010,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2784, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1011,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2784, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1012,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2784, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1014,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2784, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1015,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2816, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1019,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2880, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1020,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2848, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				1021,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2912, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				1022,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2784, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				1013,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3040, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				1023,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3104, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				1024,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2976, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				1025,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2944, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1026,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3008, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1027,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3072, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1028,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2176, 384, 0, 400, 172, 0, 0, 1, 0.5049999952316284, 0.4825581312179565, 0, 0, []],
				71,
				1029,
				[
				],
				[
				[
					1,
					5,
					0,
					4,
					0,
					0,
					0,
					10,
					0
				],
				[
					1,
					0,
					0,
					8,
					0,
					0,
					0,
					250,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[230, 352, 0, 64, 64, 0, 0, 1, 0.609375, 0.515625, 0, 0, []],
				79,
				1030,
				[
				],
				[
				[
					1,
					1,
					2,
					2,
					0,
					0,
					0,
					450,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2679, 352, 0, 64, 64, 0, 0, 1, 0.609375, 0.515625, 0, 0, []],
				79,
				1016,
				[
				],
				[
				[
					1,
					1,
					2,
					2,
					0,
					0,
					0,
					450,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1017,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1018,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1031,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1032,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1033,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1034,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1035,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1036,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1037,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1038,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1039,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1040,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1041,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1042,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1043,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1044,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1045,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				1046,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"UI",
			2,
			685529895782641,
			true,
			[255, 255, 255],
			true,
			0.009999999776482582,
			0.009999999776482582,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[256, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				20,
				1129,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[75, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				18,
				1130,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 64, 0, 495, 44, 0, 0, 1, 0.5010101199150085, 0.5, 0, 0, [[1, 1, 0]]],
				26,
				1131,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 64, 0, 196, 49, 0, 0, 1, 0.4132653176784515, 0.4897959232330322, 0, 0, [[1, 1, 0]]],
				27,
				1132,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.449999988079071, 0, 0, [[1, 1, 1]]],
				36,
				1133,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[812, 680, 0, 80, 80, 0, 0, 1, 0.5, 0.550000011920929, 0, 0, [[1, 1, 1]]],
				75,
				1134,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 64, 0, 69, 71, 0, 0, 1, 0.5072463750839233, 0.5070422291755676, 0, 0, []],
				73,
				1100,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Layout 10",
		3100,
		768,
		false,
		"Event sheet 10",
		4850440731928421,
		[
		[
			"BG",
			0,
			3101713741381599,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[32, -160, 0, 32, 16, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.8, 0, 1.5]]],
				22,
				1135,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1632, 384, 0, 3284.687255859375, 774.385986328125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				70,
				1136,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1048,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1049,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 0",
			1,
			8378618340681375,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[803, 370, 0, 64, 64, 0, 0, 1, 0.609375, 0.515625, 0, 0, []],
				79,
				1054,
				[
				],
				[
				[
					1,
					1,
					2,
					2,
					0,
					0,
					0,
					450,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 448, 0, 222, 223, 0, 0, 1, 0.5090090036392212, 0.5112107396125794, 0, 0, []],
				56,
				1080,
				[
				],
				[
				[
					180,
					0
				],
				[
					1,
					1,
					1,
					4,
					0,
					0,
					0,
					250,
					0
				],
				[
					0,
					0,
					4,
					4,
					0,
					0,
					0,
					50,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[635, 119, 0, 222, 223, 0, 0, 1, 0.5090090036392212, 0.5112107396125794, 0, 0, []],
				56,
				1053,
				[
				],
				[
				[
					180,
					0
				],
				[
					1,
					0,
					1,
					4,
					0,
					0,
					0,
					180,
					0
				],
				[
					0,
					0,
					4,
					4,
					0,
					0,
					0,
					50,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 416, 0, 80, 199, 0, 0, 1, 0.5, 0.5075376629829407, 0, 0, []],
				77,
				1137,
				[
				],
				[
				[
					1,
					1,
					0,
					4,
					0,
					0,
					0,
					192,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[192, -10, 0, 16, 4, 0, 0, 0, 0, 0.5, 0, 0, []],
				13,
				1138,
				[
					[-1]
				],
				[
				[
				],
				[
					1,
					0.5,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					2,
					1
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[325.8203735351563, -53.330078125, 0, 32, 14, 0, -1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				1139,
				[
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1,
					1
				],
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				17,
				1140,
				[
				],
				[
				[
					330,
					1500,
					1500,
					400,
					1500,
					1000,
					1,
					1
				],
				[
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 544, 0, 24, 24, 0, 0, 1, 0.5, 0.7916666865348816, 0, 0, []],
				25,
				1141,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 288, 0, 128, 120, 0, 0, 1, 0.5078125, 0.5083333253860474, 0, 0, [[1, 0, 0]]],
				29,
				1142,
				[
				],
				[
				[
					0,
					0,
					0,
					0.5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 288, 0, 128, 128, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				30,
				1143,
				[
				],
				[
				[
					1,
					5,
					0,
					2,
					0,
					0,
					0,
					20,
					0
				],
				[
					0,
					1,
					23,
					"0,0",
					0,
					1,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 288, 0, 252, 121, 0, 0, 1, 0.5, 0.5785123705863953, 0, 0, []],
				31,
				1144,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, -160, 0, 54, 33, 0, 0, 1, 0.4444444477558136, 0.4848484992980957, 0, 0, [[0, 0, 0]]],
				34,
				1145,
				[
				],
				[
				[
					400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2272, 160, 0, 256, 256, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				1146,
				[
				],
				[
				[
					0,
					1,
					19,
					"0,0",
					0,
					2.5,
					0
				],
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, -64, 0, 64, 100, 0, 0, 0, 0.609375, 0.5400000214576721, 0, 0, []],
				61,
				1147,
				[
				],
				[
				[
					1,
					0.5,
					0,
					0,
					1
				],
				[
					0,
					5,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 1664, 0, 202, 162, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				58,
				1148,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1824, 1472, 0, -256, 162, 0, -0.2980712950229645, 1, 0.5, 0.5, 0, 0, []],
				55,
				1149,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[160, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1150,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1151,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1152,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1153,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1154,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1155,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1156,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1157,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1158,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1159,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1160,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1161,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1162,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1164,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1165,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1166,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1168,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1169,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[32, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1170,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				9,
				1171,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1172,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1173,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1174,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1175,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1176,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1177,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1178,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1179,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1180,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1181,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1182,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1183,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1184,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1185,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1186,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1187,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1188,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1189,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[992, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1190,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[992, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1191,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[416, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1192,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[480, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1193,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1194,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1195,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[672, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1196,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1197,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[800, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1198,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1199,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1200,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[992, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1201,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[992, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1202,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[992, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1203,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1207,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1208,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1209,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1210,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1440, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1212,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1504, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1213,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1214,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1632, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1215,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1440, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1216,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1504, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1217,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1218,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1632, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1219,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1696, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				8,
				1220,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1696, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				8,
				1221,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1222,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1223,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1224,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1225,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1226,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1227,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1228,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1229,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1230,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1231,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2176, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1232,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1233,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[803, 512, 0, 192, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				76,
				1234,
				[
				],
				[
				[
					1,
					0,
					0,
					4,
					0,
					0,
					0,
					250,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1984, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1237,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1238,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1239,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1240,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1241,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1242,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1243,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1244,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1245,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1246,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1247,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1248,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1249,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1250,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1251,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1252,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2112, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1253,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1255,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1256,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1257,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1258,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1259,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1260,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1261,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1262,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1263,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1264,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1265,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1266,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1267,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1268,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1269,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 736, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1270,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1271,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1272,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[288, 384, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				78,
				1273,
				[
				],
				[
				[
					1,
					1,
					0,
					8,
					0,
					0,
					0,
					300,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 672, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1050,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 608, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1051,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[96, 384, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				78,
				1052,
				[
				],
				[
				[
					1,
					1,
					0,
					8,
					0,
					4,
					0,
					300,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1280, 352, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				78,
				1055,
				[
				],
				[
				[
					1,
					1,
					0,
					8,
					0,
					0,
					0,
					300,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088, 352, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				78,
				1056,
				[
				],
				[
				[
					1,
					1,
					0,
					8,
					0,
					4,
					0,
					300,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1057,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1058,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, -32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1059,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1376, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1060,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1856, 320, 0, 64, 64, 0, 0, 1, 0.609375, 0.515625, 0, 0, []],
				79,
				1061,
				[
				],
				[
				[
					1,
					1,
					2,
					2,
					0,
					0,
					0,
					450,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1062,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1063,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1064,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1065,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1066,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1067,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 544, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1068,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 480, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1069,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 416, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1070,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1071,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1072,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2432, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1073,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1074,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1075,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2496, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1076,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 352, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1077,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 288, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1078,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560, 224, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				11,
				1079,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"UI",
			2,
			5473821804270832,
			true,
			[255, 255, 255],
			true,
			0.009999999776482582,
			0.009999999776482582,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[256, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				20,
				1274,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[75, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				18,
				1275,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[608, 64, 0, 495, 44, 0, 0, 1, 0.5010101199150085, 0.5, 0, 0, [[1, 1, 0]]],
				26,
				1276,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 64, 0, 196, 49, 0, 0, 1, 0.4132653176784515, 0.4897959232330322, 0, 0, [[1, 1, 0]]],
				27,
				1277,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[928, 672, 0, 80, 80, 0, 0, 1, 0.5, 0.449999988079071, 0, 0, [[1, 1, 1]]],
				36,
				1278,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[812, 680, 0, 80, 80, 0, 0, 1, 0.5, 0.550000011920929, 0, 0, [[1, 1, 1]]],
				75,
				1279,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Menu",
		1024,
		768,
		false,
		"menu Events",
		9598789832087761,
		[
		[
			"Layer 0",
			0,
			2158322714262724,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1728, 960, 0, 0, 1, 0, 0, 0, 0, []],
				37,
				69,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[128, 128, 0, 256, 256, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				70,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[512, 448, 0, 640, 512, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				46,
				78,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[512, 512, 0, 330, 128, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				71,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[512, -64, 0, 128, 128, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				47,
				79,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					0
				]
			]
,			[
				[352, -64, 0, 81, 87, 0, 0, 1, 0.3580246865749359, 0.517241358757019, 0, 0, []],
				48,
				80,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-64, 832, 0, 200, 30, 0, 0, 1, 0, 0, 0, 0, []],
				49,
				81,
				[
				],
				[
				],
				[
					"Text",
					0,
					"12pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[640, -64, 0, -81, 87, 0, 0, 1, 0.3580246865749359, 0.517241358757019, 0, 0, []],
				50,
				82,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 64, 0, 128, 128, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				149,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"objects",
		1708,
		960,
		false,
		null,
		9991776181560259,
		[
		[
			"Layer 0",
			0,
			9690401000079316,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[384, 96, 0, 640, 512, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				41,
				73,
				[
				],
				[
				[
					1,
					0,
					23,
					"480, 384",
					0,
					1.5,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				42,
				74,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[256, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				43,
				75,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[544, 192, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				44,
				76,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, -192, 0, 192, 64, 0, 0, 1, 0, 0, 0, 0, []],
				45,
				77,
				[
				],
				[
				[
				]
				],
				[
					64,
					64,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"0",
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[608, -256, 0, 128, 128, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				150,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[192, -256, 0, 64, 22, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				69,
				209,
				[
				],
				[
				[
					-400,
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[736, -160, 0, -64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				82,
				1102,
				[
					[0]
				],
				[
				[
					50,
					1500,
					1500,
					650,
					1500,
					1000,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
	],
	[
	[
		"Event sheet 1",
		[
		[
			1,
			"currentLevel",
			0,
			0,
false,false,239817279431573,false
		]
,		[
			1,
			"Won",
			0,
			0,
false,false,8913498708849932,false
		]
,		[
			1,
			"playing",
			0,
			0,
false,false,7235587071169127,false
		]
,		[
			1,
			"chalk",
			0,
			0,
false,false,9364051857836663,false
		]
,		[
			1,
			"new_rocket",
			0,
			0,
false,false,8574967786559759,false
		]
,		[
			1,
			"dist",
			0,
			0,
false,false,9886153793219147,false
		]
,		[
			1,
			"index",
			0,
			0,
false,false,1139112125159248,false
		]
,		[
			0,
			[true, "startup"],
			false,
			null,
			1618424538697542,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1618424538697542,
				false
				,[
				[
					1,
					[
						2,
						"startup"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7917089818569855,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8411279471511331,
					false
				]
				],
				[
				[
					23,
					cr.plugins_.MagiCam.prototype.acts.CreateLocalCamera,
					null,
					2002062436133846,
					false
					,[
					[
						1,
						[
							2,
							"main"
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.FollowObject,
					null,
					1817899611668138,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						4,
						17
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.SetFollowLag,
					null,
					68488229259389,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						0,
						[
							0,
							80
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.EnableFollowing,
					null,
					1704487955455525,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7117959163755298,
					false
				]
,				[
					25,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5312454628259459,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					31,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6214133184110367,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					33,
					cr.behaviors.Turret.prototype.acts.AddTarget,
					"Turret",
					7457535066947465,
					false
					,[
					[
						4,
						17
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9333427440274822,
					false
					,[
					[
						0,
						[
							0,
							32
						]
					]
					]
				]
,				[
					40,
					cr.behaviors.lunarray_LiteTween.prototype.acts.Start,
					"LiteTween",
					2792435586858131,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3542860991119762,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					922161945544066,
					false
					,[
					[
						11,
						"currentLevel"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					36,
					cr.plugins_.Sprite.prototype.acts.SetEffectEnabled,
					null,
					2042409084215731,
					false
					,[
					[
						3,
						0
					]
,					[
						1,
						[
							2,
							"SetColor"
						]
					]
					]
				]
,				[
					18,
					cr.plugins_.Sprite.prototype.acts.SetEffectEnabled,
					null,
					1192382845759201,
					false
					,[
					[
						3,
						0
					]
,					[
						1,
						[
							2,
							"SetColor"
						]
					]
					]
				]
,				[
					20,
					cr.plugins_.Sprite.prototype.acts.SetEffectEnabled,
					null,
					2208902849623499,
					false
					,[
					[
						3,
						0
					]
,					[
						1,
						[
							2,
							"SetColor"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3508013199127607,
			[
			[
				19,
				cr.plugins_.Touch.prototype.cnds.OnTouchStart,
				null,
				1,
				false,
				false,
				false,
				9798714535968959,
				false
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				1873756360790214,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					969328836843501,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					755430451816092,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9528214311859306,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							30
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					5411014941167516,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4460652117595909,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9724805708362406,
					false
					,[
					[
						11,
						"new_rocket"
					]
,					[
						7,
						[
							20,
							16,
							cr.plugins_.Sprite.prototype.exps.UID,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1687133180243819,
					false
					,[
					[
						11,
						"index"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					760054005424475,
					false
					,[
					[
						4,
						13
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.X,
							false,
							null
						]
					]
,					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3475093568404475,
			[
			[
				19,
				cr.plugins_.Touch.prototype.cnds.IsInTouch,
				null,
				0,
				false,
				false,
				false,
				1039172558565887,
				false
			]
,			[
				13,
				cr.plugins_.Sprite.prototype.cnds.PickTopBottom,
				null,
				0,
				false,
				false,
				true,
				8888707936361113,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				19,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				true,
				false,
				2471627503673226,
				false
				,[
				[
					4,
					18
				]
				]
			]
,			[
				19,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				true,
				false,
				939511207514924,
				false
				,[
				[
					4,
					20
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				8822921510327894,
				false
				,[
				[
					11,
					"chalk"
				]
,				[
					8,
					2
				]
,				[
					7,
					[
						0,
						30
					]
				]
				]
			]
,			[
				19,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				true,
				false,
				6217851688899505,
				false
				,[
				[
					4,
					36
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				8827574069395261,
				false
				,[
				[
					11,
					"playing"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				13,
				cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
				null,
				7333979600634814,
				false
				,[
				[
					0,
					[
						20,
						19,
						cr.plugins_.Touch.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						19,
						cr.plugins_.Touch.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				9019643095923444,
				false
				,[
				[
					11,
					"dist"
				]
,				[
					7,
					[
						19,
						cr.system_object.prototype.exps.distance
						,[
[
							20,
							13,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
,[
							20,
							13,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
,[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.X,
							false,
							null
						]
,[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.Y,
							false,
							null
						]
						]
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				9811954262508116,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4168731548111205,
					false
					,[
					[
						11,
						"dist"
					]
,					[
						8,
						4
					]
,					[
						7,
						[
							0,
							50
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.For,
					null,
					0,
					true,
					false,
					false,
					4747504647187848,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						0,
						[
							7,
							[
								23,
								"dist"
							]
							,[
								0,
								20
							]
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8057800598200712,
					false
					,[
					[
						11,
						"index"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.loopindex
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					8020250629489314,
					false
					,[
					[
						4,
						13
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			4257612237994721,
			[
			[
				13,
				cr.plugins_.Sprite.prototype.cnds.OnCreated,
				null,
				1,
				false,
				false,
				false,
				3614435512358167,
				false
			]
			],
			[
			[
				13,
				cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
				null,
				4261372167177117,
				false
				,[
				[
					10,
					0
				]
,				[
					7,
					[
						23,
						"new_rocket"
					]
				]
				]
			]
,			[
				13,
				cr.plugins_.Sprite.prototype.acts.MoveForward,
				null,
				4799502910368704,
				false
				,[
				[
					0,
					[
						6,
						[
							0,
							20
						]
						,[
							23,
							"index"
						]
					]
				]
				]
			]
,			[
				13,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4382016227934165,
				false
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			70295441739193,
			[
			[
				-1,
				cr.system_object.prototype.cnds.ForEach,
				null,
				0,
				true,
				false,
				false,
				4802749239341187,
				false
				,[
				[
					4,
					16
				]
				]
			]
,			[
				16,
				cr.behaviors.Bullet.prototype.cnds.CompareSpeed,
				"Bullet",
				0,
				false,
				false,
				false,
				6430079403892248,
				false
				,[
				[
					8,
					4
				]
,				[
					0,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				16,
				cr.plugins_.Sprite.prototype.acts.SubInstanceVar,
				null,
				327358369061808,
				false
				,[
				[
					10,
					0
				]
,				[
					7,
					[
						6,
						[
							22,
							16,
							"Bullet",
							cr.behaviors.Bullet.prototype.exps.Speed,
							false,
							null
						]
						,[
							19,
							cr.system_object.prototype.exps.dt
						]
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				8932690612467941,
				[
				[
					16,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8565735395274596,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						3
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3775265374448962,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							20,
							16,
							cr.plugins_.Sprite.prototype.exps.UID,
							false,
							null
						]
					]
					]
				]
				],
				[
				[
					16,
					cr.plugins_.Sprite.prototype.acts.MoveForward,
					null,
					1732920913478987,
					false
					,[
					[
						0,
						[
							21,
							16,
							false,
							null
							,0
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					104591240574208,
					[
					[
						-1,
						cr.system_object.prototype.cnds.PickNth,
						null,
						0,
						false,
						false,
						false,
						9021046667780264,
						false
						,[
						[
							4,
							13
						]
,						[
							0,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						16,
						cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
						null,
						8891652897530559,
						false
						,[
						[
							0,
							[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
						]
,						[
							0,
							[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.Y,
								false,
								null
							]
						]
						]
					]
,					[
						16,
						cr.plugins_.Sprite.prototype.acts.MoveForward,
						null,
						5198441408001011,
						false
						,[
						[
							0,
							[
								3,
								[
									21,
									16,
									false,
									null
									,0
								]
							]
						]
						]
					]
,					[
						16,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						6563559599357798,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.distance
								,[
[
									20,
									16,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
,[
									20,
									16,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
,[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
,[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3354689481123509,
					[
					[
						-1,
						cr.system_object.prototype.cnds.PickNth,
						null,
						0,
						false,
						false,
						false,
						1235284316446701,
						false
						,[
						[
							4,
							13
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						13,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						1762456331806474,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								-1
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Controls"],
			false,
			null,
			6476413208566058,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6476413208566058,
				false
				,[
				[
					1,
					[
						2,
						"Controls"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				2378954035050381,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					61193289275929,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5202213239864416,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					1767006857120208,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					1110479191445238,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7459421735494363,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5392197382886977,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2741476194463408,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					3477621804675917,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					6766706577324827,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6428467524045654,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5790650337849462,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					9956062548007539,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3824230094188158,
					false
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					4673905694447007,
					false
					,[
					[
						1,
						[
							2,
							"runRight"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9177106028405926,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4089829789943295,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					1904366834580957,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					69748144437356,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4646350159830945,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					1809720200266847,
					false
					,[
					[
						1,
						[
							2,
							"womanRun"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9375834452069542,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2185526367632061,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5601227515715948,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8104204382364344,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					8357799538890916,
					false
					,[
					[
						3,
						2
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6088334857620942,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					8518131210236913,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9246526435594335,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2957884236761213,
					false
					,[
					[
						1,
						[
							2,
							"fall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2579191745227263,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					2437133729362328,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3952846283637568,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					9257567615457649,
					false
					,[
					[
						1,
						[
							2,
							"womanFall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3106473856453417,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3586658461788346,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					true,
					false,
					9134735927244833,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					679186732446152,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8406142125581953,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						5586645649965757,
						false
						,[
						[
							1,
							[
								2,
								"Default"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6147779586503827,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7829603937823982,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						1898119956890654,
						false
						,[
						[
							1,
							[
								2,
								"womanStand"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "create chalk"],
			false,
			null,
			2188011347319583,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2188011347319583,
				false
				,[
				[
					1,
					[
						2,
						"create chalk"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9045784331479839,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					2189325118254892,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2255931126054609,
					false
					,[
					[
						4,
						22
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7115499412999326,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7056594899883767,
					false
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7276225993972347,
					false
				]
,				[
					22,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4029351635124102,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.random
							,[
[
								0,
								0
							]
,[
								0,
								4
							]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Die"],
			false,
			null,
			4435248600341787,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4435248600341787,
				false
				,[
				[
					1,
					[
						2,
						"Die"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				true,
				null,
				3285495246306755,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					3461674317821715,
					false
					,[
					[
						4,
						24
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					367436114245835,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1362370293595917,
					false
					,[
					[
						4,
						28
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8689541261363243,
					false
					,[
					[
						4,
						34
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1819195477025269,
					false
					,[
					[
						4,
						82
					]
					]
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					1380794836592222,
					false
				]
,				[
					22,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7772205210954366,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					4479920478521885,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					5522544661653608,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					114244122048044,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1347675061012566,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7393597348444092,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					2634976384706476,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					2318378313515315,
					false
					,[
					[
						0,
						[
							0,
							3
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					921778373654165,
					false
					,[
					[
						4,
						82
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							32
						]
					]
,					[
						0,
						[
							0,
							320
						]
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					3567992848394111,
					false
					,[
					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					7523527182551,
					[
					[
						31,
						cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
						null,
						0,
						false,
						true,
						false,
						577802723359357,
						false
						,[
						[
							4,
							29
						]
						]
					]
					],
					[
					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						7323234637663983,
						false
						,[
						[
							4,
							29
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						8338069084971529,
						false
						,[
						[
							4,
							30
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lifeBar"],
			false,
			null,
			568361057047214,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				568361057047214,
				false
				,[
				[
					1,
					[
						2,
						"lifeBar"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5978517538884633,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					4787179600616214,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					4728124335565214,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2548287918897133,
					false
					,[
					[
						0,
						[
							23,
							"chalk"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "pickups"],
			false,
			null,
			3786499328198083,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3786499328198083,
				false
				,[
				[
					1,
					[
						2,
						"pickups"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9808912417514592,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					7521529665827309,
					false
					,[
					[
						4,
						30
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7595067754198922,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3296855585634899,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					30,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7283974290837169,
					false
				]
,				[
					30,
					cr.behaviors.lunarray_LiteTween.prototype.acts.Start,
					"LiteTween",
					6850841531925455,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					29,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					3617505865907839,
					false
				]
,				[
					26,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					9765010164463005,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "TURRET"],
			false,
			null,
			8158936565834879,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8158936565834879,
				false
				,[
				[
					1,
					[
						2,
						"TURRET"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5255223900274516,
				[
				[
					33,
					cr.behaviors.Turret.prototype.cnds.OnShoot,
					"Turret",
					1,
					false,
					false,
					false,
					9639962656296001,
					false
				]
				],
				[
				[
					33,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					4659492504414959,
					false
					,[
					[
						4,
						34
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8354385667806217,
				[
				[
					34,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1436242035215772,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					8269525481715218,
					false
				]
,				[
					34,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					1477184187363266,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5939741507460164,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					true,
					false,
					7497957726178886,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					3034557725192197,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "instrux"],
			false,
			null,
			1004081580142379,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1004081580142379,
				false
				,[
				[
					1,
					[
						2,
						"instrux"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				6025053071093763,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					2452235598201664,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					8434439227386342,
					false
					,[
					[
						4,
						40
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2058276179474109,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					40,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					8495287595759829,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Win"],
			false,
			null,
			8941957209501525,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8941957209501525,
				false
				,[
				[
					1,
					[
						2,
						"Win"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8794349161936297,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					5356673287047002,
					false
					,[
					[
						4,
						35
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7442159553042637,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					6078817368520864,
					false
					,[
					[
						4,
						41
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						0,
						[
							0,
							448
						]
					]
,					[
						0,
						[
							0,
							-360
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8139377261577016,
				[
				[
					41,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					3070591389029929,
					false
				]
				],
				[
				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2712858539961328,
					false
					,[
					[
						4,
						42
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					9825987791591479,
					false
					,[
					[
						4,
						43
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					7225702950689165,
					false
					,[
					[
						4,
						44
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					3118076463343892,
					false
					,[
					[
						4,
						45
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
,				[
					42,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					6995946150830311,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					43,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4140996666384372,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					44,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4204056078052132,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					45,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					7109155165807662,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9485888729240491,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3923396647855167,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					45,
					cr.plugins_.Spritefont2.prototype.acts.SetText,
					null,
					8678014756125656,
					false
					,[
					[
						7,
						[
							23,
							"currentLevel"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3521043977470791,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					1560965842542471,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					9358321295500408,
					false
					,[
					[
						4,
						44
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					454773479260659,
					false
					,[
					[
						6,
						"Layout 2"
					]
					]
				]
,				[
					54,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					7161633924440086,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					55533428291001,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3861766703247503,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					8491981096020568,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					8587454901915149,
					false
					,[
					[
						4,
						73
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					6098664550147889,
					false
					,[
					[
						6,
						"Layout 2"
					]
					]
				]
,				[
					54,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					5570281966946212,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6673708097282574,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "zombie"],
			false,
			null,
			9508896364701614,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9508896364701614,
				false
				,[
				[
					1,
					[
						2,
						"zombie"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				705969678675543,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2602010572236284,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.TriggerOnce,
					null,
					0,
					false,
					false,
					false,
					8027842431372429,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					7547346769625613,
					false
					,[
					[
						0,
						[
							0,
							3
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					1014659376421207,
					false
					,[
					[
						4,
						82
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							32
						]
					]
,					[
						0,
						[
							0,
							320
						]
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					4013271974414859,
					false
					,[
					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6545260232659247,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					6015936288851964,
					false
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2041077906017691,
					false
					,[
					[
						1,
						[
							2,
							"walk"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
					null,
					7876744968814734,
					false
					,[
					[
						10,
						0
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6326283575790136,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
					null,
					0,
					false,
					false,
					false,
					4583929342188521,
					false
					,[
					[
						10,
						0
					]
					]
				]
				],
				[
				[
					82,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					1948926292873427,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9452583926374819,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					4436488717802992,
					false
					,[
					[
						4,
						24
					]
					]
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					6391203513585768,
					false
					,[
					[
						1,
						[
							2,
							"die"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
					null,
					8304267455245521,
					false
					,[
					[
						10,
						0
					]
,					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9703918062543635,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					2836056649594179,
					false
					,[
					[
						1,
						[
							2,
							"die"
						]
					]
					]
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					2603912470112375,
					false
				]
				]
			]
			]
		]
		]
	]
,	[
		"menu Events",
		[
		[
			1,
			"musicIsPlaying",
			0,
			0,
false,false,5703342407058406,false
		]
,		[
			1,
			"musicOn",
			0,
			1,
false,false,5772957335343784,false
		]
,		[
			1,
			"character",
			0,
			0,
false,false,1269558159010016,false
		]
,		[
			0,
			[true, "Menu Startup"],
			false,
			null,
			30712012611184,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				30712012611184,
				false
				,[
				[
					1,
					[
						2,
						"Menu Startup"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				6269426889173099,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					6447683471262726,
					false
				]
				],
				[
				[
					38,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					5932644901431045,
					false
					,[
					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Menu Animations"],
			false,
			null,
			7806175510801825,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7806175510801825,
				false
				,[
				[
					1,
					[
						2,
						"Menu Animations"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8150456906905768,
				[
				[
					38,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					236103413219506,
					false
				]
				],
				[
				[
					38,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					9467140423143456,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					38,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					9313894239710032,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Navigation"],
			false,
			null,
			8438720930479248,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8438720930479248,
				false
				,[
				[
					1,
					[
						2,
						"Navigation"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9155979128067623,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					6251502452037684,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					3829651395014006,
					false
					,[
					[
						4,
						39
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					8285085572316826,
					false
					,[
					[
						6,
						"Layout 1"
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "character selecter"],
			false,
			null,
			5976026786827234,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5976026786827234,
				false
				,[
				[
					1,
					[
						2,
						"character selecter"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				6698158367998959,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9897417507686047,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					47,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					6806476864536309,
					false
					,[
					[
						1,
						[
							2,
							"woman"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2898425218637226,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2145160389536153,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					47,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					7443938140810233,
					false
					,[
					[
						1,
						[
							2,
							"man"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2153814835012896,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					7458796282030347,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					351735718073479,
					false
					,[
					[
						4,
						48
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					6540453004658376,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4577519611710467,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						828390191339426,
						false
						,[
						[
							11,
							"character"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				725895925324887,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					760579184859314,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5459182600549318,
					false
					,[
					[
						4,
						50
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					8774137358071494,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						3661532828856175,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						4688765387441349,
						false
						,[
						[
							11,
							"character"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1588404843725816,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				4190341968834804,
				false
			]
			],
			[
			[
				49,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4087371325833416,
				false
				,[
				[
					7,
					[
						23,
						"character"
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "music"],
			false,
			null,
			819403008675982,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				819403008675982,
				false
				,[
				[
					1,
					[
						2,
						"music"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5566297313537188,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					5020048986293776,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					7668717595487055,
					false
					,[
					[
						4,
						52
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					2410051714516218,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
					]
				]
,				[
					52,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					5800206341941023,
					false
				]
,				[
					52,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					8978284466288258,
					false
					,[
					[
						4,
						53
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8971143214693822,
					false
					,[
					[
						11,
						"musicOn"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3026162542903345,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					2662822027057171,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					3440082998387066,
					false
					,[
					[
						4,
						53
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					333163248208672,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
					]
				]
,				[
					53,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					8975793532704684,
					false
					,[
					[
						4,
						52
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					53,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					4174672842269876,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2523402184128581,
					false
					,[
					[
						11,
						"musicOn"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9814456391248863,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7138696917562835,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4417144404583453,
					false
					,[
					[
						11,
						"musicOn"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					54,
					cr.plugins_.Audio.prototype.acts.Play,
					null,
					9057418609451925,
					false
					,[
					[
						2,
						["lines 9",true]
					]
,					[
						3,
						1
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							"menuMusic"
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3371631652373427,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2610585410761155,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					76305735744278,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6952598069502187,
					false
					,[
					[
						11,
						"musicOn"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					54,
					cr.plugins_.Audio.prototype.acts.Stop,
					null,
					4984313720313254,
					false
					,[
					[
						1,
						[
							2,
							"menuMusic"
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8498174531389933,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"Event sheet 2",
		[
		[
			0,
			[true, "startup2"],
			false,
			null,
			9728603936170896,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9728603936170896,
				false
				,[
				[
					1,
					[
						2,
						"startup2"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7917089818569855,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8411279471511331,
					false
				]
				],
				[
				[
					23,
					cr.plugins_.MagiCam.prototype.acts.CreateLocalCamera,
					null,
					2002062436133846,
					false
					,[
					[
						1,
						[
							2,
							"main"
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.FollowObject,
					null,
					1817899611668138,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						4,
						17
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.SetFollowLag,
					null,
					68488229259389,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						0,
						[
							0,
							80
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.EnableFollowing,
					null,
					1704487955455525,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7117959163755298,
					false
				]
,				[
					25,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5312454628259459,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					31,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6214133184110367,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					33,
					cr.behaviors.Turret.prototype.acts.AddTarget,
					"Turret",
					7457535066947465,
					false
					,[
					[
						4,
						17
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9333427440274822,
					false
					,[
					[
						0,
						[
							0,
							32
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3542860991119762,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					922161945544066,
					false
					,[
					[
						11,
						"currentLevel"
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8355322575537389,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7984422853133295,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6100567819788704,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4841428694713654,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					373132913979232,
					false
					,[
					[
						11,
						"musicOn"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					1692112375020934,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					54,
					cr.plugins_.Audio.prototype.acts.Play,
					null,
					5606786951612454,
					false
					,[
					[
						2,
						["lines 2",true]
					]
,					[
						3,
						1
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4699631410744505,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lines"],
			false,
			null,
			1299207258708581,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1299207258708581,
				false
				,[
				[
					1,
					[
						2,
						"lines"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7818067392261083,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchStart,
					null,
					1,
					false,
					false,
					false,
					3665110245719786,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3159297426805137,
					[
					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						5154355638784558,
						false
						,[
						[
							4,
							18
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						1126385298202721,
						false
						,[
						[
							4,
							20
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2568910179999331,
						false
						,[
						[
							11,
							"chalk"
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								30
							]
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						8735524509872,
						false
						,[
						[
							4,
							36
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						504182488387798,
						false
						,[
						[
							11,
							"playing"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2028158657102402,
						false
						,[
						[
							11,
							"new_rocket"
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8588644100045768,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						4235875634504958,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9545359560493081,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsInTouch,
					null,
					0,
					false,
					false,
					false,
					503965779953376,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.cnds.PickTopBottom,
					null,
					0,
					false,
					false,
					true,
					2922272859349311,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					2911505914568754,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					9231077516968121,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5950972518287849,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							30
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					5784135135174638,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8801792441758223,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
					null,
					3862636452642899,
					false
					,[
					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.X,
							false,
							null
						]
					]
,					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8558869250574179,
					false
					,[
					[
						11,
						"dist"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.distance
							,[
[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
,[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.Y,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6934451493440142,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4966304596752358,
						false
						,[
						[
							11,
							"dist"
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								50
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.For,
						null,
						0,
						true,
						false,
						false,
						7548674397182243,
						false
						,[
						[
							1,
							[
								2,
								""
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							0,
							[
								7,
								[
									23,
									"dist"
								]
								,[
									0,
									20
								]
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3753200696561335,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.loopindex
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						6084630383462248,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2825299810579884,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					5813779856839544,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					7039387727047753,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							23,
							"new_rocket"
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.MoveForward,
					null,
					3550333618661213,
					false
					,[
					[
						0,
						[
							6,
							[
								0,
								20
							]
							,[
								23,
								"index"
							]
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5786271750088338,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4532834134057826,
				[
				[
					-1,
					cr.system_object.prototype.cnds.ForEach,
					null,
					0,
					true,
					false,
					false,
					8061250038746654,
					false
					,[
					[
						4,
						16
					]
					]
				]
,				[
					16,
					cr.behaviors.Bullet.prototype.cnds.CompareSpeed,
					"Bullet",
					0,
					false,
					false,
					false,
					6034923367945676,
					false
					,[
					[
						8,
						4
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					16,
					cr.plugins_.Sprite.prototype.acts.SubInstanceVar,
					null,
					8084942421275055,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							6,
							[
								22,
								16,
								"Bullet",
								cr.behaviors.Bullet.prototype.exps.Speed,
								false,
								null
							]
							,[
								19,
								cr.system_object.prototype.exps.dt
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6508274228385922,
					[
					[
						16,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3828382969227175,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						8842515181072747,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
					],
					[
					[
						16,
						cr.plugins_.Sprite.prototype.acts.MoveForward,
						null,
						7544986726524676,
						false
						,[
						[
							0,
							[
								21,
								16,
								false,
								null
								,0
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						2716053482262619,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							8821487267128476,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
							null,
							7895857775770069,
							false
							,[
							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
,							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.MoveForward,
							null,
							2262325521309365,
							false
							,[
							[
								0,
								[
									3,
									[
										21,
										16,
										false,
										null
										,0
									]
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5363474440279499,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.distance
									,[
[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2711514718115195,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							7325189569108291,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							13,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2151505826731249,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									0,
									-1
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Controls2"],
			false,
			null,
			2097951613326358,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2097951613326358,
				false
				,[
				[
					1,
					[
						2,
						"Controls2"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				2378954035050381,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					61193289275929,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5202213239864416,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					1767006857120208,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					1110479191445238,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7459421735494363,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5392197382886977,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2741476194463408,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					3477621804675917,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					6766706577324827,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6428467524045654,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5790650337849462,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					9956062548007539,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3824230094188158,
					false
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					4673905694447007,
					false
					,[
					[
						1,
						[
							2,
							"runRight"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9177106028405926,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4089829789943295,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					1904366834580957,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					69748144437356,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4646350159830945,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					1809720200266847,
					false
					,[
					[
						1,
						[
							2,
							"womanRun"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9375834452069542,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2185526367632061,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5601227515715948,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8104204382364344,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					8357799538890916,
					false
					,[
					[
						3,
						2
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6088334857620942,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					8518131210236913,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9246526435594335,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2957884236761213,
					false
					,[
					[
						1,
						[
							2,
							"fall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2579191745227263,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					2437133729362328,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3952846283637568,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					9257567615457649,
					false
					,[
					[
						1,
						[
							2,
							"womanFall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3106473856453417,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3586658461788346,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					true,
					false,
					9134735927244833,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					679186732446152,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8406142125581953,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						5586645649965757,
						false
						,[
						[
							1,
							[
								2,
								"Default"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6147779586503827,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7829603937823982,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						1898119956890654,
						false
						,[
						[
							1,
							[
								2,
								"womanStand"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "create chalk2"],
			false,
			null,
			7191449572521588,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7191449572521588,
				false
				,[
				[
					1,
					[
						2,
						"create chalk2"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9045784331479839,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					2189325118254892,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2255931126054609,
					false
					,[
					[
						4,
						22
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7115499412999326,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7056594899883767,
					false
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7276225993972347,
					false
				]
,				[
					22,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4029351635124102,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.random
							,[
[
								0,
								0
							]
,[
								0,
								4
							]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Die2"],
			false,
			null,
			6913496797444683,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6913496797444683,
				false
				,[
				[
					1,
					[
						2,
						"Die2"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				true,
				null,
				3285495246306755,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					3461674317821715,
					false
					,[
					[
						4,
						24
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					367436114245835,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1362370293595917,
					false
					,[
					[
						4,
						69
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8689541261363243,
					false
					,[
					[
						4,
						65
					]
					]
				]
				],
				[
				[
					22,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7772205210954366,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					4479920478521885,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					5522544661653608,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					114244122048044,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1347675061012566,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7393597348444092,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					2634976384706476,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					7523527182551,
					[
					[
						31,
						cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
						null,
						0,
						false,
						true,
						false,
						577802723359357,
						false
						,[
						[
							4,
							29
						]
						]
					]
					],
					[
					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						7323234637663983,
						false
						,[
						[
							4,
							29
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						8338069084971529,
						false
						,[
						[
							4,
							30
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lifeBar2"],
			false,
			null,
			8149863152311493,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8149863152311493,
				false
				,[
				[
					1,
					[
						2,
						"lifeBar2"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5978517538884633,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					4787179600616214,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					4728124335565214,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2548287918897133,
					false
					,[
					[
						0,
						[
							23,
							"chalk"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "pickups2"],
			false,
			null,
			6200449934352606,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6200449934352606,
				false
				,[
				[
					1,
					[
						2,
						"pickups2"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9808912417514592,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					7521529665827309,
					false
					,[
					[
						4,
						30
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7595067754198922,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3296855585634899,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					30,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7283974290837169,
					false
				]
,				[
					30,
					cr.behaviors.lunarray_LiteTween.prototype.acts.Start,
					"LiteTween",
					6850841531925455,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					29,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					3617505865907839,
					false
				]
,				[
					26,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					9765010164463005,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "TURRET2"],
			false,
			null,
			637559737032466,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				637559737032466,
				false
				,[
				[
					1,
					[
						2,
						"TURRET2"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8354385667806217,
				[
				[
					69,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1436242035215772,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					8269525481715218,
					false
				]
,				[
					69,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					1477184187363266,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5939741507460164,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					true,
					false,
					7497957726178886,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					3034557725192197,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4073972668075459,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					6096744232781668,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					68,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					1922779506541762,
					false
					,[
					[
						4,
						69
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5115340584743413,
				[
				[
					69,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					2982619892266575,
					false
				]
				],
				[
				[
					69,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					2663182172185663,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "cloud"],
			false,
			null,
			998682396434781,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				998682396434781,
				false
				,[
				[
					1,
					[
						2,
						"cloud"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8184386600014077,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					2741021985435993,
					false
				]
				],
				[
				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					5015462018977238,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1498321907667132,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					5835694399260023,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							700
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					3062328750694092,
					false
					,[
					[
						0,
						[
							0,
							-174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					8662557938684648,
					false
					,[
					[
						0,
						[
							0,
							1824
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3124044857117728,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					999151529649154,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							1824
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					5895736295619095,
					false
					,[
					[
						0,
						[
							0,
							174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					1104474580821572,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4454820802032353,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					2906914821736179,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					6121798266749692,
					false
					,[
					[
						4,
						61
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9087026652662909,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					6580308171680279,
					false
				]
				],
				[
				[
					61,
					cr.behaviors.custom.prototype.acts.Accelerate,
					"CustomMovement",
					4023552442342493,
					false
					,[
					[
						3,
						2
					]
,					[
						0,
						[
							0,
							10000
						]
					]
					]
				]
,				[
					61,
					cr.plugins_.Sprite.prototype.acts.MoveToTop,
					null,
					8885682754324592,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1178776092327148,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					3750835858176075,
					false
				]
				],
				[
				[
					61,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					9208845977736461,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Win2"],
			false,
			null,
			3740791413422699,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3740791413422699,
				false
				,[
				[
					1,
					[
						2,
						"Win2"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8794349161936297,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					5356673287047002,
					false
					,[
					[
						4,
						35
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7442159553042637,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					6078817368520864,
					false
					,[
					[
						4,
						41
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						0,
						[
							0,
							448
						]
					]
,					[
						0,
						[
							0,
							-360
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8139377261577016,
				[
				[
					41,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					3070591389029929,
					false
				]
				],
				[
				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2712858539961328,
					false
					,[
					[
						4,
						42
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					9825987791591479,
					false
					,[
					[
						4,
						43
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					7225702950689165,
					false
					,[
					[
						4,
						44
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					3118076463343892,
					false
					,[
					[
						4,
						45
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
,				[
					42,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					6995946150830311,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					43,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4140996666384372,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					44,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4204056078052132,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					45,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					7109155165807662,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9485888729240491,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3923396647855167,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					45,
					cr.plugins_.Spritefont2.prototype.acts.SetText,
					null,
					8678014756125656,
					false
					,[
					[
						7,
						[
							23,
							"currentLevel"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3521043977470791,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					1560965842542471,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					9358321295500408,
					false
					,[
					[
						4,
						44
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					454773479260659,
					false
					,[
					[
						6,
						"Layout 3"
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1207868889557862,
			[
			[
				19,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				8543795367851626,
				false
			]
,			[
				19,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				3857916458355791,
				false
				,[
				[
					4,
					44
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				2356589831022956,
				false
				,[
				[
					6,
					"Layout 3"
				]
				]
			]
,			[
				54,
				cr.plugins_.Audio.prototype.acts.StopAll,
				null,
				1733716433877726,
				false
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5137650893281433,
				false
				,[
				[
					11,
					"musicIsPlaying"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			4761856271392874,
			[
			[
				19,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				6368478704661384,
				false
			]
,			[
				19,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				8334279218570954,
				false
				,[
				[
					4,
					73
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				7180203950259917,
				false
				,[
				[
					6,
					"Layout 3"
				]
				]
			]
,			[
				54,
				cr.plugins_.Audio.prototype.acts.StopAll,
				null,
				7252148716381784,
				false
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5221768373973141,
				false
				,[
				[
					11,
					"musicIsPlaying"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"Event sheet 3",
		[
		[
			0,
			[true, "startup3"],
			false,
			null,
			3492198023493976,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3492198023493976,
				false
				,[
				[
					1,
					[
						2,
						"startup3"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7917089818569855,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8411279471511331,
					false
				]
				],
				[
				[
					23,
					cr.plugins_.MagiCam.prototype.acts.CreateLocalCamera,
					null,
					2002062436133846,
					false
					,[
					[
						1,
						[
							2,
							"main"
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.FollowObject,
					null,
					1817899611668138,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						4,
						17
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.SetFollowLag,
					null,
					68488229259389,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						0,
						[
							0,
							80
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.EnableFollowing,
					null,
					1704487955455525,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7117959163755298,
					false
				]
,				[
					25,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5312454628259459,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					31,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6214133184110367,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					33,
					cr.behaviors.Turret.prototype.acts.AddTarget,
					"Turret",
					7457535066947465,
					false
					,[
					[
						4,
						17
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9333427440274822,
					false
					,[
					[
						0,
						[
							0,
							32
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3542860991119762,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					922161945544066,
					false
					,[
					[
						11,
						"currentLevel"
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8355322575537389,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				163664699972358,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6166961735590559,
					false
					,[
					[
						11,
						"musicOn"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7240281955124289,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					54,
					cr.plugins_.Audio.prototype.acts.Play,
					null,
					1483424431698838,
					false
					,[
					[
						2,
						["lines 3 mp3",true]
					]
,					[
						3,
						1
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5950154910048295,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lines2"],
			false,
			null,
			8710664104718251,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8710664104718251,
				false
				,[
				[
					1,
					[
						2,
						"lines2"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7818067392261083,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchStart,
					null,
					1,
					false,
					false,
					false,
					3665110245719786,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3159297426805137,
					[
					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						5154355638784558,
						false
						,[
						[
							4,
							18
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						1126385298202721,
						false
						,[
						[
							4,
							20
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2568910179999331,
						false
						,[
						[
							11,
							"chalk"
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								30
							]
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						8735524509872,
						false
						,[
						[
							4,
							36
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						504182488387798,
						false
						,[
						[
							11,
							"playing"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2028158657102402,
						false
						,[
						[
							11,
							"new_rocket"
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8588644100045768,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						4235875634504958,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9545359560493081,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsInTouch,
					null,
					0,
					false,
					false,
					false,
					503965779953376,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.cnds.PickTopBottom,
					null,
					0,
					false,
					false,
					true,
					2922272859349311,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					2911505914568754,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					9231077516968121,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5950972518287849,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							30
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					5784135135174638,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8801792441758223,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
					null,
					3862636452642899,
					false
					,[
					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.X,
							false,
							null
						]
					]
,					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8558869250574179,
					false
					,[
					[
						11,
						"dist"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.distance
							,[
[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
,[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.Y,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6934451493440142,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4966304596752358,
						false
						,[
						[
							11,
							"dist"
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								50
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.For,
						null,
						0,
						true,
						false,
						false,
						7548674397182243,
						false
						,[
						[
							1,
							[
								2,
								""
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							0,
							[
								7,
								[
									23,
									"dist"
								]
								,[
									0,
									20
								]
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3753200696561335,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.loopindex
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						6084630383462248,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2825299810579884,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					5813779856839544,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					7039387727047753,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							23,
							"new_rocket"
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.MoveForward,
					null,
					3550333618661213,
					false
					,[
					[
						0,
						[
							6,
							[
								0,
								20
							]
							,[
								23,
								"index"
							]
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5786271750088338,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4532834134057826,
				[
				[
					-1,
					cr.system_object.prototype.cnds.ForEach,
					null,
					0,
					true,
					false,
					false,
					8061250038746654,
					false
					,[
					[
						4,
						16
					]
					]
				]
,				[
					16,
					cr.behaviors.Bullet.prototype.cnds.CompareSpeed,
					"Bullet",
					0,
					false,
					false,
					false,
					6034923367945676,
					false
					,[
					[
						8,
						4
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					16,
					cr.plugins_.Sprite.prototype.acts.SubInstanceVar,
					null,
					8084942421275055,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							6,
							[
								22,
								16,
								"Bullet",
								cr.behaviors.Bullet.prototype.exps.Speed,
								false,
								null
							]
							,[
								19,
								cr.system_object.prototype.exps.dt
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6508274228385922,
					[
					[
						16,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3828382969227175,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						8842515181072747,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
					],
					[
					[
						16,
						cr.plugins_.Sprite.prototype.acts.MoveForward,
						null,
						7544986726524676,
						false
						,[
						[
							0,
							[
								21,
								16,
								false,
								null
								,0
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						2716053482262619,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							8821487267128476,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
							null,
							7895857775770069,
							false
							,[
							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
,							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.MoveForward,
							null,
							2262325521309365,
							false
							,[
							[
								0,
								[
									3,
									[
										21,
										16,
										false,
										null
										,0
									]
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5363474440279499,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.distance
									,[
[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2711514718115195,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							7325189569108291,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							13,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2151505826731249,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									0,
									-1
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Controls3"],
			false,
			null,
			3296255836696871,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3296255836696871,
				false
				,[
				[
					1,
					[
						2,
						"Controls3"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				2378954035050381,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					61193289275929,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5202213239864416,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					1767006857120208,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					1110479191445238,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7459421735494363,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5392197382886977,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2741476194463408,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					3477621804675917,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					6766706577324827,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6428467524045654,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5790650337849462,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					9956062548007539,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3824230094188158,
					false
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					4673905694447007,
					false
					,[
					[
						1,
						[
							2,
							"runRight"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9177106028405926,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4089829789943295,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					1904366834580957,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					69748144437356,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4646350159830945,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					1809720200266847,
					false
					,[
					[
						1,
						[
							2,
							"womanRun"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9375834452069542,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2185526367632061,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5601227515715948,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8104204382364344,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					8357799538890916,
					false
					,[
					[
						3,
						2
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6088334857620942,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					8518131210236913,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9246526435594335,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2957884236761213,
					false
					,[
					[
						1,
						[
							2,
							"fall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2579191745227263,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					2437133729362328,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3952846283637568,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					9257567615457649,
					false
					,[
					[
						1,
						[
							2,
							"womanFall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3106473856453417,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3586658461788346,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					true,
					false,
					9134735927244833,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					679186732446152,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8406142125581953,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						5586645649965757,
						false
						,[
						[
							1,
							[
								2,
								"Default"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6147779586503827,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7829603937823982,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						1898119956890654,
						false
						,[
						[
							1,
							[
								2,
								"womanStand"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "create chalk3"],
			false,
			null,
			5151772389843238,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5151772389843238,
				false
				,[
				[
					1,
					[
						2,
						"create chalk3"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9045784331479839,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					2189325118254892,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2255931126054609,
					false
					,[
					[
						4,
						22
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7115499412999326,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7056594899883767,
					false
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7276225993972347,
					false
				]
,				[
					22,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4029351635124102,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.random
							,[
[
								0,
								0
							]
,[
								0,
								4
							]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Die3"],
			false,
			null,
			6468677136836748,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6468677136836748,
				false
				,[
				[
					1,
					[
						2,
						"Die3"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				true,
				null,
				3285495246306755,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					3461674317821715,
					false
					,[
					[
						4,
						24
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					367436114245835,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1362370293595917,
					false
					,[
					[
						4,
						69
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8689541261363243,
					false
					,[
					[
						4,
						71
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					4691852054121803,
					false
					,[
					[
						4,
						82
					]
					]
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					3933534259344173,
					false
				]
,				[
					22,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7772205210954366,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					4479920478521885,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					5522544661653608,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					114244122048044,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1347675061012566,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7393597348444092,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					2634976384706476,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					2897267047188599,
					false
					,[
					[
						0,
						[
							0,
							3
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					3307370136593138,
					false
					,[
					[
						4,
						82
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							32
						]
					]
,					[
						0,
						[
							0,
							192
						]
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					7349596408059215,
					false
					,[
					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					7523527182551,
					[
					[
						31,
						cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
						null,
						0,
						false,
						true,
						false,
						577802723359357,
						false
						,[
						[
							4,
							29
						]
						]
					]
					],
					[
					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						7323234637663983,
						false
						,[
						[
							4,
							29
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						8338069084971529,
						false
						,[
						[
							4,
							30
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lifeBar3"],
			false,
			null,
			8829477166398622,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8829477166398622,
				false
				,[
				[
					1,
					[
						2,
						"lifeBar3"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5978517538884633,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					4787179600616214,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					4728124335565214,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2548287918897133,
					false
					,[
					[
						0,
						[
							23,
							"chalk"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "pickups3"],
			false,
			null,
			2757444050126318,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2757444050126318,
				false
				,[
				[
					1,
					[
						2,
						"pickups3"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9808912417514592,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					7521529665827309,
					false
					,[
					[
						4,
						30
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7595067754198922,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3296855585634899,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					30,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7283974290837169,
					false
				]
,				[
					30,
					cr.behaviors.lunarray_LiteTween.prototype.acts.Start,
					"LiteTween",
					6850841531925455,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					29,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					3617505865907839,
					false
				]
,				[
					26,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					9765010164463005,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "TURRET3"],
			false,
			null,
			7578092876421856,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7578092876421856,
				false
				,[
				[
					1,
					[
						2,
						"TURRET3"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8354385667806217,
				[
				[
					69,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1436242035215772,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					8269525481715218,
					false
				]
,				[
					69,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					1477184187363266,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5939741507460164,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					true,
					false,
					7497957726178886,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					3034557725192197,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4073972668075459,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					6096744232781668,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					68,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					1922779506541762,
					false
					,[
					[
						4,
						69
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5115340584743413,
				[
				[
					69,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					2982619892266575,
					false
				]
				],
				[
				[
					69,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					2663182172185663,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "cloud2"],
			false,
			null,
			3383995576084647,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3383995576084647,
				false
				,[
				[
					1,
					[
						2,
						"cloud2"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8184386600014077,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					2741021985435993,
					false
				]
				],
				[
				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					5015462018977238,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1498321907667132,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					5835694399260023,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							700
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					3062328750694092,
					false
					,[
					[
						0,
						[
							0,
							-174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					8662557938684648,
					false
					,[
					[
						0,
						[
							0,
							1824
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3124044857117728,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					999151529649154,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							1824
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					5895736295619095,
					false
					,[
					[
						0,
						[
							0,
							174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					1104474580821572,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4454820802032353,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					2906914821736179,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					6121798266749692,
					false
					,[
					[
						4,
						61
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9087026652662909,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					6580308171680279,
					false
				]
				],
				[
				[
					61,
					cr.behaviors.custom.prototype.acts.Accelerate,
					"CustomMovement",
					4023552442342493,
					false
					,[
					[
						3,
						2
					]
,					[
						0,
						[
							0,
							10000
						]
					]
					]
				]
,				[
					61,
					cr.plugins_.Sprite.prototype.acts.MoveToTop,
					null,
					8885682754324592,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1178776092327148,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					3750835858176075,
					false
				]
				],
				[
				[
					61,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					9208845977736461,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Win3"],
			false,
			null,
			1455129110962812,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1455129110962812,
				false
				,[
				[
					1,
					[
						2,
						"Win3"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8794349161936297,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					5356673287047002,
					false
					,[
					[
						4,
						35
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7442159553042637,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					6078817368520864,
					false
					,[
					[
						4,
						41
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						0,
						[
							0,
							448
						]
					]
,					[
						0,
						[
							0,
							-360
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8139377261577016,
				[
				[
					41,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					3070591389029929,
					false
				]
				],
				[
				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2712858539961328,
					false
					,[
					[
						4,
						42
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					9825987791591479,
					false
					,[
					[
						4,
						43
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					7225702950689165,
					false
					,[
					[
						4,
						44
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					3118076463343892,
					false
					,[
					[
						4,
						45
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
,				[
					42,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					6995946150830311,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					43,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4140996666384372,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					44,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4204056078052132,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					45,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					7109155165807662,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9485888729240491,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3923396647855167,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					45,
					cr.plugins_.Spritefont2.prototype.acts.SetText,
					null,
					8678014756125656,
					false
					,[
					[
						7,
						[
							23,
							"currentLevel"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6121405790295588,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					8539331332774952,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					8519537799455544,
					false
					,[
					[
						4,
						44
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					2583844509877015,
					false
					,[
					[
						6,
						"Layout 4"
					]
					]
				]
,				[
					54,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					8325499615903537,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1630104870240279,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9248656328679553,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					7642606864677364,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5628509859987543,
					false
					,[
					[
						4,
						73
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					5108580006702214,
					false
					,[
					[
						6,
						"Layout 4"
					]
					]
				]
,				[
					54,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					68555870486888,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9100862295607452,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "chopper"],
			false,
			null,
			887451996775075,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				887451996775075,
				false
				,[
				[
					1,
					[
						2,
						"chopper"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8336037655939867,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8633022215092543,
					false
				]
				],
				[
				[
					71,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					8013478699025331,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4140858033191422,
				[
				[
					71,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					7315324189194333,
					false
				]
				],
				[
				[
					71,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					9039031553495101,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "chopper2"],
			false,
			null,
			4469830317602554,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4469830317602554,
				false
				,[
				[
					1,
					[
						2,
						"chopper2"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8336037655939867,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8633022215092543,
					false
				]
				],
				[
				[
					72,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					8013478699025331,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4140858033191422,
				[
				[
					71,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					7315324189194333,
					false
				]
				],
				[
				[
					72,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					9039031553495101,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2948904351686054,
			[
			[
				19,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				9873252242027694,
				false
			]
,			[
				19,
				cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
				null,
				0,
				false,
				false,
				false,
				6960287473597369,
				false
				,[
				[
					4,
					73
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				4375748734299901,
				false
				,[
				[
					6,
					"Layout 4"
				]
				]
			]
,			[
				54,
				cr.plugins_.Audio.prototype.acts.StopAll,
				null,
				1747655347879648,
				false
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				8528385499399357,
				false
				,[
				[
					11,
					"musicIsPlaying"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "zombie2"],
			false,
			null,
			1687032756425174,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1687032756425174,
				false
				,[
				[
					1,
					[
						2,
						"zombie2"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				705969678675543,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2602010572236284,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.TriggerOnce,
					null,
					0,
					false,
					false,
					false,
					8027842431372429,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					7547346769625613,
					false
					,[
					[
						0,
						[
							0,
							3
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					1014659376421207,
					false
					,[
					[
						4,
						82
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							32
						]
					]
,					[
						0,
						[
							0,
							192
						]
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					4013271974414859,
					false
					,[
					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6545260232659247,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					6015936288851964,
					false
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2041077906017691,
					false
					,[
					[
						1,
						[
							2,
							"walk"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
					null,
					7876744968814734,
					false
					,[
					[
						10,
						0
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6326283575790136,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
					null,
					0,
					false,
					false,
					false,
					4583929342188521,
					false
					,[
					[
						10,
						0
					]
					]
				]
				],
				[
				[
					82,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					1948926292873427,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9452583926374819,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					4436488717802992,
					false
					,[
					[
						4,
						24
					]
					]
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					6391203513585768,
					false
					,[
					[
						1,
						[
							2,
							"die"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
					null,
					8304267455245521,
					false
					,[
					[
						10,
						0
					]
,					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9703918062543635,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					2836056649594179,
					false
					,[
					[
						1,
						[
							2,
							"die"
						]
					]
					]
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					2603912470112375,
					false
				]
				]
			]
			]
		]
		]
	]
,	[
		"Event sheet 4",
		[
		[
			0,
			[true, "startup4"],
			false,
			null,
			446704237608865,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				446704237608865,
				false
				,[
				[
					1,
					[
						2,
						"startup4"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7917089818569855,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8411279471511331,
					false
				]
				],
				[
				[
					23,
					cr.plugins_.MagiCam.prototype.acts.CreateLocalCamera,
					null,
					2002062436133846,
					false
					,[
					[
						1,
						[
							2,
							"main"
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.FollowObject,
					null,
					1817899611668138,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						4,
						17
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.SetFollowLag,
					null,
					68488229259389,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						0,
						[
							0,
							80
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.EnableFollowing,
					null,
					1704487955455525,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7117959163755298,
					false
				]
,				[
					25,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5312454628259459,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					31,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6214133184110367,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					33,
					cr.behaviors.Turret.prototype.acts.AddTarget,
					"Turret",
					7457535066947465,
					false
					,[
					[
						4,
						17
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9333427440274822,
					false
					,[
					[
						0,
						[
							0,
							32
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3542860991119762,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					922161945544066,
					false
					,[
					[
						11,
						"currentLevel"
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8355322575537389,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8479520784630816,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2150707007662891,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7163274706449444,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6676136458157305,
					false
					,[
					[
						11,
						"musicOn"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6757566888003468,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					54,
					cr.plugins_.Audio.prototype.acts.Play,
					null,
					477238311138233,
					false
					,[
					[
						2,
						["lines 4",true]
					]
,					[
						3,
						1
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4552028930198268,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lines3"],
			false,
			null,
			9995889528406871,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9995889528406871,
				false
				,[
				[
					1,
					[
						2,
						"lines3"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7818067392261083,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchStart,
					null,
					1,
					false,
					false,
					false,
					3665110245719786,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3159297426805137,
					[
					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						5154355638784558,
						false
						,[
						[
							4,
							18
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						1126385298202721,
						false
						,[
						[
							4,
							20
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2568910179999331,
						false
						,[
						[
							11,
							"chalk"
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								30
							]
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						8735524509872,
						false
						,[
						[
							4,
							36
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						504182488387798,
						false
						,[
						[
							11,
							"playing"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2028158657102402,
						false
						,[
						[
							11,
							"new_rocket"
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8588644100045768,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						4235875634504958,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9545359560493081,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsInTouch,
					null,
					0,
					false,
					false,
					false,
					503965779953376,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.cnds.PickTopBottom,
					null,
					0,
					false,
					false,
					true,
					2922272859349311,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					2911505914568754,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					9231077516968121,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5950972518287849,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							30
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					5784135135174638,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8801792441758223,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
					null,
					3862636452642899,
					false
					,[
					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.X,
							false,
							null
						]
					]
,					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8558869250574179,
					false
					,[
					[
						11,
						"dist"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.distance
							,[
[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
,[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.Y,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6934451493440142,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4966304596752358,
						false
						,[
						[
							11,
							"dist"
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								50
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.For,
						null,
						0,
						true,
						false,
						false,
						7548674397182243,
						false
						,[
						[
							1,
							[
								2,
								""
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							0,
							[
								7,
								[
									23,
									"dist"
								]
								,[
									0,
									20
								]
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3753200696561335,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.loopindex
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						6084630383462248,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2825299810579884,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					5813779856839544,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					7039387727047753,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							23,
							"new_rocket"
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.MoveForward,
					null,
					3550333618661213,
					false
					,[
					[
						0,
						[
							6,
							[
								0,
								20
							]
							,[
								23,
								"index"
							]
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5786271750088338,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4532834134057826,
				[
				[
					-1,
					cr.system_object.prototype.cnds.ForEach,
					null,
					0,
					true,
					false,
					false,
					8061250038746654,
					false
					,[
					[
						4,
						16
					]
					]
				]
,				[
					16,
					cr.behaviors.Bullet.prototype.cnds.CompareSpeed,
					"Bullet",
					0,
					false,
					false,
					false,
					6034923367945676,
					false
					,[
					[
						8,
						4
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					16,
					cr.plugins_.Sprite.prototype.acts.SubInstanceVar,
					null,
					8084942421275055,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							6,
							[
								22,
								16,
								"Bullet",
								cr.behaviors.Bullet.prototype.exps.Speed,
								false,
								null
							]
							,[
								19,
								cr.system_object.prototype.exps.dt
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6508274228385922,
					[
					[
						16,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3828382969227175,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						8842515181072747,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
					],
					[
					[
						16,
						cr.plugins_.Sprite.prototype.acts.MoveForward,
						null,
						7544986726524676,
						false
						,[
						[
							0,
							[
								21,
								16,
								false,
								null
								,0
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						2716053482262619,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							8821487267128476,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
							null,
							7895857775770069,
							false
							,[
							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
,							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.MoveForward,
							null,
							2262325521309365,
							false
							,[
							[
								0,
								[
									3,
									[
										21,
										16,
										false,
										null
										,0
									]
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5363474440279499,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.distance
									,[
[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2711514718115195,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							7325189569108291,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							13,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2151505826731249,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									0,
									-1
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Controls4"],
			false,
			null,
			3820619427473403,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3820619427473403,
				false
				,[
				[
					1,
					[
						2,
						"Controls4"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				2378954035050381,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					61193289275929,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5202213239864416,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					1767006857120208,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					1110479191445238,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7459421735494363,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5392197382886977,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2741476194463408,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					3477621804675917,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					6766706577324827,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6428467524045654,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5790650337849462,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					9956062548007539,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3824230094188158,
					false
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					4673905694447007,
					false
					,[
					[
						1,
						[
							2,
							"runRight"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9177106028405926,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4089829789943295,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					1904366834580957,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					69748144437356,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4646350159830945,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					1809720200266847,
					false
					,[
					[
						1,
						[
							2,
							"womanRun"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9375834452069542,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2185526367632061,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5601227515715948,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8104204382364344,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					8357799538890916,
					false
					,[
					[
						3,
						2
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6088334857620942,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					8518131210236913,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9246526435594335,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2957884236761213,
					false
					,[
					[
						1,
						[
							2,
							"fall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2579191745227263,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					2437133729362328,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3952846283637568,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					9257567615457649,
					false
					,[
					[
						1,
						[
							2,
							"womanFall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3106473856453417,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3586658461788346,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					true,
					false,
					9134735927244833,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					679186732446152,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8406142125581953,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						5586645649965757,
						false
						,[
						[
							1,
							[
								2,
								"Default"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6147779586503827,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7829603937823982,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						1898119956890654,
						false
						,[
						[
							1,
							[
								2,
								"womanStand"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "create chalk4"],
			false,
			null,
			165789323603131,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				165789323603131,
				false
				,[
				[
					1,
					[
						2,
						"create chalk4"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9045784331479839,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					2189325118254892,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2255931126054609,
					false
					,[
					[
						4,
						22
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7115499412999326,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7056594899883767,
					false
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7276225993972347,
					false
				]
,				[
					22,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4029351635124102,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.random
							,[
[
								0,
								0
							]
,[
								0,
								4
							]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Die4"],
			false,
			null,
			8902189130051577,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8902189130051577,
				false
				,[
				[
					1,
					[
						2,
						"Die4"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				true,
				null,
				3285495246306755,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					3461674317821715,
					false
					,[
					[
						4,
						24
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					367436114245835,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1362370293595917,
					false
					,[
					[
						4,
						69
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8689541261363243,
					false
					,[
					[
						4,
						71
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					911397627555066,
					false
					,[
					[
						4,
						81
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					6730556747939325,
					false
					,[
					[
						4,
						79
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1430151779564472,
					false
					,[
					[
						4,
						82
					]
					]
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					7072316763077264,
					false
				]
,				[
					22,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7772205210954366,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					4479920478521885,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					5522544661653608,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					114244122048044,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1347675061012566,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7393597348444092,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					2634976384706476,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3692671461707302,
					false
					,[
					[
						0,
						[
							0,
							3
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					8634211139490942,
					false
					,[
					[
						4,
						82
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							32
						]
					]
,					[
						0,
						[
							0,
							224
						]
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					2273533734381952,
					false
					,[
					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					7523527182551,
					[
					[
						31,
						cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
						null,
						0,
						false,
						true,
						false,
						577802723359357,
						false
						,[
						[
							4,
							29
						]
						]
					]
					],
					[
					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						7323234637663983,
						false
						,[
						[
							4,
							29
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						8338069084971529,
						false
						,[
						[
							4,
							30
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lifeBar4"],
			false,
			null,
			5850358847562766,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5850358847562766,
				false
				,[
				[
					1,
					[
						2,
						"lifeBar4"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5978517538884633,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					4787179600616214,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					4728124335565214,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2548287918897133,
					false
					,[
					[
						0,
						[
							23,
							"chalk"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "pickups4"],
			false,
			null,
			3386237342392496,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3386237342392496,
				false
				,[
				[
					1,
					[
						2,
						"pickups4"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9808912417514592,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					7521529665827309,
					false
					,[
					[
						4,
						30
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7595067754198922,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3296855585634899,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					30,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7283974290837169,
					false
				]
,				[
					30,
					cr.behaviors.lunarray_LiteTween.prototype.acts.Start,
					"LiteTween",
					6850841531925455,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					29,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					3617505865907839,
					false
				]
,				[
					26,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					9765010164463005,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "TURRET4"],
			false,
			null,
			2637055200676986,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2637055200676986,
				false
				,[
				[
					1,
					[
						2,
						"TURRET4"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8354385667806217,
				[
				[
					69,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1436242035215772,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					8269525481715218,
					false
				]
,				[
					69,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					1477184187363266,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5939741507460164,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					true,
					false,
					7497957726178886,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					3034557725192197,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4073972668075459,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					6096744232781668,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					68,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					1922779506541762,
					false
					,[
					[
						4,
						69
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5115340584743413,
				[
				[
					69,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					2982619892266575,
					false
				]
				],
				[
				[
					69,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					2663182172185663,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "cloud3"],
			false,
			null,
			975287708255745,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				975287708255745,
				false
				,[
				[
					1,
					[
						2,
						"cloud3"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8184386600014077,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					2741021985435993,
					false
				]
				],
				[
				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					5015462018977238,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1498321907667132,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					5835694399260023,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							700
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					3062328750694092,
					false
					,[
					[
						0,
						[
							0,
							-174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					8662557938684648,
					false
					,[
					[
						0,
						[
							0,
							1824
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3124044857117728,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					999151529649154,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							1824
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					5895736295619095,
					false
					,[
					[
						0,
						[
							0,
							174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					1104474580821572,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4454820802032353,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					2906914821736179,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					6121798266749692,
					false
					,[
					[
						4,
						61
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9087026652662909,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					6580308171680279,
					false
				]
				],
				[
				[
					61,
					cr.behaviors.custom.prototype.acts.Accelerate,
					"CustomMovement",
					4023552442342493,
					false
					,[
					[
						3,
						2
					]
,					[
						0,
						[
							0,
							10000
						]
					]
					]
				]
,				[
					61,
					cr.plugins_.Sprite.prototype.acts.MoveToTop,
					null,
					8885682754324592,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1178776092327148,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					3750835858176075,
					false
				]
				],
				[
				[
					61,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					9208845977736461,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Win4"],
			false,
			null,
			1965612111410831,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1965612111410831,
				false
				,[
				[
					1,
					[
						2,
						"Win4"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8794349161936297,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					5356673287047002,
					false
					,[
					[
						4,
						35
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7442159553042637,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					6078817368520864,
					false
					,[
					[
						4,
						41
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						0,
						[
							0,
							448
						]
					]
,					[
						0,
						[
							0,
							-360
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8139377261577016,
				[
				[
					41,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					3070591389029929,
					false
				]
				],
				[
				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2712858539961328,
					false
					,[
					[
						4,
						42
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					9825987791591479,
					false
					,[
					[
						4,
						43
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					7225702950689165,
					false
					,[
					[
						4,
						44
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					3118076463343892,
					false
					,[
					[
						4,
						45
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
,				[
					42,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					6995946150830311,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					43,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4140996666384372,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					44,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4204056078052132,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					45,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					7109155165807662,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9485888729240491,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3923396647855167,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					45,
					cr.plugins_.Spritefont2.prototype.acts.SetText,
					null,
					8678014756125656,
					false
					,[
					[
						7,
						[
							23,
							"currentLevel"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6249740847767389,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					1298778166520332,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					2484371277732872,
					false
					,[
					[
						4,
						44
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					5368647962783231,
					false
					,[
					[
						6,
						"Layout 5"
					]
					]
				]
,				[
					54,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					7138098832479749,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7490367524074012,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2702461970715283,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					1208556471063903,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					1967742267755211,
					false
					,[
					[
						4,
						73
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					7763116962969618,
					false
					,[
					[
						6,
						"Layout 5"
					]
					]
				]
,				[
					54,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					2772823839476677,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1528937921961734,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "chopper3"],
			false,
			null,
			3653942791161819,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3653942791161819,
				false
				,[
				[
					1,
					[
						2,
						"chopper3"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8336037655939867,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8633022215092543,
					false
				]
				],
				[
				[
					71,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					8013478699025331,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4140858033191422,
				[
				[
					71,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					7315324189194333,
					false
				]
				],
				[
				[
					71,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					9039031553495101,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "chopper3"],
			false,
			null,
			3688050431999244,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3688050431999244,
				false
				,[
				[
					1,
					[
						2,
						"chopper3"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8336037655939867,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8633022215092543,
					false
				]
				],
				[
				[
					72,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					8013478699025331,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4140858033191422,
				[
				[
					71,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					7315324189194333,
					false
				]
				],
				[
				[
					72,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					9039031553495101,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "bullet lvl4"],
			false,
			null,
			7140833935959838,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7140833935959838,
				false
				,[
				[
					1,
					[
						2,
						"bullet lvl4"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				3766617186900984,
				[
				[
					81,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					7611534307178581,
					false
					,[
					[
						4,
						3
					]
					]
				]
				],
				[
				[
					81,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					6709643353961153,
					false
					,[
					[
						0,
						[
							0,
							-61
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "zombie3"],
			false,
			null,
			8988215883821659,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8988215883821659,
				false
				,[
				[
					1,
					[
						2,
						"zombie3"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				705969678675543,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2602010572236284,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.TriggerOnce,
					null,
					0,
					false,
					false,
					false,
					8027842431372429,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					7547346769625613,
					false
					,[
					[
						0,
						[
							0,
							3
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					1014659376421207,
					false
					,[
					[
						4,
						82
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							32
						]
					]
,					[
						0,
						[
							0,
							224
						]
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					4013271974414859,
					false
					,[
					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6545260232659247,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					6015936288851964,
					false
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2041077906017691,
					false
					,[
					[
						1,
						[
							2,
							"walk"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
					null,
					7876744968814734,
					false
					,[
					[
						10,
						0
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6326283575790136,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
					null,
					0,
					false,
					false,
					false,
					4583929342188521,
					false
					,[
					[
						10,
						0
					]
					]
				]
				],
				[
				[
					82,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					1948926292873427,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9452583926374819,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					4436488717802992,
					false
					,[
					[
						4,
						24
					]
					]
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					6391203513585768,
					false
					,[
					[
						1,
						[
							2,
							"die"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
					null,
					8304267455245521,
					false
					,[
					[
						10,
						0
					]
,					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9703918062543635,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					2836056649594179,
					false
					,[
					[
						1,
						[
							2,
							"die"
						]
					]
					]
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					2603912470112375,
					false
				]
				]
			]
			]
		]
		]
	]
,	[
		"Event sheet 5",
		[
		[
			0,
			[true, "startup5"],
			false,
			null,
			7129017905020227,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7129017905020227,
				false
				,[
				[
					1,
					[
						2,
						"startup5"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7917089818569855,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8411279471511331,
					false
				]
				],
				[
				[
					23,
					cr.plugins_.MagiCam.prototype.acts.CreateLocalCamera,
					null,
					2002062436133846,
					false
					,[
					[
						1,
						[
							2,
							"main"
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.FollowObject,
					null,
					1817899611668138,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						4,
						17
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.SetFollowLag,
					null,
					68488229259389,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						0,
						[
							0,
							80
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.EnableFollowing,
					null,
					1704487955455525,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7117959163755298,
					false
				]
,				[
					25,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5312454628259459,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					31,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6214133184110367,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					33,
					cr.behaviors.Turret.prototype.acts.AddTarget,
					"Turret",
					7457535066947465,
					false
					,[
					[
						4,
						17
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9333427440274822,
					false
					,[
					[
						0,
						[
							0,
							32
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3542860991119762,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					922161945544066,
					false
					,[
					[
						11,
						"currentLevel"
					]
,					[
						7,
						[
							0,
							5
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8355322575537389,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9169554182862653,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4090046697567804,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				890408535200636,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7758983199066123,
					false
					,[
					[
						11,
						"musicOn"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					1773808195204801,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					54,
					cr.plugins_.Audio.prototype.acts.Play,
					null,
					2667196239357912,
					false
					,[
					[
						2,
						["lines 5",true]
					]
,					[
						3,
						1
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2776709455514448,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lines4"],
			false,
			null,
			4045173603647664,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4045173603647664,
				false
				,[
				[
					1,
					[
						2,
						"lines4"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7818067392261083,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchStart,
					null,
					1,
					false,
					false,
					false,
					3665110245719786,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3159297426805137,
					[
					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						5154355638784558,
						false
						,[
						[
							4,
							18
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						1126385298202721,
						false
						,[
						[
							4,
							20
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2568910179999331,
						false
						,[
						[
							11,
							"chalk"
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								30
							]
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						8735524509872,
						false
						,[
						[
							4,
							36
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						504182488387798,
						false
						,[
						[
							11,
							"playing"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						6583269688876179,
						false
						,[
						[
							4,
							75
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2028158657102402,
						false
						,[
						[
							11,
							"new_rocket"
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8588644100045768,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						4235875634504958,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9545359560493081,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsInTouch,
					null,
					0,
					false,
					false,
					false,
					503965779953376,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.cnds.PickTopBottom,
					null,
					0,
					false,
					false,
					true,
					2922272859349311,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					2911505914568754,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					9231077516968121,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5950972518287849,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							30
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					5784135135174638,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8801792441758223,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					4845555002434618,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
					null,
					3862636452642899,
					false
					,[
					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.X,
							false,
							null
						]
					]
,					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8558869250574179,
					false
					,[
					[
						11,
						"dist"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.distance
							,[
[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
,[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.Y,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6934451493440142,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4966304596752358,
						false
						,[
						[
							11,
							"dist"
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								50
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.For,
						null,
						0,
						true,
						false,
						false,
						7548674397182243,
						false
						,[
						[
							1,
							[
								2,
								""
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							0,
							[
								7,
								[
									23,
									"dist"
								]
								,[
									0,
									20
								]
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3753200696561335,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.loopindex
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						6084630383462248,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2825299810579884,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					5813779856839544,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					7039387727047753,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							23,
							"new_rocket"
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.MoveForward,
					null,
					3550333618661213,
					false
					,[
					[
						0,
						[
							6,
							[
								0,
								20
							]
							,[
								23,
								"index"
							]
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5786271750088338,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4532834134057826,
				[
				[
					-1,
					cr.system_object.prototype.cnds.ForEach,
					null,
					0,
					true,
					false,
					false,
					8061250038746654,
					false
					,[
					[
						4,
						16
					]
					]
				]
,				[
					16,
					cr.behaviors.Bullet.prototype.cnds.CompareSpeed,
					"Bullet",
					0,
					false,
					false,
					false,
					6034923367945676,
					false
					,[
					[
						8,
						4
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					16,
					cr.plugins_.Sprite.prototype.acts.SubInstanceVar,
					null,
					8084942421275055,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							6,
							[
								22,
								16,
								"Bullet",
								cr.behaviors.Bullet.prototype.exps.Speed,
								false,
								null
							]
							,[
								19,
								cr.system_object.prototype.exps.dt
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6508274228385922,
					[
					[
						16,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3828382969227175,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						8842515181072747,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
					],
					[
					[
						16,
						cr.plugins_.Sprite.prototype.acts.MoveForward,
						null,
						7544986726524676,
						false
						,[
						[
							0,
							[
								21,
								16,
								false,
								null
								,0
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						2716053482262619,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							8821487267128476,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
							null,
							7895857775770069,
							false
							,[
							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
,							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.MoveForward,
							null,
							2262325521309365,
							false
							,[
							[
								0,
								[
									3,
									[
										21,
										16,
										false,
										null
										,0
									]
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5363474440279499,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.distance
									,[
[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2711514718115195,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							7325189569108291,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							13,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2151505826731249,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									0,
									-1
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Controls5"],
			false,
			null,
			2969393122011959,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2969393122011959,
				false
				,[
				[
					1,
					[
						2,
						"Controls5"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				2378954035050381,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					61193289275929,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5202213239864416,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					5748030844497091,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					1767006857120208,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					1110479191445238,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7459421735494363,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5392197382886977,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2741476194463408,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					1605654512168415,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					3477621804675917,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					6766706577324827,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6428467524045654,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5790650337849462,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					9956062548007539,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3824230094188158,
					false
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					4673905694447007,
					false
					,[
					[
						1,
						[
							2,
							"runRight"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9177106028405926,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4089829789943295,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					1904366834580957,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					69748144437356,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4646350159830945,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					1809720200266847,
					false
					,[
					[
						1,
						[
							2,
							"womanRun"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9375834452069542,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2185526367632061,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5601227515715948,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8104204382364344,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					8357799538890916,
					false
					,[
					[
						3,
						2
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6088334857620942,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					8518131210236913,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9246526435594335,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2957884236761213,
					false
					,[
					[
						1,
						[
							2,
							"fall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2579191745227263,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					2437133729362328,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3952846283637568,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					9257567615457649,
					false
					,[
					[
						1,
						[
							2,
							"womanFall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3106473856453417,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3586658461788346,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					true,
					false,
					9134735927244833,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					679186732446152,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8406142125581953,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						5586645649965757,
						false
						,[
						[
							1,
							[
								2,
								"Default"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6147779586503827,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7829603937823982,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						1898119956890654,
						false
						,[
						[
							1,
							[
								2,
								"womanStand"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8615171086873808,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					9368425241937755,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2742624834793975,
					false
					,[
					[
						1,
						[
							2,
							"manLie"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "create chalk5"],
			false,
			null,
			2002164142747809,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2002164142747809,
				false
				,[
				[
					1,
					[
						2,
						"create chalk5"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9045784331479839,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					2189325118254892,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2255931126054609,
					false
					,[
					[
						4,
						22
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7115499412999326,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7056594899883767,
					false
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7276225993972347,
					false
				]
,				[
					22,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4029351635124102,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.random
							,[
[
								0,
								0
							]
,[
								0,
								4
							]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Die5"],
			false,
			null,
			9065584441188859,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9065584441188859,
				false
				,[
				[
					1,
					[
						2,
						"Die5"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				true,
				null,
				3285495246306755,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					3461674317821715,
					false
					,[
					[
						4,
						24
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					367436114245835,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1362370293595917,
					false
					,[
					[
						4,
						69
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8689541261363243,
					false
					,[
					[
						4,
						71
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8620721519909385,
					false
					,[
					[
						4,
						77
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8236906032682952,
					false
					,[
					[
						4,
						78
					]
					]
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					5217073028218994,
					false
				]
,				[
					22,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7772205210954366,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					4479920478521885,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					5522544661653608,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					114244122048044,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1347675061012566,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7393597348444092,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					2634976384706476,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					1648559765254184,
					false
					,[
					[
						0,
						[
							0,
							3
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					4168793206177347,
					false
					,[
					[
						4,
						82
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							96
						]
					]
,					[
						0,
						[
							0,
							160
						]
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					4801802833386101,
					false
					,[
					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					7523527182551,
					[
					[
						31,
						cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
						null,
						0,
						false,
						true,
						false,
						577802723359357,
						false
						,[
						[
							4,
							29
						]
						]
					]
					],
					[
					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						7323234637663983,
						false
						,[
						[
							4,
							29
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						8338069084971529,
						false
						,[
						[
							4,
							30
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lifeBar5"],
			false,
			null,
			2245890861647343,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2245890861647343,
				false
				,[
				[
					1,
					[
						2,
						"lifeBar5"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5978517538884633,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					4787179600616214,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					4728124335565214,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2548287918897133,
					false
					,[
					[
						0,
						[
							23,
							"chalk"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "pickups5"],
			false,
			null,
			1678443970812579,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1678443970812579,
				false
				,[
				[
					1,
					[
						2,
						"pickups5"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9808912417514592,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					7521529665827309,
					false
					,[
					[
						4,
						30
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7595067754198922,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3296855585634899,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					30,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7283974290837169,
					false
				]
,				[
					30,
					cr.behaviors.lunarray_LiteTween.prototype.acts.Start,
					"LiteTween",
					6850841531925455,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					29,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					3617505865907839,
					false
				]
,				[
					26,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					9765010164463005,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "TURRET5"],
			false,
			null,
			4932599917338495,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4932599917338495,
				false
				,[
				[
					1,
					[
						2,
						"TURRET5"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8354385667806217,
				[
				[
					69,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1436242035215772,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					8269525481715218,
					false
				]
,				[
					69,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					1477184187363266,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5939741507460164,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					true,
					false,
					7497957726178886,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					3034557725192197,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4073972668075459,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					6096744232781668,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					68,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					1922779506541762,
					false
					,[
					[
						4,
						69
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5115340584743413,
				[
				[
					69,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					2982619892266575,
					false
				]
				],
				[
				[
					69,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					2663182172185663,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "cloud4"],
			false,
			null,
			8157538909379831,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8157538909379831,
				false
				,[
				[
					1,
					[
						2,
						"cloud4"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8184386600014077,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					2741021985435993,
					false
				]
				],
				[
				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					5015462018977238,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1498321907667132,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					5835694399260023,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							700
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					3062328750694092,
					false
					,[
					[
						0,
						[
							0,
							-174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					8662557938684648,
					false
					,[
					[
						0,
						[
							0,
							1824
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3124044857117728,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					999151529649154,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							1824
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					5895736295619095,
					false
					,[
					[
						0,
						[
							0,
							174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					1104474580821572,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4454820802032353,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					2906914821736179,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					6121798266749692,
					false
					,[
					[
						4,
						61
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9087026652662909,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					6580308171680279,
					false
				]
				],
				[
				[
					61,
					cr.behaviors.custom.prototype.acts.Accelerate,
					"CustomMovement",
					4023552442342493,
					false
					,[
					[
						3,
						2
					]
,					[
						0,
						[
							0,
							10000
						]
					]
					]
				]
,				[
					61,
					cr.plugins_.Sprite.prototype.acts.MoveToTop,
					null,
					8885682754324592,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1178776092327148,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					3750835858176075,
					false
				]
				],
				[
				[
					61,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					9208845977736461,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Win5"],
			false,
			null,
			6557530392942131,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6557530392942131,
				false
				,[
				[
					1,
					[
						2,
						"Win5"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8794349161936297,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					5356673287047002,
					false
					,[
					[
						4,
						35
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7442159553042637,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					6078817368520864,
					false
					,[
					[
						4,
						41
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						0,
						[
							0,
							448
						]
					]
,					[
						0,
						[
							0,
							-360
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8139377261577016,
				[
				[
					41,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					3070591389029929,
					false
				]
				],
				[
				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2712858539961328,
					false
					,[
					[
						4,
						42
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					9825987791591479,
					false
					,[
					[
						4,
						43
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					7225702950689165,
					false
					,[
					[
						4,
						44
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					3118076463343892,
					false
					,[
					[
						4,
						45
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
,				[
					42,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					6995946150830311,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					43,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4140996666384372,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					44,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4204056078052132,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					45,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					7109155165807662,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9485888729240491,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3923396647855167,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					45,
					cr.plugins_.Spritefont2.prototype.acts.SetText,
					null,
					8678014756125656,
					false
					,[
					[
						7,
						[
							23,
							"currentLevel"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4914397138949339,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					6139789134388268,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					3233074720622641,
					false
					,[
					[
						4,
						44
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					6892474590982131,
					false
					,[
					[
						6,
						"Layout 6"
					]
					]
				]
,				[
					54,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					339098780049272,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8003934485311526,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4424742996323474,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					5298076680833959,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					4274888431033289,
					false
					,[
					[
						4,
						73
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					1283830102039357,
					false
					,[
					[
						6,
						"Layout 6"
					]
					]
				]
,				[
					54,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					5118716018857858,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					36997848472249,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "chopper4"],
			false,
			null,
			5701201893210971,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5701201893210971,
				false
				,[
				[
					1,
					[
						2,
						"chopper4"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8336037655939867,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8633022215092543,
					false
				]
				],
				[
				[
					71,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					8013478699025331,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4140858033191422,
				[
				[
					71,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					7315324189194333,
					false
				]
				],
				[
				[
					71,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					9039031553495101,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "chopper4"],
			false,
			null,
			4681958289011786,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4681958289011786,
				false
				,[
				[
					1,
					[
						2,
						"chopper4"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8336037655939867,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8633022215092543,
					false
				]
				],
				[
				[
					72,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					8013478699025331,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4140858033191422,
				[
				[
					71,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					7315324189194333,
					false
				]
				],
				[
				[
					72,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					9039031553495101,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "bat"],
			false,
			null,
			8305420463470323,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8305420463470323,
				false
				,[
				[
					1,
					[
						2,
						"bat"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9382906170207056,
				[
				[
					78,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7223938271535615,
					false
				]
				],
				[
				[
					78,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9141513246250318,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8958253969348856,
				[
				[
					78,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					8763511910223358,
					false
				]
				],
				[
				[
					78,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					3567239430389121,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "zombie4"],
			false,
			null,
			3944701122307146,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3944701122307146,
				false
				,[
				[
					1,
					[
						2,
						"zombie4"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				705969678675543,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2602010572236284,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.TriggerOnce,
					null,
					0,
					false,
					false,
					false,
					8027842431372429,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					7547346769625613,
					false
					,[
					[
						0,
						[
							0,
							3
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					1014659376421207,
					false
					,[
					[
						4,
						82
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							96
						]
					]
,					[
						0,
						[
							0,
							160
						]
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					4013271974414859,
					false
					,[
					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6545260232659247,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					6015936288851964,
					false
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2041077906017691,
					false
					,[
					[
						1,
						[
							2,
							"walk"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
					null,
					7876744968814734,
					false
					,[
					[
						10,
						0
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6326283575790136,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
					null,
					0,
					false,
					false,
					false,
					4583929342188521,
					false
					,[
					[
						10,
						0
					]
					]
				]
				],
				[
				[
					82,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					1948926292873427,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9452583926374819,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					4436488717802992,
					false
					,[
					[
						4,
						24
					]
					]
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					6391203513585768,
					false
					,[
					[
						1,
						[
							2,
							"die"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
					null,
					8304267455245521,
					false
					,[
					[
						10,
						0
					]
,					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9703918062543635,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					2836056649594179,
					false
					,[
					[
						1,
						[
							2,
							"die"
						]
					]
					]
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					2603912470112375,
					false
				]
				]
			]
			]
		]
		]
	]
,	[
		"Event sheet 6",
		[
		[
			0,
			[true, "startup6"],
			false,
			null,
			4297067439459315,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4297067439459315,
				false
				,[
				[
					1,
					[
						2,
						"startup6"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7917089818569855,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8411279471511331,
					false
				]
				],
				[
				[
					23,
					cr.plugins_.MagiCam.prototype.acts.CreateLocalCamera,
					null,
					2002062436133846,
					false
					,[
					[
						1,
						[
							2,
							"main"
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.FollowObject,
					null,
					1817899611668138,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						4,
						17
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.SetFollowLag,
					null,
					68488229259389,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						0,
						[
							0,
							80
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.EnableFollowing,
					null,
					1704487955455525,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7117959163755298,
					false
				]
,				[
					25,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5312454628259459,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					31,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6214133184110367,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					33,
					cr.behaviors.Turret.prototype.acts.AddTarget,
					"Turret",
					7457535066947465,
					false
					,[
					[
						4,
						17
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9333427440274822,
					false
					,[
					[
						0,
						[
							0,
							32
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3542860991119762,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					922161945544066,
					false
					,[
					[
						11,
						"currentLevel"
					]
,					[
						7,
						[
							0,
							6
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8355322575537389,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					25661949927342,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					5172868696713857,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9296478354527415,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3692976129610674,
					false
					,[
					[
						11,
						"musicOn"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4801596017311594,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					54,
					cr.plugins_.Audio.prototype.acts.Play,
					null,
					5894386549711877,
					false
					,[
					[
						2,
						["lines 2",true]
					]
,					[
						3,
						1
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8960723988346433,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lines5"],
			false,
			null,
			942766713425457,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				942766713425457,
				false
				,[
				[
					1,
					[
						2,
						"lines5"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7818067392261083,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchStart,
					null,
					1,
					false,
					false,
					false,
					3665110245719786,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3159297426805137,
					[
					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						5154355638784558,
						false
						,[
						[
							4,
							18
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						1126385298202721,
						false
						,[
						[
							4,
							20
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2568910179999331,
						false
						,[
						[
							11,
							"chalk"
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								30
							]
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						8735524509872,
						false
						,[
						[
							4,
							36
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						504182488387798,
						false
						,[
						[
							11,
							"playing"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						6583269688876179,
						false
						,[
						[
							4,
							75
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2028158657102402,
						false
						,[
						[
							11,
							"new_rocket"
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8588644100045768,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						4235875634504958,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9545359560493081,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsInTouch,
					null,
					0,
					false,
					false,
					false,
					503965779953376,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.cnds.PickTopBottom,
					null,
					0,
					false,
					false,
					true,
					2922272859349311,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					2911505914568754,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					9231077516968121,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5950972518287849,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							30
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					5784135135174638,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8801792441758223,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					4845555002434618,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
					null,
					3862636452642899,
					false
					,[
					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.X,
							false,
							null
						]
					]
,					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8558869250574179,
					false
					,[
					[
						11,
						"dist"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.distance
							,[
[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
,[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.Y,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6934451493440142,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4966304596752358,
						false
						,[
						[
							11,
							"dist"
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								50
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.For,
						null,
						0,
						true,
						false,
						false,
						7548674397182243,
						false
						,[
						[
							1,
							[
								2,
								""
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							0,
							[
								7,
								[
									23,
									"dist"
								]
								,[
									0,
									20
								]
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3753200696561335,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.loopindex
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						6084630383462248,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2825299810579884,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					5813779856839544,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					7039387727047753,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							23,
							"new_rocket"
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.MoveForward,
					null,
					3550333618661213,
					false
					,[
					[
						0,
						[
							6,
							[
								0,
								20
							]
							,[
								23,
								"index"
							]
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5786271750088338,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4532834134057826,
				[
				[
					-1,
					cr.system_object.prototype.cnds.ForEach,
					null,
					0,
					true,
					false,
					false,
					8061250038746654,
					false
					,[
					[
						4,
						16
					]
					]
				]
,				[
					16,
					cr.behaviors.Bullet.prototype.cnds.CompareSpeed,
					"Bullet",
					0,
					false,
					false,
					false,
					6034923367945676,
					false
					,[
					[
						8,
						4
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					16,
					cr.plugins_.Sprite.prototype.acts.SubInstanceVar,
					null,
					8084942421275055,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							6,
							[
								22,
								16,
								"Bullet",
								cr.behaviors.Bullet.prototype.exps.Speed,
								false,
								null
							]
							,[
								19,
								cr.system_object.prototype.exps.dt
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6508274228385922,
					[
					[
						16,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3828382969227175,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						8842515181072747,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
					],
					[
					[
						16,
						cr.plugins_.Sprite.prototype.acts.MoveForward,
						null,
						7544986726524676,
						false
						,[
						[
							0,
							[
								21,
								16,
								false,
								null
								,0
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						2716053482262619,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							8821487267128476,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
							null,
							7895857775770069,
							false
							,[
							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
,							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.MoveForward,
							null,
							2262325521309365,
							false
							,[
							[
								0,
								[
									3,
									[
										21,
										16,
										false,
										null
										,0
									]
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5363474440279499,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.distance
									,[
[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2711514718115195,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							7325189569108291,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							13,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2151505826731249,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									0,
									-1
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Controls6"],
			false,
			null,
			3155179724739397,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3155179724739397,
				false
				,[
				[
					1,
					[
						2,
						"Controls6"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				2378954035050381,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					61193289275929,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5202213239864416,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					5748030844497091,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					1767006857120208,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					1110479191445238,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7459421735494363,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5392197382886977,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2741476194463408,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					1605654512168415,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					3477621804675917,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					6766706577324827,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6428467524045654,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5790650337849462,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					9956062548007539,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3824230094188158,
					false
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					4673905694447007,
					false
					,[
					[
						1,
						[
							2,
							"runRight"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9177106028405926,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4089829789943295,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					1904366834580957,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					69748144437356,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4646350159830945,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					1809720200266847,
					false
					,[
					[
						1,
						[
							2,
							"womanRun"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9375834452069542,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2185526367632061,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5601227515715948,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8104204382364344,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					8357799538890916,
					false
					,[
					[
						3,
						2
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6088334857620942,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					8518131210236913,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9246526435594335,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2957884236761213,
					false
					,[
					[
						1,
						[
							2,
							"fall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2579191745227263,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					2437133729362328,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3952846283637568,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					9257567615457649,
					false
					,[
					[
						1,
						[
							2,
							"womanFall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3106473856453417,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3586658461788346,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					true,
					false,
					9134735927244833,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					679186732446152,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8406142125581953,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						5586645649965757,
						false
						,[
						[
							1,
							[
								2,
								"Default"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6147779586503827,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7829603937823982,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						1898119956890654,
						false
						,[
						[
							1,
							[
								2,
								"womanStand"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8615171086873808,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					9368425241937755,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2742624834793975,
					false
					,[
					[
						1,
						[
							2,
							"manLie"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "create chalk6"],
			false,
			null,
			6554992298793629,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6554992298793629,
				false
				,[
				[
					1,
					[
						2,
						"create chalk6"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9045784331479839,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					2189325118254892,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2255931126054609,
					false
					,[
					[
						4,
						22
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7115499412999326,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7056594899883767,
					false
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7276225993972347,
					false
				]
,				[
					22,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4029351635124102,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.random
							,[
[
								0,
								0
							]
,[
								0,
								4
							]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Die6"],
			false,
			null,
			4359968707998525,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4359968707998525,
				false
				,[
				[
					1,
					[
						2,
						"Die6"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				true,
				null,
				3285495246306755,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					3461674317821715,
					false
					,[
					[
						4,
						24
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					367436114245835,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1362370293595917,
					false
					,[
					[
						4,
						69
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8689541261363243,
					false
					,[
					[
						4,
						71
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8620721519909385,
					false
					,[
					[
						4,
						77
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8236906032682952,
					false
					,[
					[
						4,
						28
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					9840564074538082,
					false
					,[
					[
						4,
						80
					]
					]
				]
				],
				[
				[
					22,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7772205210954366,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					4479920478521885,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					5522544661653608,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					114244122048044,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1347675061012566,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7393597348444092,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					2634976384706476,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					7523527182551,
					[
					[
						31,
						cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
						null,
						0,
						false,
						true,
						false,
						577802723359357,
						false
						,[
						[
							4,
							29
						]
						]
					]
					],
					[
					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						7323234637663983,
						false
						,[
						[
							4,
							29
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						8338069084971529,
						false
						,[
						[
							4,
							30
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lifeBar6"],
			false,
			null,
			1540004244347961,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1540004244347961,
				false
				,[
				[
					1,
					[
						2,
						"lifeBar6"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5978517538884633,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					4787179600616214,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					4728124335565214,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2548287918897133,
					false
					,[
					[
						0,
						[
							23,
							"chalk"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "pickups6"],
			false,
			null,
			5851826298335507,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5851826298335507,
				false
				,[
				[
					1,
					[
						2,
						"pickups6"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9808912417514592,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					7521529665827309,
					false
					,[
					[
						4,
						30
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7595067754198922,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3296855585634899,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					30,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7283974290837169,
					false
				]
,				[
					30,
					cr.behaviors.lunarray_LiteTween.prototype.acts.Start,
					"LiteTween",
					6850841531925455,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					29,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					3617505865907839,
					false
				]
,				[
					26,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					9765010164463005,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "TURRET6"],
			false,
			null,
			6567514926415516,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6567514926415516,
				false
				,[
				[
					1,
					[
						2,
						"TURRET6"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8354385667806217,
				[
				[
					69,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1436242035215772,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					8269525481715218,
					false
				]
,				[
					69,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					1477184187363266,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5939741507460164,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					true,
					false,
					7497957726178886,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					3034557725192197,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4073972668075459,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					6096744232781668,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					68,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					1922779506541762,
					false
					,[
					[
						4,
						69
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5115340584743413,
				[
				[
					69,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					2982619892266575,
					false
				]
				],
				[
				[
					69,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					2663182172185663,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "cloud5"],
			false,
			null,
			2008101139301655,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2008101139301655,
				false
				,[
				[
					1,
					[
						2,
						"cloud5"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8184386600014077,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					2741021985435993,
					false
				]
				],
				[
				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					5015462018977238,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1498321907667132,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					5835694399260023,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							700
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					3062328750694092,
					false
					,[
					[
						0,
						[
							0,
							-174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					8662557938684648,
					false
					,[
					[
						0,
						[
							0,
							1824
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3124044857117728,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					999151529649154,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							1824
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					5895736295619095,
					false
					,[
					[
						0,
						[
							0,
							174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					1104474580821572,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4454820802032353,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					2906914821736179,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					6121798266749692,
					false
					,[
					[
						4,
						61
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9087026652662909,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					6580308171680279,
					false
				]
				],
				[
				[
					61,
					cr.behaviors.custom.prototype.acts.Accelerate,
					"CustomMovement",
					4023552442342493,
					false
					,[
					[
						3,
						2
					]
,					[
						0,
						[
							0,
							10000
						]
					]
					]
				]
,				[
					61,
					cr.plugins_.Sprite.prototype.acts.MoveToTop,
					null,
					8885682754324592,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1178776092327148,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					3750835858176075,
					false
				]
				],
				[
				[
					61,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					9208845977736461,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Win6"],
			false,
			null,
			2601659667000661,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2601659667000661,
				false
				,[
				[
					1,
					[
						2,
						"Win6"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8794349161936297,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					5356673287047002,
					false
					,[
					[
						4,
						35
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7442159553042637,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					6078817368520864,
					false
					,[
					[
						4,
						41
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						0,
						[
							0,
							448
						]
					]
,					[
						0,
						[
							0,
							-360
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8139377261577016,
				[
				[
					41,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					3070591389029929,
					false
				]
				],
				[
				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2712858539961328,
					false
					,[
					[
						4,
						42
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					9825987791591479,
					false
					,[
					[
						4,
						43
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					7225702950689165,
					false
					,[
					[
						4,
						44
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					3118076463343892,
					false
					,[
					[
						4,
						45
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
,				[
					42,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					6995946150830311,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					43,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4140996666384372,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					44,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4204056078052132,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					45,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					7109155165807662,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9485888729240491,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3923396647855167,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					45,
					cr.plugins_.Spritefont2.prototype.acts.SetText,
					null,
					8678014756125656,
					false
					,[
					[
						7,
						[
							23,
							"currentLevel"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8639643160299958,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					504611812054607,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					7011456294914375,
					false
					,[
					[
						4,
						44
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					6324630344757353,
					false
					,[
					[
						6,
						"Layout 7"
					]
					]
				]
,				[
					54,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					9114746127420214,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9879434039300885,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4692601275103177,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					1059162316985125,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					7569344567459611,
					false
					,[
					[
						4,
						73
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					8365612095266395,
					false
					,[
					[
						6,
						"Layout 7"
					]
					]
				]
,				[
					54,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					2543576236431231,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					104036542572395,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "chopper5"],
			false,
			null,
			4409583570187855,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4409583570187855,
				false
				,[
				[
					1,
					[
						2,
						"chopper5"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8336037655939867,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8633022215092543,
					false
				]
				],
				[
				[
					71,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					8013478699025331,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4140858033191422,
				[
				[
					71,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					7315324189194333,
					false
				]
				],
				[
				[
					71,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					9039031553495101,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "chopper5"],
			false,
			null,
			3478570126349029,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3478570126349029,
				false
				,[
				[
					1,
					[
						2,
						"chopper5"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8336037655939867,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8633022215092543,
					false
				]
				],
				[
				[
					72,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					8013478699025331,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4140858033191422,
				[
				[
					71,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					7315324189194333,
					false
				]
				],
				[
				[
					72,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					9039031553495101,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "bat2"],
			false,
			null,
			5083279690779496,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5083279690779496,
				false
				,[
				[
					1,
					[
						2,
						"bat2"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9382906170207056,
				[
				[
					78,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7223938271535615,
					false
				]
				],
				[
				[
					78,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9141513246250318,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8958253969348856,
				[
				[
					78,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					8763511910223358,
					false
				]
				],
				[
				[
					78,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					3567239430389121,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "blob"],
			false,
			null,
			1867992327515408,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1867992327515408,
				false
				,[
				[
					1,
					[
						2,
						"blob"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				6108582359234547,
				[
				[
					80,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					3392719901941842,
					false
				]
				],
				[
				[
					80,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9358633266217633,
					false
					,[
					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1499938320146825,
				[
				[
					80,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					9392941048523329,
					false
				]
				],
				[
				[
					80,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					3160915875864846,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"Event sheet 7",
		[
		[
			0,
			[true, "startup7"],
			false,
			null,
			369177993782242,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				369177993782242,
				false
				,[
				[
					1,
					[
						2,
						"startup7"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7917089818569855,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8411279471511331,
					false
				]
				],
				[
				[
					23,
					cr.plugins_.MagiCam.prototype.acts.CreateLocalCamera,
					null,
					2002062436133846,
					false
					,[
					[
						1,
						[
							2,
							"main"
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.FollowObject,
					null,
					1817899611668138,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						4,
						17
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.SetFollowLag,
					null,
					68488229259389,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						0,
						[
							0,
							80
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.EnableFollowing,
					null,
					1704487955455525,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7117959163755298,
					false
				]
,				[
					25,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5312454628259459,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					31,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6214133184110367,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					33,
					cr.behaviors.Turret.prototype.acts.AddTarget,
					"Turret",
					7457535066947465,
					false
					,[
					[
						4,
						17
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9333427440274822,
					false
					,[
					[
						0,
						[
							0,
							32
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3542860991119762,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					922161945544066,
					false
					,[
					[
						11,
						"currentLevel"
					]
,					[
						7,
						[
							0,
							7
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8355322575537389,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1970807131245949,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					1154945801525653,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1087662712841744,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8161831477611338,
					false
					,[
					[
						11,
						"musicOn"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2669560483528937,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					54,
					cr.plugins_.Audio.prototype.acts.Play,
					null,
					4002105594993452,
					false
					,[
					[
						2,
						["lines 3 mp3",true]
					]
,					[
						3,
						1
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9972873410709916,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lines6"],
			false,
			null,
			7202776554526293,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7202776554526293,
				false
				,[
				[
					1,
					[
						2,
						"lines6"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7818067392261083,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchStart,
					null,
					1,
					false,
					false,
					false,
					3665110245719786,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3159297426805137,
					[
					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						5154355638784558,
						false
						,[
						[
							4,
							18
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						1126385298202721,
						false
						,[
						[
							4,
							20
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2568910179999331,
						false
						,[
						[
							11,
							"chalk"
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								30
							]
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						8735524509872,
						false
						,[
						[
							4,
							36
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						504182488387798,
						false
						,[
						[
							11,
							"playing"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						6583269688876179,
						false
						,[
						[
							4,
							75
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2028158657102402,
						false
						,[
						[
							11,
							"new_rocket"
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8588644100045768,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						4235875634504958,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9545359560493081,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsInTouch,
					null,
					0,
					false,
					false,
					false,
					503965779953376,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.cnds.PickTopBottom,
					null,
					0,
					false,
					false,
					true,
					2922272859349311,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					2911505914568754,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					9231077516968121,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5950972518287849,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							30
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					5784135135174638,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8801792441758223,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					4845555002434618,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
					null,
					3862636452642899,
					false
					,[
					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.X,
							false,
							null
						]
					]
,					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8558869250574179,
					false
					,[
					[
						11,
						"dist"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.distance
							,[
[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
,[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.Y,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6934451493440142,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4966304596752358,
						false
						,[
						[
							11,
							"dist"
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								50
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.For,
						null,
						0,
						true,
						false,
						false,
						7548674397182243,
						false
						,[
						[
							1,
							[
								2,
								""
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							0,
							[
								7,
								[
									23,
									"dist"
								]
								,[
									0,
									20
								]
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3753200696561335,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.loopindex
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						6084630383462248,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2825299810579884,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					5813779856839544,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					7039387727047753,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							23,
							"new_rocket"
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.MoveForward,
					null,
					3550333618661213,
					false
					,[
					[
						0,
						[
							6,
							[
								0,
								20
							]
							,[
								23,
								"index"
							]
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5786271750088338,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4532834134057826,
				[
				[
					-1,
					cr.system_object.prototype.cnds.ForEach,
					null,
					0,
					true,
					false,
					false,
					8061250038746654,
					false
					,[
					[
						4,
						16
					]
					]
				]
,				[
					16,
					cr.behaviors.Bullet.prototype.cnds.CompareSpeed,
					"Bullet",
					0,
					false,
					false,
					false,
					6034923367945676,
					false
					,[
					[
						8,
						4
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					16,
					cr.plugins_.Sprite.prototype.acts.SubInstanceVar,
					null,
					8084942421275055,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							6,
							[
								22,
								16,
								"Bullet",
								cr.behaviors.Bullet.prototype.exps.Speed,
								false,
								null
							]
							,[
								19,
								cr.system_object.prototype.exps.dt
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6508274228385922,
					[
					[
						16,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3828382969227175,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						8842515181072747,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
					],
					[
					[
						16,
						cr.plugins_.Sprite.prototype.acts.MoveForward,
						null,
						7544986726524676,
						false
						,[
						[
							0,
							[
								21,
								16,
								false,
								null
								,0
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						2716053482262619,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							8821487267128476,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
							null,
							7895857775770069,
							false
							,[
							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
,							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.MoveForward,
							null,
							2262325521309365,
							false
							,[
							[
								0,
								[
									3,
									[
										21,
										16,
										false,
										null
										,0
									]
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5363474440279499,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.distance
									,[
[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2711514718115195,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							7325189569108291,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							13,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2151505826731249,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									0,
									-1
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Controls7"],
			false,
			null,
			394428124439423,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				394428124439423,
				false
				,[
				[
					1,
					[
						2,
						"Controls7"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				2378954035050381,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					61193289275929,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5202213239864416,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					5748030844497091,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					1767006857120208,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					1110479191445238,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7459421735494363,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5392197382886977,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2741476194463408,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					1605654512168415,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					3477621804675917,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					6766706577324827,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6428467524045654,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5790650337849462,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					9956062548007539,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3824230094188158,
					false
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					4673905694447007,
					false
					,[
					[
						1,
						[
							2,
							"runRight"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9177106028405926,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4089829789943295,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					1904366834580957,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					69748144437356,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4646350159830945,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					1809720200266847,
					false
					,[
					[
						1,
						[
							2,
							"womanRun"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9375834452069542,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2185526367632061,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5601227515715948,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8104204382364344,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					8357799538890916,
					false
					,[
					[
						3,
						2
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6088334857620942,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					8518131210236913,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9246526435594335,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2957884236761213,
					false
					,[
					[
						1,
						[
							2,
							"fall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2579191745227263,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					2437133729362328,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3952846283637568,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					9257567615457649,
					false
					,[
					[
						1,
						[
							2,
							"womanFall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3106473856453417,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3586658461788346,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					true,
					false,
					9134735927244833,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					679186732446152,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8406142125581953,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						5586645649965757,
						false
						,[
						[
							1,
							[
								2,
								"Default"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6147779586503827,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7829603937823982,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						1898119956890654,
						false
						,[
						[
							1,
							[
								2,
								"womanStand"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8615171086873808,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					9368425241937755,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2742624834793975,
					false
					,[
					[
						1,
						[
							2,
							"manLie"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "create chalk7"],
			false,
			null,
			4320170570178383,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4320170570178383,
				false
				,[
				[
					1,
					[
						2,
						"create chalk7"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9045784331479839,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					2189325118254892,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2255931126054609,
					false
					,[
					[
						4,
						22
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7115499412999326,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7056594899883767,
					false
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7276225993972347,
					false
				]
,				[
					22,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4029351635124102,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.random
							,[
[
								0,
								0
							]
,[
								0,
								4
							]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Die7"],
			false,
			null,
			2946506773772994,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2946506773772994,
				false
				,[
				[
					1,
					[
						2,
						"Die7"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				true,
				null,
				3285495246306755,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					3461674317821715,
					false
					,[
					[
						4,
						24
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					367436114245835,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1362370293595917,
					false
					,[
					[
						4,
						69
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8689541261363243,
					false
					,[
					[
						4,
						71
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8620721519909385,
					false
					,[
					[
						4,
						77
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8236906032682952,
					false
					,[
					[
						4,
						78
					]
					]
				]
				],
				[
				[
					22,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7772205210954366,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					4479920478521885,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					5522544661653608,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					114244122048044,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1347675061012566,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7393597348444092,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					2634976384706476,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					7523527182551,
					[
					[
						31,
						cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
						null,
						0,
						false,
						true,
						false,
						577802723359357,
						false
						,[
						[
							4,
							29
						]
						]
					]
					],
					[
					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						7323234637663983,
						false
						,[
						[
							4,
							29
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						8338069084971529,
						false
						,[
						[
							4,
							30
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lifeBar7"],
			false,
			null,
			112153153068078,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				112153153068078,
				false
				,[
				[
					1,
					[
						2,
						"lifeBar7"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5978517538884633,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					4787179600616214,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					4728124335565214,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2548287918897133,
					false
					,[
					[
						0,
						[
							23,
							"chalk"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "pickups7"],
			false,
			null,
			1081314712189294,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1081314712189294,
				false
				,[
				[
					1,
					[
						2,
						"pickups7"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9808912417514592,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					7521529665827309,
					false
					,[
					[
						4,
						30
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7595067754198922,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3296855585634899,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					30,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7283974290837169,
					false
				]
,				[
					30,
					cr.behaviors.lunarray_LiteTween.prototype.acts.Start,
					"LiteTween",
					6850841531925455,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					29,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					3617505865907839,
					false
				]
,				[
					26,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					9765010164463005,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "TURRET7"],
			false,
			null,
			6748328642252615,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6748328642252615,
				false
				,[
				[
					1,
					[
						2,
						"TURRET7"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8354385667806217,
				[
				[
					69,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1436242035215772,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					8269525481715218,
					false
				]
,				[
					69,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					1477184187363266,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5939741507460164,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					true,
					false,
					7497957726178886,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					3034557725192197,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4073972668075459,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					6096744232781668,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					68,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					1922779506541762,
					false
					,[
					[
						4,
						69
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5115340584743413,
				[
				[
					69,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					2982619892266575,
					false
				]
				],
				[
				[
					69,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					2663182172185663,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "cloud6"],
			false,
			null,
			2486528979400333,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2486528979400333,
				false
				,[
				[
					1,
					[
						2,
						"cloud6"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8184386600014077,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					2741021985435993,
					false
				]
				],
				[
				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					5015462018977238,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1498321907667132,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					5835694399260023,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							700
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					3062328750694092,
					false
					,[
					[
						0,
						[
							0,
							-174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					8662557938684648,
					false
					,[
					[
						0,
						[
							0,
							1824
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3124044857117728,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					999151529649154,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							1824
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					5895736295619095,
					false
					,[
					[
						0,
						[
							0,
							174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					1104474580821572,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4454820802032353,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					2906914821736179,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					6121798266749692,
					false
					,[
					[
						4,
						61
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9087026652662909,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					6580308171680279,
					false
				]
				],
				[
				[
					61,
					cr.behaviors.custom.prototype.acts.Accelerate,
					"CustomMovement",
					4023552442342493,
					false
					,[
					[
						3,
						2
					]
,					[
						0,
						[
							0,
							10000
						]
					]
					]
				]
,				[
					61,
					cr.plugins_.Sprite.prototype.acts.MoveToTop,
					null,
					8885682754324592,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1178776092327148,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					3750835858176075,
					false
				]
				],
				[
				[
					61,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					9208845977736461,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Win7"],
			false,
			null,
			3181183623716522,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3181183623716522,
				false
				,[
				[
					1,
					[
						2,
						"Win7"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8794349161936297,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					5356673287047002,
					false
					,[
					[
						4,
						35
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7442159553042637,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					6078817368520864,
					false
					,[
					[
						4,
						41
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						0,
						[
							0,
							448
						]
					]
,					[
						0,
						[
							0,
							-360
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8139377261577016,
				[
				[
					41,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					3070591389029929,
					false
				]
				],
				[
				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2712858539961328,
					false
					,[
					[
						4,
						42
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					9825987791591479,
					false
					,[
					[
						4,
						43
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					7225702950689165,
					false
					,[
					[
						4,
						44
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					3118076463343892,
					false
					,[
					[
						4,
						45
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
,				[
					42,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					6995946150830311,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					43,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4140996666384372,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					44,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4204056078052132,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					45,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					7109155165807662,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9485888729240491,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3923396647855167,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					45,
					cr.plugins_.Spritefont2.prototype.acts.SetText,
					null,
					8678014756125656,
					false
					,[
					[
						7,
						[
							23,
							"currentLevel"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6142833984034635,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					8600332956392384,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					4655155346302705,
					false
					,[
					[
						4,
						44
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					875508121386242,
					false
					,[
					[
						6,
						"Layout 8"
					]
					]
				]
,				[
					54,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					3861712642013928,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1130419239630526,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3879572690854316,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					1208366094872669,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					549190218394675,
					false
					,[
					[
						4,
						73
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					5750948725145817,
					false
					,[
					[
						6,
						"Layout 8"
					]
					]
				]
,				[
					54,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					6281181544391522,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8215691141206895,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "chopper6"],
			false,
			null,
			9515815791395309,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9515815791395309,
				false
				,[
				[
					1,
					[
						2,
						"chopper6"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8336037655939867,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8633022215092543,
					false
				]
				],
				[
				[
					71,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					8013478699025331,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4140858033191422,
				[
				[
					71,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					7315324189194333,
					false
				]
				],
				[
				[
					71,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					9039031553495101,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "chopper6"],
			false,
			null,
			6531432588414928,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6531432588414928,
				false
				,[
				[
					1,
					[
						2,
						"chopper6"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8336037655939867,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8633022215092543,
					false
				]
				],
				[
				[
					72,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					8013478699025331,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4140858033191422,
				[
				[
					71,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					7315324189194333,
					false
				]
				],
				[
				[
					72,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					9039031553495101,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "bat3"],
			false,
			null,
			8604888678344878,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8604888678344878,
				false
				,[
				[
					1,
					[
						2,
						"bat3"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9382906170207056,
				[
				[
					78,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7223938271535615,
					false
				]
				],
				[
				[
					78,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9141513246250318,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8958253969348856,
				[
				[
					78,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					8763511910223358,
					false
				]
				],
				[
				[
					78,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					3567239430389121,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"Event sheet 8",
		[
		[
			0,
			[true, "startup8"],
			false,
			null,
			6713659394523407,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6713659394523407,
				false
				,[
				[
					1,
					[
						2,
						"startup8"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7917089818569855,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8411279471511331,
					false
				]
				],
				[
				[
					23,
					cr.plugins_.MagiCam.prototype.acts.CreateLocalCamera,
					null,
					2002062436133846,
					false
					,[
					[
						1,
						[
							2,
							"main"
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.FollowObject,
					null,
					1817899611668138,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						4,
						17
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.SetFollowLag,
					null,
					68488229259389,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						0,
						[
							0,
							80
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.EnableFollowing,
					null,
					1704487955455525,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7117959163755298,
					false
				]
,				[
					25,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5312454628259459,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					31,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6214133184110367,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					33,
					cr.behaviors.Turret.prototype.acts.AddTarget,
					"Turret",
					7457535066947465,
					false
					,[
					[
						4,
						17
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9333427440274822,
					false
					,[
					[
						0,
						[
							0,
							32
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3542860991119762,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					922161945544066,
					false
					,[
					[
						11,
						"currentLevel"
					]
,					[
						7,
						[
							0,
							8
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8355322575537389,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2853262798761246,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					5455355286954451,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				469120459930607,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6300273341456715,
					false
					,[
					[
						11,
						"musicOn"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					1080710624091054,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					54,
					cr.plugins_.Audio.prototype.acts.Play,
					null,
					8857129533265637,
					false
					,[
					[
						2,
						["lines 4",true]
					]
,					[
						3,
						1
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4994920738851556,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lines7"],
			false,
			null,
			5785412118576005,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5785412118576005,
				false
				,[
				[
					1,
					[
						2,
						"lines7"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7818067392261083,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchStart,
					null,
					1,
					false,
					false,
					false,
					3665110245719786,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3159297426805137,
					[
					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						5154355638784558,
						false
						,[
						[
							4,
							18
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						1126385298202721,
						false
						,[
						[
							4,
							20
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2568910179999331,
						false
						,[
						[
							11,
							"chalk"
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								30
							]
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						8735524509872,
						false
						,[
						[
							4,
							36
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						504182488387798,
						false
						,[
						[
							11,
							"playing"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						6583269688876179,
						false
						,[
						[
							4,
							75
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2028158657102402,
						false
						,[
						[
							11,
							"new_rocket"
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8588644100045768,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						4235875634504958,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9545359560493081,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsInTouch,
					null,
					0,
					false,
					false,
					false,
					503965779953376,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.cnds.PickTopBottom,
					null,
					0,
					false,
					false,
					true,
					2922272859349311,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					2911505914568754,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					9231077516968121,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5950972518287849,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							30
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					5784135135174638,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8801792441758223,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					4845555002434618,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
					null,
					3862636452642899,
					false
					,[
					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.X,
							false,
							null
						]
					]
,					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8558869250574179,
					false
					,[
					[
						11,
						"dist"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.distance
							,[
[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
,[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.Y,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6934451493440142,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4966304596752358,
						false
						,[
						[
							11,
							"dist"
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								50
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.For,
						null,
						0,
						true,
						false,
						false,
						7548674397182243,
						false
						,[
						[
							1,
							[
								2,
								""
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							0,
							[
								7,
								[
									23,
									"dist"
								]
								,[
									0,
									20
								]
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3753200696561335,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.loopindex
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						6084630383462248,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2825299810579884,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					5813779856839544,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					7039387727047753,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							23,
							"new_rocket"
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.MoveForward,
					null,
					3550333618661213,
					false
					,[
					[
						0,
						[
							6,
							[
								0,
								20
							]
							,[
								23,
								"index"
							]
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5786271750088338,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4532834134057826,
				[
				[
					-1,
					cr.system_object.prototype.cnds.ForEach,
					null,
					0,
					true,
					false,
					false,
					8061250038746654,
					false
					,[
					[
						4,
						16
					]
					]
				]
,				[
					16,
					cr.behaviors.Bullet.prototype.cnds.CompareSpeed,
					"Bullet",
					0,
					false,
					false,
					false,
					6034923367945676,
					false
					,[
					[
						8,
						4
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					16,
					cr.plugins_.Sprite.prototype.acts.SubInstanceVar,
					null,
					8084942421275055,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							6,
							[
								22,
								16,
								"Bullet",
								cr.behaviors.Bullet.prototype.exps.Speed,
								false,
								null
							]
							,[
								19,
								cr.system_object.prototype.exps.dt
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6508274228385922,
					[
					[
						16,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3828382969227175,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						8842515181072747,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
					],
					[
					[
						16,
						cr.plugins_.Sprite.prototype.acts.MoveForward,
						null,
						7544986726524676,
						false
						,[
						[
							0,
							[
								21,
								16,
								false,
								null
								,0
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						2716053482262619,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							8821487267128476,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
							null,
							7895857775770069,
							false
							,[
							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
,							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.MoveForward,
							null,
							2262325521309365,
							false
							,[
							[
								0,
								[
									3,
									[
										21,
										16,
										false,
										null
										,0
									]
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5363474440279499,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.distance
									,[
[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2711514718115195,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							7325189569108291,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							13,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2151505826731249,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									0,
									-1
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Controls8"],
			false,
			null,
			6068672237889622,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6068672237889622,
				false
				,[
				[
					1,
					[
						2,
						"Controls8"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				2378954035050381,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					61193289275929,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5202213239864416,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					5748030844497091,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					1767006857120208,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					1110479191445238,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7459421735494363,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5392197382886977,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2741476194463408,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					1605654512168415,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					3477621804675917,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					6766706577324827,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6428467524045654,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5790650337849462,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					9956062548007539,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3824230094188158,
					false
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					4673905694447007,
					false
					,[
					[
						1,
						[
							2,
							"runRight"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9177106028405926,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4089829789943295,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					1904366834580957,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					69748144437356,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4646350159830945,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					1809720200266847,
					false
					,[
					[
						1,
						[
							2,
							"womanRun"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9375834452069542,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2185526367632061,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5601227515715948,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8104204382364344,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					8357799538890916,
					false
					,[
					[
						3,
						2
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6088334857620942,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					8518131210236913,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9246526435594335,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2957884236761213,
					false
					,[
					[
						1,
						[
							2,
							"fall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2579191745227263,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					2437133729362328,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3952846283637568,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					9257567615457649,
					false
					,[
					[
						1,
						[
							2,
							"womanFall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3106473856453417,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3586658461788346,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					true,
					false,
					9134735927244833,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					679186732446152,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8406142125581953,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						5586645649965757,
						false
						,[
						[
							1,
							[
								2,
								"Default"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6147779586503827,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7829603937823982,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						1898119956890654,
						false
						,[
						[
							1,
							[
								2,
								"womanStand"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8615171086873808,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					9368425241937755,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2742624834793975,
					false
					,[
					[
						1,
						[
							2,
							"manLie"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "create chalk8"],
			false,
			null,
			1927499467539555,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1927499467539555,
				false
				,[
				[
					1,
					[
						2,
						"create chalk8"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9045784331479839,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					2189325118254892,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2255931126054609,
					false
					,[
					[
						4,
						22
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7115499412999326,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7056594899883767,
					false
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7276225993972347,
					false
				]
,				[
					22,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4029351635124102,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.random
							,[
[
								0,
								0
							]
,[
								0,
								4
							]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Die8"],
			false,
			null,
			151455481834443,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				151455481834443,
				false
				,[
				[
					1,
					[
						2,
						"Die8"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				true,
				null,
				3285495246306755,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					3461674317821715,
					false
					,[
					[
						4,
						24
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					367436114245835,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1362370293595917,
					false
					,[
					[
						4,
						69
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8689541261363243,
					false
					,[
					[
						4,
						71
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8620721519909385,
					false
					,[
					[
						4,
						77
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8236906032682952,
					false
					,[
					[
						4,
						34
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					876715121737288,
					false
					,[
					[
						4,
						82
					]
					]
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					6576134347322439,
					false
				]
,				[
					22,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7772205210954366,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					4479920478521885,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					5522544661653608,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					114244122048044,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1347675061012566,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7393597348444092,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					2634976384706476,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					270549919714889,
					false
					,[
					[
						0,
						[
							0,
							3
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					7422548866222419,
					false
					,[
					[
						4,
						82
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							96
						]
					]
,					[
						0,
						[
							0,
							544
						]
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					7920446173225158,
					false
					,[
					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					7523527182551,
					[
					[
						31,
						cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
						null,
						0,
						false,
						true,
						false,
						577802723359357,
						false
						,[
						[
							4,
							29
						]
						]
					]
					],
					[
					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						7323234637663983,
						false
						,[
						[
							4,
							29
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						8338069084971529,
						false
						,[
						[
							4,
							30
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lifeBar8"],
			false,
			null,
			4029680310928346,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4029680310928346,
				false
				,[
				[
					1,
					[
						2,
						"lifeBar8"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5978517538884633,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					4787179600616214,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					4728124335565214,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2548287918897133,
					false
					,[
					[
						0,
						[
							23,
							"chalk"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "pickups8"],
			false,
			null,
			2517851739061692,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2517851739061692,
				false
				,[
				[
					1,
					[
						2,
						"pickups8"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9808912417514592,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					7521529665827309,
					false
					,[
					[
						4,
						30
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7595067754198922,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3296855585634899,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					30,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7283974290837169,
					false
				]
,				[
					30,
					cr.behaviors.lunarray_LiteTween.prototype.acts.Start,
					"LiteTween",
					6850841531925455,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					29,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					3617505865907839,
					false
				]
,				[
					26,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					9765010164463005,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "TURRET8"],
			false,
			null,
			9855925896337014,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9855925896337014,
				false
				,[
				[
					1,
					[
						2,
						"TURRET8"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8354385667806217,
				[
				[
					34,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1436242035215772,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					8269525481715218,
					false
				]
,				[
					34,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					1477184187363266,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6459544587972828,
				[
				[
					34,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					4249700584860742,
					false
					,[
					[
						4,
						10
					]
					]
				]
				],
				[
				[
					34,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					542456109517334,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2286264140822626,
				[
				[
					34,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					3168879174411367,
					false
					,[
					[
						4,
						9
					]
					]
				]
				],
				[
				[
					34,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					1824556513540777,
					false
				]
				]
			]
,			[
				0,
				null,
				true,
				null,
				7741908982414226,
				[
				[
					34,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					5571656961999605,
					false
					,[
					[
						4,
						11
					]
					]
				]
,				[
					34,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					4232814164755836,
					false
					,[
					[
						4,
						8
					]
					]
				]
				],
				[
				[
					34,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					1518534666711887,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5939741507460164,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					true,
					false,
					7497957726178886,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					3034557725192197,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4073972668075459,
				[
				[
					33,
					cr.behaviors.Turret.prototype.cnds.OnShoot,
					"Turret",
					1,
					false,
					false,
					false,
					6096744232781668,
					false
				]
				],
				[
				[
					33,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					1922779506541762,
					false
					,[
					[
						4,
						34
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5115340584743413,
				[
				[
					34,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					2982619892266575,
					false
				]
				],
				[
				[
					34,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					2663182172185663,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "cloud7"],
			false,
			null,
			9786653792875434,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9786653792875434,
				false
				,[
				[
					1,
					[
						2,
						"cloud7"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8184386600014077,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					2741021985435993,
					false
				]
				],
				[
				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					5015462018977238,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1498321907667132,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					5835694399260023,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							700
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					3062328750694092,
					false
					,[
					[
						0,
						[
							0,
							-174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					8662557938684648,
					false
					,[
					[
						0,
						[
							0,
							1824
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3124044857117728,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					999151529649154,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							1824
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					5895736295619095,
					false
					,[
					[
						0,
						[
							0,
							174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					1104474580821572,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4454820802032353,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					2906914821736179,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					6121798266749692,
					false
					,[
					[
						4,
						61
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9087026652662909,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					6580308171680279,
					false
				]
				],
				[
				[
					61,
					cr.behaviors.custom.prototype.acts.Accelerate,
					"CustomMovement",
					4023552442342493,
					false
					,[
					[
						3,
						2
					]
,					[
						0,
						[
							0,
							10000
						]
					]
					]
				]
,				[
					61,
					cr.plugins_.Sprite.prototype.acts.MoveToTop,
					null,
					8885682754324592,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1178776092327148,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					3750835858176075,
					false
				]
				],
				[
				[
					61,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					9208845977736461,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Win8"],
			false,
			null,
			707058324197488,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				707058324197488,
				false
				,[
				[
					1,
					[
						2,
						"Win8"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8794349161936297,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					5356673287047002,
					false
					,[
					[
						4,
						35
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7442159553042637,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					6078817368520864,
					false
					,[
					[
						4,
						41
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						0,
						[
							0,
							448
						]
					]
,					[
						0,
						[
							0,
							-360
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8139377261577016,
				[
				[
					41,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					3070591389029929,
					false
				]
				],
				[
				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2712858539961328,
					false
					,[
					[
						4,
						42
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					9825987791591479,
					false
					,[
					[
						4,
						43
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					7225702950689165,
					false
					,[
					[
						4,
						44
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					3118076463343892,
					false
					,[
					[
						4,
						45
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
,				[
					42,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					6995946150830311,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					43,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4140996666384372,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					44,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4204056078052132,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					45,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					7109155165807662,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9485888729240491,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3923396647855167,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					45,
					cr.plugins_.Spritefont2.prototype.acts.SetText,
					null,
					8678014756125656,
					false
					,[
					[
						7,
						[
							23,
							"currentLevel"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7458260553339537,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					8836990500493454,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					90990593077497,
					false
					,[
					[
						4,
						44
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					498827190050287,
					false
					,[
					[
						6,
						"Layout 9"
					]
					]
				]
,				[
					54,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					3452955590010231,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4311660239855623,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				261588346120408,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					9121743897118375,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					6010557376191912,
					false
					,[
					[
						4,
						73
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					8581616547884747,
					false
					,[
					[
						6,
						"Layout 9"
					]
					]
				]
,				[
					54,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					1806407547725527,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6971999516063432,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "chopper7"],
			false,
			null,
			7604485865191744,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7604485865191744,
				false
				,[
				[
					1,
					[
						2,
						"chopper7"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8336037655939867,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8633022215092543,
					false
				]
				],
				[
				[
					71,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					8013478699025331,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4140858033191422,
				[
				[
					71,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					7315324189194333,
					false
				]
				],
				[
				[
					71,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					9039031553495101,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "chopper7"],
			false,
			null,
			4923702597335235,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4923702597335235,
				false
				,[
				[
					1,
					[
						2,
						"chopper7"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8336037655939867,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8633022215092543,
					false
				]
				],
				[
				[
					72,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					8013478699025331,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4140858033191422,
				[
				[
					71,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					7315324189194333,
					false
				]
				],
				[
				[
					72,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					9039031553495101,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "bat4"],
			false,
			null,
			5884091683778348,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5884091683778348,
				false
				,[
				[
					1,
					[
						2,
						"bat4"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9382906170207056,
				[
				[
					78,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7223938271535615,
					false
				]
				],
				[
				[
					78,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9141513246250318,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8958253969348856,
				[
				[
					78,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					8763511910223358,
					false
				]
				],
				[
				[
					78,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					3567239430389121,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "zombie5"],
			false,
			null,
			5518587753549419,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5518587753549419,
				false
				,[
				[
					1,
					[
						2,
						"zombie5"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				705969678675543,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2602010572236284,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.TriggerOnce,
					null,
					0,
					false,
					false,
					false,
					8027842431372429,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					7547346769625613,
					false
					,[
					[
						0,
						[
							0,
							3
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					1014659376421207,
					false
					,[
					[
						4,
						82
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							96
						]
					]
,					[
						0,
						[
							0,
							544
						]
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					4013271974414859,
					false
					,[
					[
						0,
						[
							0,
							12
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6545260232659247,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					6015936288851964,
					false
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2041077906017691,
					false
					,[
					[
						1,
						[
							2,
							"walk"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
					null,
					7876744968814734,
					false
					,[
					[
						10,
						0
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6326283575790136,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.IsBoolInstanceVarSet,
					null,
					0,
					false,
					false,
					false,
					4583929342188521,
					false
					,[
					[
						10,
						0
					]
					]
				]
				],
				[
				[
					82,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					1948926292873427,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9452583926374819,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					4436488717802992,
					false
					,[
					[
						4,
						24
					]
					]
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					6391203513585768,
					false
					,[
					[
						1,
						[
							2,
							"die"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					82,
					cr.plugins_.Sprite.prototype.acts.SetBoolInstanceVar,
					null,
					8304267455245521,
					false
					,[
					[
						10,
						0
					]
,					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9703918062543635,
				[
				[
					82,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					2836056649594179,
					false
					,[
					[
						1,
						[
							2,
							"die"
						]
					]
					]
				]
				],
				[
				[
					82,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					2603912470112375,
					false
				]
				]
			]
			]
		]
		]
	]
,	[
		"Event sheet 9",
		[
		[
			0,
			[true, "startup9"],
			false,
			null,
			1506993834386902,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1506993834386902,
				false
				,[
				[
					1,
					[
						2,
						"startup9"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7917089818569855,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8411279471511331,
					false
				]
				],
				[
				[
					23,
					cr.plugins_.MagiCam.prototype.acts.CreateLocalCamera,
					null,
					2002062436133846,
					false
					,[
					[
						1,
						[
							2,
							"main"
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.FollowObject,
					null,
					1817899611668138,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						4,
						17
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.SetFollowLag,
					null,
					68488229259389,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						0,
						[
							0,
							80
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.EnableFollowing,
					null,
					1704487955455525,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7117959163755298,
					false
				]
,				[
					25,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5312454628259459,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					31,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6214133184110367,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					33,
					cr.behaviors.Turret.prototype.acts.AddTarget,
					"Turret",
					7457535066947465,
					false
					,[
					[
						4,
						17
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9333427440274822,
					false
					,[
					[
						0,
						[
							0,
							32
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3542860991119762,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					922161945544066,
					false
					,[
					[
						11,
						"currentLevel"
					]
,					[
						7,
						[
							0,
							9
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8355322575537389,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3448466159109749,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					5188503034902862,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4749003769666509,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8174025706269194,
					false
					,[
					[
						11,
						"musicOn"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3056819574987272,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					54,
					cr.plugins_.Audio.prototype.acts.Play,
					null,
					3927994590313924,
					false
					,[
					[
						2,
						["lines 5",true]
					]
,					[
						3,
						1
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7612755534020016,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lines8"],
			false,
			null,
			2591270708518063,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2591270708518063,
				false
				,[
				[
					1,
					[
						2,
						"lines8"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7818067392261083,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchStart,
					null,
					1,
					false,
					false,
					false,
					3665110245719786,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3159297426805137,
					[
					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						5154355638784558,
						false
						,[
						[
							4,
							18
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						1126385298202721,
						false
						,[
						[
							4,
							20
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2568910179999331,
						false
						,[
						[
							11,
							"chalk"
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								30
							]
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						8735524509872,
						false
						,[
						[
							4,
							36
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						504182488387798,
						false
						,[
						[
							11,
							"playing"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						6583269688876179,
						false
						,[
						[
							4,
							75
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2028158657102402,
						false
						,[
						[
							11,
							"new_rocket"
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8588644100045768,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						4235875634504958,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9545359560493081,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsInTouch,
					null,
					0,
					false,
					false,
					false,
					503965779953376,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.cnds.PickTopBottom,
					null,
					0,
					false,
					false,
					true,
					2922272859349311,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					2911505914568754,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					9231077516968121,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5950972518287849,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							30
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					5784135135174638,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8801792441758223,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					4845555002434618,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
					null,
					3862636452642899,
					false
					,[
					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.X,
							false,
							null
						]
					]
,					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8558869250574179,
					false
					,[
					[
						11,
						"dist"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.distance
							,[
[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
,[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.Y,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6934451493440142,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4966304596752358,
						false
						,[
						[
							11,
							"dist"
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								50
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.For,
						null,
						0,
						true,
						false,
						false,
						7548674397182243,
						false
						,[
						[
							1,
							[
								2,
								""
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							0,
							[
								7,
								[
									23,
									"dist"
								]
								,[
									0,
									20
								]
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3753200696561335,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.loopindex
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						6084630383462248,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2825299810579884,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					5813779856839544,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					7039387727047753,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							23,
							"new_rocket"
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.MoveForward,
					null,
					3550333618661213,
					false
					,[
					[
						0,
						[
							6,
							[
								0,
								20
							]
							,[
								23,
								"index"
							]
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5786271750088338,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4532834134057826,
				[
				[
					-1,
					cr.system_object.prototype.cnds.ForEach,
					null,
					0,
					true,
					false,
					false,
					8061250038746654,
					false
					,[
					[
						4,
						16
					]
					]
				]
,				[
					16,
					cr.behaviors.Bullet.prototype.cnds.CompareSpeed,
					"Bullet",
					0,
					false,
					false,
					false,
					6034923367945676,
					false
					,[
					[
						8,
						4
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					16,
					cr.plugins_.Sprite.prototype.acts.SubInstanceVar,
					null,
					8084942421275055,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							6,
							[
								22,
								16,
								"Bullet",
								cr.behaviors.Bullet.prototype.exps.Speed,
								false,
								null
							]
							,[
								19,
								cr.system_object.prototype.exps.dt
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6508274228385922,
					[
					[
						16,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3828382969227175,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						8842515181072747,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
					],
					[
					[
						16,
						cr.plugins_.Sprite.prototype.acts.MoveForward,
						null,
						7544986726524676,
						false
						,[
						[
							0,
							[
								21,
								16,
								false,
								null
								,0
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						2716053482262619,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							8821487267128476,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
							null,
							7895857775770069,
							false
							,[
							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
,							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.MoveForward,
							null,
							2262325521309365,
							false
							,[
							[
								0,
								[
									3,
									[
										21,
										16,
										false,
										null
										,0
									]
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5363474440279499,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.distance
									,[
[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2711514718115195,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							7325189569108291,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							13,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2151505826731249,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									0,
									-1
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Controls9"],
			false,
			null,
			2716783302345356,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2716783302345356,
				false
				,[
				[
					1,
					[
						2,
						"Controls9"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				2378954035050381,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					61193289275929,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5202213239864416,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					5748030844497091,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					1767006857120208,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					1110479191445238,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7459421735494363,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5392197382886977,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2741476194463408,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					1605654512168415,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					3477621804675917,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					6766706577324827,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6428467524045654,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5790650337849462,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					9956062548007539,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3824230094188158,
					false
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					4673905694447007,
					false
					,[
					[
						1,
						[
							2,
							"runRight"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9177106028405926,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4089829789943295,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					1904366834580957,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					69748144437356,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4646350159830945,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					1809720200266847,
					false
					,[
					[
						1,
						[
							2,
							"womanRun"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9375834452069542,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2185526367632061,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5601227515715948,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8104204382364344,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					8357799538890916,
					false
					,[
					[
						3,
						2
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6088334857620942,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					8518131210236913,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9246526435594335,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2957884236761213,
					false
					,[
					[
						1,
						[
							2,
							"fall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2579191745227263,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					2437133729362328,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3952846283637568,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					9257567615457649,
					false
					,[
					[
						1,
						[
							2,
							"womanFall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3106473856453417,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3586658461788346,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					true,
					false,
					9134735927244833,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					679186732446152,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8406142125581953,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						5586645649965757,
						false
						,[
						[
							1,
							[
								2,
								"Default"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6147779586503827,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7829603937823982,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						1898119956890654,
						false
						,[
						[
							1,
							[
								2,
								"womanStand"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8615171086873808,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					9368425241937755,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2742624834793975,
					false
					,[
					[
						1,
						[
							2,
							"manLie"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "create chalk9"],
			false,
			null,
			1513136415912771,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1513136415912771,
				false
				,[
				[
					1,
					[
						2,
						"create chalk9"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9045784331479839,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					2189325118254892,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2255931126054609,
					false
					,[
					[
						4,
						22
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7115499412999326,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7056594899883767,
					false
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7276225993972347,
					false
				]
,				[
					22,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4029351635124102,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.random
							,[
[
								0,
								0
							]
,[
								0,
								4
							]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Die9"],
			false,
			null,
			7126621842039615,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7126621842039615,
				false
				,[
				[
					1,
					[
						2,
						"Die9"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				true,
				null,
				3285495246306755,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					3461674317821715,
					false
					,[
					[
						4,
						24
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					367436114245835,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1362370293595917,
					false
					,[
					[
						4,
						69
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8689541261363243,
					false
					,[
					[
						4,
						71
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8620721519909385,
					false
					,[
					[
						4,
						77
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8236906032682952,
					false
					,[
					[
						4,
						78
					]
					]
				]
				],
				[
				[
					22,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7772205210954366,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					4479920478521885,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					5522544661653608,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					114244122048044,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1347675061012566,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7393597348444092,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					2634976384706476,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					7523527182551,
					[
					[
						31,
						cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
						null,
						0,
						false,
						true,
						false,
						577802723359357,
						false
						,[
						[
							4,
							29
						]
						]
					]
					],
					[
					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						7323234637663983,
						false
						,[
						[
							4,
							29
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						8338069084971529,
						false
						,[
						[
							4,
							30
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lifeBar9"],
			false,
			null,
			7933710129899891,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7933710129899891,
				false
				,[
				[
					1,
					[
						2,
						"lifeBar9"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5978517538884633,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					4787179600616214,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					4728124335565214,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2548287918897133,
					false
					,[
					[
						0,
						[
							23,
							"chalk"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "pickups9"],
			false,
			null,
			5030392594879304,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5030392594879304,
				false
				,[
				[
					1,
					[
						2,
						"pickups9"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9808912417514592,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					7521529665827309,
					false
					,[
					[
						4,
						30
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7595067754198922,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3296855585634899,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					30,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7283974290837169,
					false
				]
,				[
					30,
					cr.behaviors.lunarray_LiteTween.prototype.acts.Start,
					"LiteTween",
					6850841531925455,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					29,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					3617505865907839,
					false
				]
,				[
					26,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					9765010164463005,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "TURRET9"],
			false,
			null,
			5056223266290212,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5056223266290212,
				false
				,[
				[
					1,
					[
						2,
						"TURRET9"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8354385667806217,
				[
				[
					69,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1436242035215772,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					8269525481715218,
					false
				]
,				[
					69,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					1477184187363266,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5939741507460164,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					true,
					false,
					7497957726178886,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					3034557725192197,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4073972668075459,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					6096744232781668,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					68,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					1922779506541762,
					false
					,[
					[
						4,
						69
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5115340584743413,
				[
				[
					69,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					2982619892266575,
					false
				]
				],
				[
				[
					69,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					2663182172185663,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "cloud8"],
			false,
			null,
			5907482544264483,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5907482544264483,
				false
				,[
				[
					1,
					[
						2,
						"cloud8"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8184386600014077,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					2741021985435993,
					false
				]
				],
				[
				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					5015462018977238,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1498321907667132,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					5835694399260023,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							700
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					3062328750694092,
					false
					,[
					[
						0,
						[
							0,
							-174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					8662557938684648,
					false
					,[
					[
						0,
						[
							0,
							1824
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3124044857117728,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					999151529649154,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							1824
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					5895736295619095,
					false
					,[
					[
						0,
						[
							0,
							174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					1104474580821572,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4454820802032353,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					2906914821736179,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					6121798266749692,
					false
					,[
					[
						4,
						61
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9087026652662909,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					6580308171680279,
					false
				]
				],
				[
				[
					61,
					cr.behaviors.custom.prototype.acts.Accelerate,
					"CustomMovement",
					4023552442342493,
					false
					,[
					[
						3,
						2
					]
,					[
						0,
						[
							0,
							10000
						]
					]
					]
				]
,				[
					61,
					cr.plugins_.Sprite.prototype.acts.MoveToTop,
					null,
					8885682754324592,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1178776092327148,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					3750835858176075,
					false
				]
				],
				[
				[
					61,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					9208845977736461,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Win9"],
			false,
			null,
			9413249017685058,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9413249017685058,
				false
				,[
				[
					1,
					[
						2,
						"Win9"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8794349161936297,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					5356673287047002,
					false
					,[
					[
						4,
						35
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7442159553042637,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					6078817368520864,
					false
					,[
					[
						4,
						41
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						0,
						[
							0,
							448
						]
					]
,					[
						0,
						[
							0,
							-360
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8139377261577016,
				[
				[
					41,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					3070591389029929,
					false
				]
				],
				[
				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2712858539961328,
					false
					,[
					[
						4,
						42
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					9825987791591479,
					false
					,[
					[
						4,
						43
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					7225702950689165,
					false
					,[
					[
						4,
						44
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					3118076463343892,
					false
					,[
					[
						4,
						45
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
,				[
					42,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					6995946150830311,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					43,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4140996666384372,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					44,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4204056078052132,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					45,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					7109155165807662,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9485888729240491,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3923396647855167,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					45,
					cr.plugins_.Spritefont2.prototype.acts.SetText,
					null,
					8678014756125656,
					false
					,[
					[
						7,
						[
							23,
							"currentLevel"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3482552861672447,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					141928010772153,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					8779172682105711,
					false
					,[
					[
						4,
						44
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					1513663096779504,
					false
					,[
					[
						6,
						"Layout 10"
					]
					]
				]
,				[
					54,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					5961799005428654,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3061987004363475,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5531565670242888,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					1634777545157105,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					687791457202823,
					false
					,[
					[
						4,
						73
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					2250425955769442,
					false
					,[
					[
						6,
						"Layout 10"
					]
					]
				]
,				[
					54,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					6987609805292192,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					114449992549019,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "chopper8"],
			false,
			null,
			2341420290394122,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2341420290394122,
				false
				,[
				[
					1,
					[
						2,
						"chopper8"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8336037655939867,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8633022215092543,
					false
				]
				],
				[
				[
					71,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					8013478699025331,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4140858033191422,
				[
				[
					71,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					7315324189194333,
					false
				]
				],
				[
				[
					71,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					9039031553495101,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "chopper8"],
			false,
			null,
			4567898527570656,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4567898527570656,
				false
				,[
				[
					1,
					[
						2,
						"chopper8"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8336037655939867,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8633022215092543,
					false
				]
				],
				[
				[
					72,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					8013478699025331,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4140858033191422,
				[
				[
					71,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					7315324189194333,
					false
				]
				],
				[
				[
					72,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					9039031553495101,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "bat5"],
			false,
			null,
			6276795547238954,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6276795547238954,
				false
				,[
				[
					1,
					[
						2,
						"bat5"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9382906170207056,
				[
				[
					78,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7223938271535615,
					false
				]
				],
				[
				[
					78,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9141513246250318,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8958253969348856,
				[
				[
					78,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					8763511910223358,
					false
				]
				],
				[
				[
					78,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					3567239430389121,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"Event sheet 10",
		[
		[
			0,
			[true, "startup10"],
			false,
			null,
			5031543324485066,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5031543324485066,
				false
				,[
				[
					1,
					[
						2,
						"startup10"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7917089818569855,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8411279471511331,
					false
				]
				],
				[
				[
					23,
					cr.plugins_.MagiCam.prototype.acts.CreateLocalCamera,
					null,
					2002062436133846,
					false
					,[
					[
						1,
						[
							2,
							"main"
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.FollowObject,
					null,
					1817899611668138,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						4,
						17
					]
,					[
						0,
						[
							0,
							1
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.SetFollowLag,
					null,
					68488229259389,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						0,
						[
							0,
							80
						]
					]
					]
				]
,				[
					23,
					cr.plugins_.MagiCam.prototype.acts.EnableFollowing,
					null,
					1704487955455525,
					false
					,[
					[
						1,
						[
							2,
							""
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7117959163755298,
					false
				]
,				[
					25,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5312454628259459,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					31,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6214133184110367,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					33,
					cr.behaviors.Turret.prototype.acts.AddTarget,
					"Turret",
					7457535066947465,
					false
					,[
					[
						4,
						17
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9333427440274822,
					false
					,[
					[
						0,
						[
							0,
							32
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3542860991119762,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					922161945544066,
					false
					,[
					[
						11,
						"currentLevel"
					]
,					[
						7,
						[
							0,
							10
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8355322575537389,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4282253216530711,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6155902037494955,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7970509221354954,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					780280521666821,
					false
					,[
					[
						11,
						"musicOn"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					782396496344636,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					54,
					cr.plugins_.Audio.prototype.acts.Play,
					null,
					3976482234120815,
					false
					,[
					[
						2,
						["lines 6",true]
					]
,					[
						3,
						1
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1932528550905047,
					false
					,[
					[
						11,
						"musicIsPlaying"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lines9"],
			false,
			null,
			6760823534506449,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6760823534506449,
				false
				,[
				[
					1,
					[
						2,
						"lines9"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7818067392261083,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchStart,
					null,
					1,
					false,
					false,
					false,
					3665110245719786,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3159297426805137,
					[
					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						5154355638784558,
						false
						,[
						[
							4,
							18
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						1126385298202721,
						false
						,[
						[
							4,
							20
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						2568910179999331,
						false
						,[
						[
							11,
							"chalk"
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								30
							]
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						8735524509872,
						false
						,[
						[
							4,
							36
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						504182488387798,
						false
						,[
						[
							11,
							"playing"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						19,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						true,
						false,
						6583269688876179,
						false
						,[
						[
							4,
							75
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2028158657102402,
						false
						,[
						[
							11,
							"new_rocket"
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						8588644100045768,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						4235875634504958,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
						]
,						[
							0,
							[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9545359560493081,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsInTouch,
					null,
					0,
					false,
					false,
					false,
					503965779953376,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.cnds.PickTopBottom,
					null,
					0,
					false,
					false,
					true,
					2922272859349311,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					2911505914568754,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					9231077516968121,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5950972518287849,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							30
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					5784135135174638,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8801792441758223,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					4845555002434618,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
					null,
					3862636452642899,
					false
					,[
					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.X,
							false,
							null
						]
					]
,					[
						0,
						[
							20,
							19,
							cr.plugins_.Touch.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8558869250574179,
					false
					,[
					[
						11,
						"dist"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.distance
							,[
[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
,[
								20,
								13,
								cr.plugins_.Sprite.prototype.exps.Y,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.X,
								false,
								null
							]
,[
								20,
								19,
								cr.plugins_.Touch.prototype.exps.Y,
								false,
								null
							]
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6934451493440142,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4966304596752358,
						false
						,[
						[
							11,
							"dist"
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								50
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.For,
						null,
						0,
						true,
						false,
						false,
						7548674397182243,
						false
						,[
						[
							1,
							[
								2,
								""
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							0,
							[
								7,
								[
									23,
									"dist"
								]
								,[
									0,
									20
								]
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3753200696561335,
						false
						,[
						[
							11,
							"index"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.loopindex
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						6084630383462248,
						false
						,[
						[
							4,
							13
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2825299810579884,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					5813779856839544,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					7039387727047753,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							23,
							"new_rocket"
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.MoveForward,
					null,
					3550333618661213,
					false
					,[
					[
						0,
						[
							6,
							[
								0,
								20
							]
							,[
								23,
								"index"
							]
						]
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5786271750088338,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4532834134057826,
				[
				[
					-1,
					cr.system_object.prototype.cnds.ForEach,
					null,
					0,
					true,
					false,
					false,
					8061250038746654,
					false
					,[
					[
						4,
						16
					]
					]
				]
,				[
					16,
					cr.behaviors.Bullet.prototype.cnds.CompareSpeed,
					"Bullet",
					0,
					false,
					false,
					false,
					6034923367945676,
					false
					,[
					[
						8,
						4
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					16,
					cr.plugins_.Sprite.prototype.acts.SubInstanceVar,
					null,
					8084942421275055,
					false
					,[
					[
						10,
						0
					]
,					[
						7,
						[
							6,
							[
								22,
								16,
								"Bullet",
								cr.behaviors.Bullet.prototype.exps.Speed,
								false,
								null
							]
							,[
								19,
								cr.system_object.prototype.exps.dt
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6508274228385922,
					[
					[
						16,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						3828382969227175,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						8842515181072747,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								20,
								16,
								cr.plugins_.Sprite.prototype.exps.UID,
								false,
								null
							]
						]
						]
					]
					],
					[
					[
						16,
						cr.plugins_.Sprite.prototype.acts.MoveForward,
						null,
						7544986726524676,
						false
						,[
						[
							0,
							[
								21,
								16,
								false,
								null
								,0
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						2716053482262619,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							8821487267128476,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetTowardPosition,
							null,
							7895857775770069,
							false
							,[
							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
,							[
								0,
								[
									20,
									13,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.MoveForward,
							null,
							2262325521309365,
							false
							,[
							[
								0,
								[
									3,
									[
										21,
										16,
										false,
										null
										,0
									]
								]
							]
							]
						]
,						[
							16,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5363474440279499,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.distance
									,[
[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										16,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
,[
										20,
										13,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2711514718115195,
						[
						[
							-1,
							cr.system_object.prototype.cnds.PickNth,
							null,
							0,
							false,
							false,
							false,
							7325189569108291,
							false
							,[
							[
								4,
								13
							]
,							[
								0,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							13,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2151505826731249,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									0,
									-1
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Controls10"],
			false,
			null,
			2315257697785596,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2315257697785596,
				false
				,[
				[
					1,
					[
						2,
						"Controls10"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				2378954035050381,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					61193289275929,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5202213239864416,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					5748030844497091,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					1767006857120208,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					1110479191445238,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7459421735494363,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5392197382886977,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2741476194463408,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					1605654512168415,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					3477621804675917,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetMirrored,
					null,
					6766706577324827,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6428467524045654,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5790650337849462,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					9956062548007539,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3824230094188158,
					false
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					4673905694447007,
					false
					,[
					[
						1,
						[
							2,
							"runRight"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9177106028405926,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4089829789943295,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					false,
					false,
					1904366834580957,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					69748144437356,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4646350159830945,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					1809720200266847,
					false
					,[
					[
						1,
						[
							2,
							"womanRun"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9375834452069542,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2185526367632061,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					5601227515715948,
					false
					,[
					[
						4,
						36
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8104204382364344,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.behaviors.Platform.prototype.acts.SimulateControl,
					"Platform",
					8357799538890916,
					false
					,[
					[
						3,
						2
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6088334857620942,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					8518131210236913,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9246526435594335,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2957884236761213,
					false
					,[
					[
						1,
						[
							2,
							"fall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2579191745227263,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsJumping,
					"Platform",
					0,
					false,
					false,
					false,
					2437133729362328,
					false
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3952846283637568,
					false
					,[
					[
						11,
						"character"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					9257567615457649,
					false
					,[
					[
						1,
						[
							2,
							"womanFall"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3106473856453417,
				[
				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsOnFloor,
					"Platform",
					0,
					false,
					false,
					false,
					3586658461788346,
					false
				]
,				[
					17,
					cr.behaviors.Platform.prototype.cnds.IsMoving,
					"Platform",
					0,
					false,
					true,
					false,
					9134735927244833,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					679186732446152,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8406142125581953,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						5586645649965757,
						false
						,[
						[
							1,
							[
								2,
								"Default"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6147779586503827,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7829603937823982,
						false
						,[
						[
							11,
							"character"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						1898119956890654,
						false
						,[
						[
							1,
							[
								2,
								"womanStand"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8615171086873808,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					9368425241937755,
					false
					,[
					[
						4,
						75
					]
					]
				]
				],
				[
				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					2742624834793975,
					false
					,[
					[
						1,
						[
							2,
							"manLie"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "create chalk10"],
			false,
			null,
			1573599876593521,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1573599876593521,
				false
				,[
				[
					1,
					[
						2,
						"create chalk10"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9045784331479839,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					2189325118254892,
					false
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2255931126054609,
					false
					,[
					[
						4,
						22
					]
,					[
						5,
						[
							0,
							0
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7115499412999326,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7056594899883767,
					false
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					7276225993972347,
					false
				]
,				[
					22,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4029351635124102,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.random
							,[
[
								0,
								0
							]
,[
								0,
								4
							]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Die10"],
			false,
			null,
			9545911388537243,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9545911388537243,
				false
				,[
				[
					1,
					[
						2,
						"Die10"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				true,
				null,
				3285495246306755,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					3461674317821715,
					false
					,[
					[
						4,
						24
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					367436114245835,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1362370293595917,
					false
					,[
					[
						4,
						69
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8689541261363243,
					false
					,[
					[
						4,
						71
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8620721519909385,
					false
					,[
					[
						4,
						77
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					8236906032682952,
					false
					,[
					[
						4,
						78
					]
					]
				]
				],
				[
				[
					22,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7772205210954366,
					false
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					4479920478521885,
					false
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					5522544661653608,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					114244122048044,
					false
					,[
					[
						0,
						[
							20,
							25,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1347675061012566,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7393597348444092,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					17,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					2634976384706476,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					7523527182551,
					[
					[
						31,
						cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
						null,
						0,
						false,
						true,
						false,
						577802723359357,
						false
						,[
						[
							4,
							29
						]
						]
					]
					],
					[
					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						7323234637663983,
						false
						,[
						[
							4,
							29
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						31,
						cr.plugins_.Sprite.prototype.acts.Spawn,
						null,
						8338069084971529,
						false
						,[
						[
							4,
							30
						]
,						[
							5,
							[
								0,
								0
							]
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "lifeBar10"],
			false,
			null,
			803699499120313,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				803699499120313,
				false
				,[
				[
					1,
					[
						2,
						"lifeBar10"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5978517538884633,
				[
				[
					22,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					4787179600616214,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					4728124335565214,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2548287918897133,
					false
					,[
					[
						0,
						[
							23,
							"chalk"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "pickups10"],
			false,
			null,
			9254746456178968,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9254746456178968,
				false
				,[
				[
					1,
					[
						2,
						"pickups10"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9808912417514592,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					7521529665827309,
					false
					,[
					[
						4,
						30
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7595067754198922,
					false
					,[
					[
						11,
						"chalk"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3296855585634899,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					30,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					7283974290837169,
					false
				]
,				[
					30,
					cr.behaviors.lunarray_LiteTween.prototype.acts.Start,
					"LiteTween",
					6850841531925455,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					29,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					3617505865907839,
					false
				]
,				[
					26,
					cr.behaviors.Flash.prototype.acts.Flash,
					"Flash",
					9765010164463005,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							0.1
						]
					]
,					[
						0,
						[
							1,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "TURRET10"],
			false,
			null,
			6947743475372349,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6947743475372349,
				false
				,[
				[
					1,
					[
						2,
						"TURRET10"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8354385667806217,
				[
				[
					69,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					1436242035215772,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					22,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					8269525481715218,
					false
				]
,				[
					69,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					1477184187363266,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5939741507460164,
				[
				[
					13,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					true,
					false,
					7497957726178886,
					false
					,[
					[
						4,
						22
					]
					]
				]
				],
				[
				[
					13,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					3034557725192197,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4073972668075459,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					6096744232781668,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					68,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					1922779506541762,
					false
					,[
					[
						4,
						69
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5115340584743413,
				[
				[
					69,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					2982619892266575,
					false
				]
				],
				[
				[
					69,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					2663182172185663,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "cloud9"],
			false,
			null,
			6448483596504739,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6448483596504739,
				false
				,[
				[
					1,
					[
						2,
						"cloud9"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8184386600014077,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					2741021985435993,
					false
				]
				],
				[
				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					5015462018977238,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1498321907667132,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					5835694399260023,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							700
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					3062328750694092,
					false
					,[
					[
						0,
						[
							0,
							-174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					8662557938684648,
					false
					,[
					[
						0,
						[
							0,
							1824
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3124044857117728,
				[
				[
					60,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					999151529649154,
					false
					,[
					[
						8,
						0
					]
,					[
						0,
						[
							0,
							1824
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.SetWidth,
					null,
					5895736295619095,
					false
					,[
					[
						0,
						[
							0,
							174
						]
					]
					]
				]
,				[
					60,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
					"MoveTo",
					1104474580821572,
					false
					,[
					[
						0,
						[
							0,
							700
						]
					]
,					[
						0,
						[
							20,
							60,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4454820802032353,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					2906914821736179,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					60,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					6121798266749692,
					false
					,[
					[
						4,
						61
					]
,					[
						5,
						[
							2,
							"Layer 0"
						]
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9087026652662909,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					6580308171680279,
					false
				]
				],
				[
				[
					61,
					cr.behaviors.custom.prototype.acts.Accelerate,
					"CustomMovement",
					4023552442342493,
					false
					,[
					[
						3,
						2
					]
,					[
						0,
						[
							0,
							10000
						]
					]
					]
				]
,				[
					61,
					cr.plugins_.Sprite.prototype.acts.MoveToTop,
					null,
					8885682754324592,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1178776092327148,
				[
				[
					61,
					cr.plugins_.Sprite.prototype.cnds.IsOutsideLayout,
					null,
					0,
					false,
					false,
					false,
					3750835858176075,
					false
				]
				],
				[
				[
					61,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					9208845977736461,
					false
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Win10"],
			false,
			null,
			387590539790926,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				387590539790926,
				false
				,[
				[
					1,
					[
						2,
						"Win10"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8794349161936297,
				[
				[
					17,
					cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
					null,
					0,
					false,
					false,
					false,
					5356673287047002,
					false
					,[
					[
						4,
						35
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7442159553042637,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.CreateObject,
					null,
					6078817368520864,
					false
					,[
					[
						4,
						41
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						0,
						[
							0,
							448
						]
					]
,					[
						0,
						[
							0,
							-360
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8139377261577016,
				[
				[
					41,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					3070591389029929,
					false
				]
				],
				[
				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					2712858539961328,
					false
					,[
					[
						4,
						42
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					9825987791591479,
					false
					,[
					[
						4,
						43
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					7225702950689165,
					false
					,[
					[
						4,
						44
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.Spawn,
					null,
					3118076463343892,
					false
					,[
					[
						4,
						45
					]
,					[
						5,
						[
							2,
							"UI"
						]
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
,				[
					42,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					6995946150830311,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					43,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4140996666384372,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					44,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					4204056078052132,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					45,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					7109155165807662,
					false
					,[
					[
						4,
						41
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9485888729240491,
					false
					,[
					[
						11,
						"Won"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3923396647855167,
					false
					,[
					[
						11,
						"playing"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					45,
					cr.plugins_.Spritefont2.prototype.acts.SetText,
					null,
					8678014756125656,
					false
					,[
					[
						7,
						[
							23,
							"currentLevel"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3521043977470791,
				[
				[
					19,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					1560965842542471,
					false
				]
,				[
					19,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					9358321295500408,
					false
					,[
					[
						4,
						44
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					454773479260659,
					false
					,[
					[
						6,
						"Menu"
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "chopper9"],
			false,
			null,
			1825152722590444,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1825152722590444,
				false
				,[
				[
					1,
					[
						2,
						"chopper9"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8336037655939867,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8633022215092543,
					false
				]
				],
				[
				[
					71,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					8013478699025331,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4140858033191422,
				[
				[
					71,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					7315324189194333,
					false
				]
				],
				[
				[
					71,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					9039031553495101,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "chopper9"],
			false,
			null,
			2774508579661607,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2774508579661607,
				false
				,[
				[
					1,
					[
						2,
						"chopper9"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8336037655939867,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					8633022215092543,
					false
				]
				],
				[
				[
					72,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					8013478699025331,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4140858033191422,
				[
				[
					71,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					7315324189194333,
					false
				]
				],
				[
				[
					72,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					9039031553495101,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "bat6"],
			false,
			null,
			4096290975269147,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4096290975269147,
				false
				,[
				[
					1,
					[
						2,
						"bat6"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9382906170207056,
				[
				[
					78,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					7223938271535615,
					false
				]
				],
				[
				[
					78,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					9141513246250318,
					false
					,[
					[
						0,
						[
							0,
							24
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8958253969348856,
				[
				[
					78,
					cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished,
					null,
					1,
					false,
					false,
					false,
					8763511910223358,
					false
				]
				],
				[
				[
					78,
					cr.plugins_.Sprite.prototype.acts.StartAnim,
					null,
					3567239430389121,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
		]
	]
	],
	[
	],
	"media/",
	false,
	1024,
	768,
	5,
	true,
	false,
	false,
	"1.0",
	true,
	false,
	0,
	2,
	1302,
	false,
	true,
	1,
	true,
	[
	]
];};
